[{"items": [{"tags": ["tensorflow-probability"], "owner": {"account_id": 5615269, "reputation": 391, "user_id": 6057582, "user_type": "registered", "profile_image": "https://graph.facebook.com/848350359/picture?type=large", "display_name": "Borun Chowdhury", "link": "https://stackoverflow.com/users/6057582/borun-chowdhury"}, "is_answered": false, "view_count": 318, "answer_count": 1, "score": 0, "last_activity_date": 1615236196, "creation_date": 1615220752, "question_id": 66533482, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/66533482/how-do-i-make-a-custom-tensorflow-probability-layer", "title": "How do I make a custom tensorflow probability layer?", "body": "<p>I am trying to make a tensorflow probability probabilistic model that learns the linear relation as well as the error in Linear Regression. Obviously its a toy problem and as been kind of solved in <a href=\"https://www.tensorflow.org/probability/examples/Probabilistic_Layers_Regression\" rel=\"nofollow noreferrer\">an official tutorial</a>. There the model is</p>\n<pre class=\"lang-py prettyprint-override\"><code>model = tf.keras.Sequential([\n  tf.keras.layers.Dense(1 + 1),\n  tfp.layers.DistributionLambda(\n      lambda t: tfd.Normal(loc=t[..., :1],\n                           scale=1e-3 + tf.math.softplus(t[...,1:]))),\n])\n</code></pre>\n<p>The problem is that this learns the relation where the error is a function of the independent variable.</p>\n<p>If I do not want that I can make the following model</p>\n<pre class=\"lang-py prettyprint-override\"><code>std_val=tf.Variable(1.)\nmodel = Sequential([\n    Dense(1,input_shape=(1,)),\n    tfpl.DistributionLambda(lambda t: tfd.Independent(tfd.Normal(loc=t,\n                                                                 scale=std_val)))\n])\n</code></pre>\n<p>and indeed it gives the correct result but also the following warning</p>\n<pre class=\"lang-py prettyprint-override\"><code>WARNING:tensorflow:\nThe following Variables were used a Lambda layer's call (distribution_lambda_22), but\nare not present in its tracked objects:\n  &lt;tf.Variable 'Variable:0' shape=() dtype=float32&gt;\nIt is possible that this is intended behavior, but it is more likely\nan omission. This is a strong indication that this layer should be\nformulated as a subclassed Layer rather than a Lambda layer.\n</code></pre>\n<p>My question is how do I go about making the subclassed Layer the message is talking about?</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 42}]