[{"items": [{"tags": ["tensorflow", "tensorflow2.0"], "owner": {"account_id": 4793430, "reputation": 1714, "user_id": 3871961, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/15d1352dc24db7622120ce9b523a2b96?s=256&d=identicon&r=PG&f=1", "display_name": "xiawi", "link": "https://stackoverflow.com/users/3871961/xiawi"}, "is_answered": true, "view_count": 502, "accepted_answer_id": 63680337, "answer_count": 1, "score": 4, "last_activity_date": 1598925791, "creation_date": 1579036492, "question_id": 59741879, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/59741879/class-categoricalcrossentropy-versus-function-categorical-crossentropy", "title": "class CategoricalCrossentropy versus function categorical_crossentropy", "body": "<p>In Tensorflow2, I can either use the class <code>tf.keras.losses.CategoricalCrossentropy</code> (<a href=\"https://www.tensorflow.org/api_docs/python/tf/keras/losses/CategoricalCrossentropy\" rel=\"nofollow noreferrer\">defined here</a>) or the function <code>categorical_crossentropy</code> (<a href=\"https://www.tensorflow.org/api_docs/python/tf/keras/losses/categorical_crossentropy\" rel=\"nofollow noreferrer\">defined here</a>) to compute the crossentropy loss between the labels and predictions:</p>\n\n<p>For the first the code is:</p>\n\n<pre><code>     loss_object = tf.keras.losses.SparseCategoricalCrossentropy()\n     # ...\n     @tf.function\n     def train_step(samples, labels):\n        with tf.GradientTape() as tape:\n          predictions = model(samples)\n          loss = loss_object(labels, predictions)\n        #...\n\n</code></pre>\n\n<p>And the second is more direct:</p>\n\n<pre><code>   @tf.function\n    def forward(features, training=False):\n        predictions = model.call(...)\n        loss = tf.losses.categorical_crossentropy(\n                y_true=features['label'],\n                y_pred=predictions)\n        return loss, predictions\n</code></pre>\n\n<p>The numeric result is the same. However, I wonder whether there is an approach that is more efficient ? Or more generally, which one should be used according some particular case ?</p>\n\n<p>Note that the question may be the same for any class/function <a href=\"https://www.tensorflow.org/api_docs/python/tf/keras\" rel=\"nofollow noreferrer\">defined by the API</a></p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 249}]