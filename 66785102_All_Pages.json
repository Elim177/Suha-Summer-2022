[{"items": [{"tags": ["python", "tensorflow", "keras", "tensorflow2.0"], "owner": {"account_id": 20279842, "reputation": 23, "user_id": 14873908, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/fe2a5b2eb4d30d3fcd6f2bbbfab9c1d7?s=256&d=identicon&r=PG&f=1", "display_name": "Edmond", "link": "https://stackoverflow.com/users/14873908/edmond"}, "is_answered": false, "view_count": 154, "answer_count": 0, "score": 0, "last_activity_date": 1616605256, "creation_date": 1616602503, "last_edit_date": 1616605256, "question_id": 66785102, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/66785102/how-to-rectify-the-error-when-generating-a-saliency-map", "title": "How to rectify the error when generating a saliency map", "body": "<p>I'm attempting to create a function to generate the saliency map.  This is the code.</p>\n<pre><code>def do_salience(image, model, label, prefix):\n    img = cv2.imread(image)\n    img = cv2.cvtColor(img,cv2.COLOR_BGR2RGB)\n    img= cv2.resize(img,(300,300))/255.0\n    img= np.expand_dims(img,axis=0)\n\nnum_classes= 2\n\nexpected_output= tf.one_hot([label]* img.shape[0],num_classes)\n\nwith tf.GradientTape() as tape: \n    inputs = tf.cast(img,tf.float32)\n    tape.watch(inputs)\n    predictions = model(inputs)\n\nloss= tf.keras.losses.categorical_crossentropy(\n    expected_output,predictions\n)\n\nprint(predictions)\ngradients= tape.gradient(loss,inputs)\ngrayscale_tensor = tf.reduce_sum(tf.abs(gradients), axis=-1)\n\nnormalized_tensor = tf.cast(\n  255\n  * (grayscale_tensor-tf.reduce_min(grayscale_tensor))\n  / (tf.reduce_max(grayscale_tensor)-tf.reduce_min(grayscale_tensor)),\n  tf.uint8,\n )\n\nnormalized_tensor= tf.squeeze(normalized_tensor)\n\nplt.figure(figsize=(8, 8))\nplt.axis('off')\nplt.imshow(normalized_tensor, cmap='gray')\nplt.show()\n</code></pre>\n<p>This part is to superimpose the saliency map with the original image</p>\n<pre><code>gradient_color = cv2.applyColorMap(normalized_tensor.numpy(),\n                                  cv2.COLORMAP_HOT)\ngradient_color = gradient_color/255.0\nsuper_imposed = cv2.addWeighted(img,0.5,gradient_color,0.5,0.0)\n\nsalient_image_name = prefix + image\nnormalized_tensor = tf.expand_dims(normalized_tensor, -1)\nnormalized_tensor = tf.io.encode_jpeg(normalized_tensor, \n                       quality=100, format='grayscale')\nwriter = tf.io.write_file(salient_image_name, normalized_tensor)\n</code></pre>\n<p>Next, proceeding to the 'generating of saliency maps with untrained model' stage,</p>\n<pre><code>model.load_weights('0_epochs.h5')\ndo_salience('cat1.jpg', model, 0, 'epoch0_salient')\ndo_salience('cat2.jpg', model, 0, 'epoch0_salient')\ndo_salience('catanddog.jpg', model, 0, 'epoch0_salient')\ndo_salience('dog1.jpg', model, 1, 'epoch0_salient')\ndo_salience('dog2.jpg', model, 1, 'epoch0_salient')\n</code></pre>\n<p>After loading the code, I'm thrown with an error,</p>\n<p><a href=\"https://i.stack.imgur.com/WfF0k.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/WfF0k.png\" alt=\"error\" /></a></p>\n<p>I believe there is a mistake in the code where it's superimposing the saliency map. How to rectify it?</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 238}]