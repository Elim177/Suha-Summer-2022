[{"items": [{"tags": ["python", "tensorflow", "machine-learning", "keras", "autoencoder"], "owner": {"user_type": "does_not_exist", "display_name": "user11536309"}, "is_answered": false, "view_count": 292, "answer_count": 1, "score": 0, "last_activity_date": 1619353383, "creation_date": 1619009941, "question_id": 67196453, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/67196453/changing-conv2dtranspose-output-shape", "title": "Changing Conv2dTranspose Output Shape", "body": "<p>I am creating a CVAE using convd2d and conv2dtranspose. When using conv2dtranspose I cannot replicate the encoder, as the shape dimension is odd and not even. I have searched how to do this but I cannot find anything useful that works. I have added and removed different stride lengths, and adjusted padding, however it did not work. I have attached the encoder and decoder below, with their respective model summaries. The main problem is in conv2d_transpose1 where the output shape is (None, 64, 4, 32) when it should be (None, 64, 3, 32)</p>\n<pre><code>    self.latent_dim = 6\n    self.encoder = tf.keras.Sequential(\n        [\n            tf.keras.layers.InputLayer(input_shape=input_shape),\n            tf.keras.layers.Conv2D(filters=32, kernel_size=3, strides=(1, 1), activation='relu', padding='same'),\n            tf.keras.layers.Conv2D(filters=32, kernel_size=3, strides=(2, 2), activation='relu', padding='same'),\n            tf.keras.layers.Conv2D(filters=64, kernel_size=3, strides=(2, 2), activation='relu', padding='same'),\n            tf.keras.layers.Conv2D(filters=64, kernel_size=3, strides=(2, 2), activation='relu', padding='same'),\n            tf.keras.layers.Flatten(),\n            tf.keras.layers.Dense(64, activation='relu'),\n            # No activation\n            tf.keras.layers.Dense(latent_dim + latent_dim),\n\n        ]\n    )\n\n\n    self.decoder = tf.keras.Sequential(\n        [\n            tf.keras.layers.InputLayer(input_shape=(latent_dim,)),\n            tf.keras.layers.Dense(units=16 * 1 * 64, activation=tf.nn.relu),\n            tf.keras.layers.Reshape(target_shape=(16, 1, 64)),\n            tf.keras.layers.Conv2DTranspose(filters=64, kernel_size=3, strides=2, padding='same', activation='relu'),\n            tf.keras.layers.Conv2DTranspose(filters=32, kernel_size=3, strides=2, padding='same', activation='relu',),\n            # No activation\n            tf.keras.layers.Conv2DTranspose(filters=32, kernel_size=3, strides=2, padding='same', activation='relu'),\n            tf.keras.layers.Conv2D(filters=1, kernel_size=3, strides=(1, 1), padding='same'),\n        ]\n    )\n\n    Model: &quot;sequential&quot;\n_________________________________________________________________\nLayer (type)                 Output Shape              Param #   \n=================================================================\nconv2d (Conv2D)              (None, 128, 6, 32)        320       \n_________________________________________________________________\nconv2d_1 (Conv2D)            (None, 64, 3, 32)         9248      \n_________________________________________________________________\nconv2d_2 (Conv2D)            (None, 32, 2, 64)         18496     \n_________________________________________________________________\nconv2d_3 (Conv2D)            (None, 16, 1, 64)         36928     \n_________________________________________________________________\nflatten (Flatten)            (None, 1024)              0         \n_________________________________________________________________\ndense (Dense)                (None, 64)                65600     \n_________________________________________________________________\ndense_1 (Dense)              (None, 12)                780       \n=================================================================\nTotal params: 131,372\nTrainable params: 131,372\nNon-trainable params: 0\n_________________________________________________________________\nNone\nModel: &quot;sequential_1&quot;\n_________________________________________________________________\nLayer (type)                 Output Shape              Param #   \n=================================================================\ndense_2 (Dense)              (None, 1024)              7168      \n_________________________________________________________________\nreshape (Reshape)            (None, 16, 1, 64)         0         \n_________________________________________________________________\nconv2d_transpose (Conv2DTran (None, 32, 2, 64)         36928     \n_________________________________________________________________\nconv2d_transpose_1 (Conv2DTr (None, 64, 4, 32)         18464     \n_________________________________________________________________\nconv2d_transpose_2 (Conv2DTr (None, 128, 8, 32)        9248      \n_________________________________________________________________\nconv2d_4 (Conv2D)            (None, 128, 8, 1)         289       \n=================================================================\nTotal params: 72,097\nTrainable params: 72,097\nNon-trainable params: 0\n_________________________________________________________________\n</code></pre>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 160}]