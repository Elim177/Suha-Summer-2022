[{"items": [{"tags": ["python", "tensorflow", "keras"], "owner": {"user_type": "does_not_exist", "display_name": "user14360121"}, "is_answered": false, "view_count": 360, "answer_count": 1, "score": 0, "last_activity_date": 1605279344, "creation_date": 1605277734, "last_edit_date": 1605278345, "question_id": 64822693, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/64822693/no-attribute-reset-default-graph", "title": "no attribute &#39;reset_default_graph&#39;", "body": "<p>I'm implementing a LSTM NEURAL NETWORK on Tensorflow with google colab. But when I try to create a placeholder I find this error:</p>\n<pre><code>&lt;ipython-input-62-1486afa70d57&gt; in &lt;module&gt;()\n----&gt; 1 tf.reset_default_graph()\n      2 \n      3 X = tf.placeholder(tf.float32, [None, N_TIME_STEPS, N_FEATURES], name=&quot;input&quot;)\n      4 Y = tf.placeholder(tf.float32, [None, N_CLASSES])\n\nAttributeError: module 'tensorflow' has no attribute 'reset_default_graph\n</code></pre>\n<p>My code is:</p>\n<pre><code>import tensorflow as tf\nfrom keras.models import Sequential\nfrom keras.layers import Dense\nfrom keras.layers import Flatten\nfrom keras.layers import Dropout\nfrom keras.layers import LSTM\nfrom tensorflow.python.framework import ops\nN_CLASSES = 6\nN_HIDDEN_UNITS = 64\ndef create_LSTM_model(inputs):\n    W = {\n        'hidden': tf.Variable(tf.random_normal([N_FEATURES, N_HIDDEN_UNITS])),\n        'output': tf.Variable(tf.random_normal([N_HIDDEN_UNITS, N_CLASSES]))\n    }\n    biases = {\n        'hidden': tf.Variable(tf.random_normal([N_HIDDEN_UNITS], mean=1.0)),\n        'output': tf.Variable(tf.random_normal([N_CLASSES]))\n    }\n    \n    X = tf.transpose(inputs, [1, 0, 2])\n    X = tf.reshape(X, [-1, N_FEATURES])\n    hidden = tf.nn.relu(tf.matmul(X, W['hidden']) + biases['hidden'])\n    hidden = tf.split(hidden, N_TIME_STEPS, 0)\n\n    # Stack 2 LSTM layers\n    lstm_layers = [tf.contrib.rnn.BasicLSTMCell(N_HIDDEN_UNITS, forget_bias=1.0) for _ in range(2)]\n    lstm_layers = tf.contrib.rnn.MultiRNNCell(lstm_layers)\n\n    outputs, _ = tf.contrib.rnn.static_rnn(lstm_layers, hidden, dtype=tf.float32)\n\n    # Get output for the last time step\n    lstm_last_output = outputs[-1]\n\n    return tf.matmul(lstm_last_output, W['output']) + biases['output']\ntf.reset_default_graph()\n\nX = tf.placeholder(tf.float32, [None, N_TIME_STEPS, N_FEATURES], name=&quot;input&quot;)\nY = tf.placeholder(tf.float32, [None, N_CLASSES])\n\n</code></pre>\n<p>What is wrong? Someone could please help me? Thank you so much</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 143}]