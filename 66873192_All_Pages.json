[{"items": [{"tags": ["python", "tensorflow", "keras", "deep-learning", "neural-network"], "owner": {"account_id": 15116032, "reputation": 30088, "user_id": 10908375, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/L7f8w.jpg?s=256&g=1", "display_name": "Nicolas Gervais", "link": "https://stackoverflow.com/users/10908375/nicolas-gervais"}, "is_answered": false, "view_count": 5661, "answer_count": 1, "score": 2, "last_activity_date": 1617119467, "creation_date": 1617115374, "question_id": 66873192, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/66873192/subclassing-a-keras-layer-the-following-variables-were-used-a-lambda-layers-ca", "title": "Subclassing a Keras Layer: The following Variables were used a Lambda layer&#39;s call, but are not present in its tracked objects", "body": "<p>I am making a custom convolutional layer by <a href=\"https://www.tensorflow.org/tutorials/customization/custom_layers\" rel=\"nofollow noreferrer\">subclassing a Keras Layer</a>. I did this with a previous version of Tensorflow, and received no warnings:</p>\n<pre><code>import tensorflow as tf\n\n\nclass MyCustomLayer(tf.Module):\n    def __init__(self, in_channels,\n                 filters,\n                 kernel_size,\n                 padding,\n                 strides,\n                 activation,\n                 kernel_initializer,\n                 bias_initializer,\n                 use_bias):\n        super(MyCustomLayer, self).__init__()\n        self.filters = filters\n        self.kernel_size = kernel_size\n        self.activation = activation\n        self.padding = padding\n        self.kernel_initializer = kernel_initializer\n        self.bias_initializer = bias_initializer\n        self.strides = strides\n        self.use_bias = use_bias\n        self.in_channels = in_channels\n\n        self.w = tf.Variable(\n            initial_value=self.kernel_initializer(shape=(*self.kernel_size,\n                                                         in_channels,\n                                                         self.filters),\n                                 dtype='float32'), trainable=True)\n        if self.use_bias:\n            self.b = tf.Variable(\n                initial_value=self.bias_initializer(shape=(self.filters,),\n                                                    dtype='float32'),\n                trainable=True)\n\n    def __call__(self, inputs, training=None):\n        x =  tf.nn.conv2d(inputs,\n                          filters=self.w,\n                          strides=self.strides,\n                          padding=self.padding)\n        if self.use_bias:\n            x = tf.add(x, self.b)\n        x = self.activation(x)\n        return x\n\n\nx = tf.keras.Input(shape=(28, 28, 3))\ny = MyCustomLayer(\n            in_channels=3,\n            filters=16,\n            kernel_size=(3, 3),\n            strides=(1, 1),\n            activation=tf.nn.relu,\n            padding='VALID',\n            kernel_initializer=tf.initializers.GlorotUniform(),\n            bias_initializer=tf.initializers.Zeros(),\n            use_bias=True)(x)\nmodel = tf.keras.Model(inputs=x, outputs=y)\n</code></pre>\n<p>I'm getting this warning, with <code>tf.__version__ == 2.4.1</code>:</p>\n<blockquote>\n<p>WARNING:tensorflow:\nThe following Variables were used a Lambda layer's call (tf.compat.v1.nn.conv2d_12), but\nare not present in its tracked objects:\n&lt;tf.Variable 'Variable:0' shape=(3, 3, 3, 16) dtype=float32&gt;\nIt is possible that this is intended behavior, but it is more likely\nan omission. This is a strong indication that this layer should be\nformulated as a subclassed Layer rather than a Lambda layer.</p>\n</blockquote>\n<blockquote>\n<p>WARNING:tensorflow:\nThe following Variables were used a Lambda layer's call (tf.math.add_2), but\nare not present in its tracked objects:\n&lt;tf.Variable 'Variable:0' shape=(16,) dtype=float32&gt;\nIt is possible that this is intended behavior, but it is more likely\nan omission. This is a strong indication that this layer should be\nformulated as a subclassed Layer rather than a Lambda layer.</p>\n</blockquote>\n<p>What does this mean? I <strong>am</strong> using a subclassed Layer.</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 175}]