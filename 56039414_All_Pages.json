[{"items": [{"tags": ["python", "tensorflow", "tensorflow-datasets", "tensorflow2.0", "tf.keras"], "owner": {"account_id": 4328522, "reputation": 2449, "user_id": 3534616, "user_type": "registered", "accept_rate": 53, "profile_image": "https://i.stack.imgur.com/neZwu.jpg?s=256&g=1", "display_name": "Himaprasoon", "link": "https://stackoverflow.com/users/3534616/himaprasoon"}, "is_answered": true, "view_count": 1237, "answer_count": 1, "score": 3, "last_activity_date": 1557317493, "creation_date": 1557313877, "last_edit_date": 1557314216, "question_id": 56039414, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/56039414/is-tensorflow-dataset-from-generator-deprecated-in-tensorflow-2-0-it-throws-tf", "title": "Is Tensorflow Dataset.from_generator deprecated in tensorflow 2.0 ? It throws tf.py_func deprecation error", "body": "<p>When I create a tf dataset from generator and try to run tf2.0 code , It warns me with a deprication message.</p>\n\n<p>Code:</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>import tensorflow as tf\n\nfrom tensorflow.keras.layers import Dense, Flatten, Conv2D\nfrom tensorflow.keras import Model\n\n\ndef my_function():\n    import numpy as np\n    for i in range(1000):\n        yield np.random.random(size=(28, 28, 1)), [1.0]\n\n\ntrain_ds = tf.data.Dataset.from_generator(my_function, output_types=(tf.float32, tf.float32)).batch(32)\n\n\nclass MyModel(Model):\n    def __init__(self):\n        super(MyModel, self).__init__()\n        self.conv1 = Conv2D(32, 3, activation='relu')\n        self.flatten = Flatten()\n        self.d1 = Dense(128, activation='relu')\n        self.d2 = Dense(10, activation='softmax')\n\n    def call(self, x):\n        x = self.conv1(x)\n        x = self.flatten(x)\n        x = self.d1(x)\n        return self.d2(x)\n\n    # def __call__(self, *args, **kwargs):\n    #     return super().__call(*args,**kwargs)\n\n\nmodel = MyModel()\n\nloss_object = tf.keras.losses.SparseCategoricalCrossentropy()\n\noptimizer = tf.keras.optimizers.Adam()\n\ntrain_loss = tf.keras.metrics.Mean(name='train_loss')\ntrain_accuracy = tf.keras.metrics.SparseCategoricalAccuracy(name='train_accuracy')\n\n\n@tf.function\ndef train_step(images, labels):\n    with tf.GradientTape() as tape:\n        predictions = model(images)\n        loss = loss_object(labels, predictions)\n    gradients = tape.gradient(loss, model.trainable_variables)\n    optimizer.apply_gradients(zip(gradients, model.trainable_variables))\n\n    train_loss(loss)\n    train_accuracy(labels, predictions)\n\n\nEPOCHS = 5\n\nfor epoch in range(EPOCHS):\n    for images, labels in train_ds:\n        train_step(images, labels)\n    template = 'Epoch {}, Loss: {}, Accuracy: {}'\n    print(template.format(epoch + 1,\n                          train_loss.result(),\n                          train_accuracy.result() * 100))\n\n</code></pre>\n\n<p>Warning message:</p>\n\n<pre><code>........\nInstructions for updating:\ntf.py_func is deprecated in TF V2. Instead, there are two\n    options available in V2. ........\n</code></pre>\n\n<p>I would like to feed data to model from a streaming input using dataset API (with prefetch ). Even though it's still possible in the current alpha release, will it be removed later on? </p>\n\n<p>Will tensorflow replace tf.py_func used in generator dataset to something new or will the entire dataset_from generator API be removed ?</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 51}]