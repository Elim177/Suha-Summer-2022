[{"items": [{"tags": ["python", "tensorflow", "tensorflow2.0"], "owner": {"account_id": 11644193, "reputation": 111, "user_id": 8527630, "user_type": "registered", "accept_rate": 75, "profile_image": "https://i.stack.imgur.com/HvWUw.jpg?s=256&g=1", "display_name": "mCalado", "link": "https://stackoverflow.com/users/8527630/mcalado"}, "is_answered": false, "view_count": 46, "answer_count": 0, "score": 0, "last_activity_date": 1631708502, "creation_date": 1631708502, "question_id": 69193054, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/69193054/sample-2000-elements-randomly-from-tf-data", "title": "Sample 2000 elements randomly from tf.data", "body": "<p>Suppose you have a dataset containing 50,000 examples and want to sample uniformly 2000 elements.</p>\n<p>For example:</p>\n<pre><code>dataset = tf.data.TFRecordDataset(path_filename_records)\ndataset = (dataset\n           .map(parse_record, num_parallel_calls=tf.data.experimental.AUTOTUNE)\n           .batch(bs)\n           .prefetch(tf.data.experimental.AUTOTUNE)\n          )\n</code></pre>\n<p>How do you do this with tf.data?</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 186}]