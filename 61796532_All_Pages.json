[{"items": [{"tags": ["tensorflow", "tensorflow2.0", "tf.keras"], "owner": {"account_id": 4548208, "reputation": 3430, "user_id": 8089695, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/92107cb1b109e2b8281e9cb76b5e3f16?s=256&d=identicon&r=PG&f=1", "display_name": "MiloMinderbinder", "link": "https://stackoverflow.com/users/8089695/milominderbinder"}, "is_answered": true, "view_count": 258, "answer_count": 1, "score": 1, "last_activity_date": 1589477609, "creation_date": 1589456606, "last_edit_date": 1589477609, "question_id": 61796532, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/61796532/tensorflow-asking-to-run-the-build-even-though-it-is-done", "title": "Tensorflow asking to run the build even though it is done", "body": "<p>As always, tensorflow the weird dumb framework is going unintuitive haywire piece of crap on me. Can someone please be kind enough to help me out with this? I am able to run the checkpointing (how much of a mess can saving a model be? leave it to tensorflow to make a mountain out of a molehill) <a href=\"https://www.tensorflow.org/guide/checkpoint\" rel=\"nofollow noreferrer\">tutorial</a> as given on the tutorial page, but, dare i make a little modification here a little modification there. The sticks and stones contraption called tensorflow comes crumbling down.</p>\n\n<p>As you can clearly see i am running the build method but i am getting the error that i must run the build method with an input shape. In tutorial the build method is not there at all and the one layer <code>self.l1</code> is built in the <code>__init__</code> itself which, they themselves advice against at several other places</p>\n\n<pre><code>class Net(tf.keras.Model):\n  \"\"\"A simple linear model.\"\"\"\n\n  def __init__(self):\n    super(Net, self).__init__()\n    #self.l1 = tf.keras.layers.Dense(5)\n  def build(self,input_shape):\n    self.l1 = tf.keras.layers.Dense(5)\n    self.dummy = tf.Variable(trainable=True,initial_value=tf.keras.initializers.glorot_normal()(shape=input_shape,dtype=tf.float32))\n    print('built layers')\n  def call(self, x):\n    return self.l1(x)\n\nnet = Net()\nnet.build([1,])\nnet.save_weights('easy_checkpoint')\n</code></pre>\n\n<p>The output and trace i am getting is:</p>\n\n<pre><code>built layers\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n&lt;ipython-input-31-3b54dc506ffd&gt; in &lt;module&gt;\n      1 net = Net()\n      2 net.build([1,])\n----&gt; 3 net.save_weights('easy_checkpoint')\n\n~/anaconda3/envs/tensorflow/lib/python3.7/site-packages/tensorflow/python/keras/engine/network.py in save_weights(self, filepath, overwrite, save_format)\n   1111         ValueError: For invalid/unknown format arguments.\n   1112     \"\"\"\n-&gt; 1113     self._assert_weights_created()\n   1114     filepath_is_h5 = _is_hdf5_filepath(filepath)\n   1115     if save_format is None:\n\n~/anaconda3/envs/tensorflow/lib/python3.7/site-packages/tensorflow/python/keras/engine/network.py in _assert_weights_created(self)\n   1560                        'Weights are created when the Model is first called on '\n   1561                        'inputs or `build()` is called with an `input_shape`.' %\n-&gt; 1562                        self.name)\n   1563 \n   1564   def _graph_network_add_loss(self, symbolic_loss):\n\nValueError: Weights for model net_10 have not yet been created. Weights are created when the Model is first called on inputs or `build()` is called with an `input_shape`.\n</code></pre>\n\n<p>Edit: Here is my hunch: The problem with my code is that the build does not execute the build of <code>self.l1</code> but just creates it. Things do work out fine if i add <code>self.l1</code> creation in <code>__init__</code> and call <code>super().__build__()</code> as the first line in Net's build. Things make sense so far but, the code fails again if i replace <code>super().build(input_shape)</code> with <code>self.l1.build(input_shape)</code>. Also, the code belows shows that all the variables are actually there. So, i am lost again. Any help is much appreciated</p>\n\n<pre><code>tf.random.set_seed(42)\nclass Net1(tf.keras.Model):\n  \"\"\"A simple linear model.\"\"\"\n  def __init__(self):\n    super(Net1, self).__init__()\n    self.l1 = tf.keras.layers.Dense(5)\n  def build(self,input_shape):\n    super().build(input_shape)\n    self.dummy = tf.Variable(trainable=True,initial_value=tf.keras.initializers.glorot_normal()(shape=(1,),dtype=tf.float32))\n    print(self.variables)\n  def call(self, x):\n    return self.l1(x)\n\nnet = Net1()\nnet.build((10,1))\nprint('*'*50)\nprint(net.variables)\n\noutput:\n[&lt;tf.Variable 'dense_56/kernel:0' shape=(1, 5) dtype=float32, numpy=\narray([[ 0.3291242 , -0.11798644, -0.294235  , -0.07103491, -0.9326792 ]],\n      dtype=float32)&gt;, &lt;tf.Variable 'dense_56/bias:0' shape=(5,) dtype=float32, numpy=array([0., 0., 0., 0., 0.], dtype=float32)&gt;, &lt;tf.Variable 'Variable:0' shape=(1,) dtype=float32, numpy=array([0.09575049], dtype=float32)&gt;]\n**************************************************\n[&lt;tf.Variable 'dense_56/kernel:0' shape=(1, 5) dtype=float32, numpy=\narray([[ 0.3291242 , -0.11798644, -0.294235  , -0.07103491, -0.9326792 ]],\n      dtype=float32)&gt;, &lt;tf.Variable 'dense_56/bias:0' shape=(5,) dtype=float32, numpy=array([0., 0., 0., 0., 0.], dtype=float32)&gt;, &lt;tf.Variable 'Variable:0' shape=(1,) dtype=float32, numpy=array([0.09575049], dtype=float32)&gt;]\n</code></pre>\n\n<p>whereas,</p>\n\n<pre><code>tf.random.set_seed(42)\nclass Net1(tf.keras.Model):\n  \"\"\"A simple linear model.\"\"\"\n\n  def __init__(self):\n    super(Net1, self).__init__()\n    self.l1 = tf.keras.layers.Dense(5)\n  def build(self,input_shape):\n    self.l1.build(input_shape)\n    self.dummy = tf.Variable(trainable=True,initial_value=tf.keras.initializers.glorot_normal()(shape=(1,),dtype=tf.float32))\n    print('variables',self.l1.variables,self.dummy)\n  def call(self, x):\n    return self.l1(x)\n\nnet = Net1()\nnet.build((10,1))\nprint(net.variables)\n\noutput:\nvariables [&lt;tf.Variable 'kernel:0' shape=(1, 5) dtype=float32, numpy=\narray([[ 0.3291242 , -0.11798644, -0.294235  , -0.07103491, -0.9326792 ]],\n      dtype=float32)&gt;, &lt;tf.Variable 'bias:0' shape=(5,) dtype=float32, numpy=array([0., 0., 0., 0., 0.], dtype=float32)&gt;] &lt;tf.Variable 'Variable:0' shape=(1,) dtype=float32, numpy=array([0.09575049], dtype=float32)&gt;\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n&lt;ipython-input-77-35561efcdc2f&gt; in &lt;module&gt;\n     15 net = Net1()\n     16 net.build((10,1))\n---&gt; 17 print(net.variables)\n\n~/anaconda3/envs/tensorflow/lib/python3.7/site-packages/tensorflow/python/keras/engine/base_layer.py in variables(self)\n   1965       A list of variables.\n   1966     \"\"\"\n-&gt; 1967     return self.weights\n   1968 \n   1969   @property\n\n~/anaconda3/envs/tensorflow/lib/python3.7/site-packages/tensorflow/python/keras/engine/network.py in weights(self)\n    498       A list of variables.\n    499     \"\"\"\n--&gt; 500     return self._dedup_weights(self._undeduplicated_weights)\n    501 \n    502   @property\n\n~/anaconda3/envs/tensorflow/lib/python3.7/site-packages/tensorflow/python/keras/engine/network.py in _undeduplicated_weights(self)\n    503   def _undeduplicated_weights(self):\n    504     \"\"\"Returns the undeduplicated list of all layer variables/weights.\"\"\"\n--&gt; 505     self._assert_weights_created()\n    506     weights = []\n    507     for layer in self._layers:\n\n~/anaconda3/envs/tensorflow/lib/python3.7/site-packages/tensorflow/python/keras/engine/network.py in _assert_weights_created(self)\n   1560                        'Weights are created when the Model is first called on '\n   1561                        'inputs or `build()` is called with an `input_shape`.' %\n-&gt; 1562                        self.name)\n   1563 \n   1564   def _graph_network_add_loss(self, symbolic_loss):\n\nValueError: Weights for model net1_40 have not yet been created. Weights are created when the Model is first called on inputs or `build()` is called with an `input_shape`.\n</code></pre>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 171}]