[{"items": [{"tags": ["python", "tensorflow", "gradienttape"], "owner": {"account_id": 18085435, "reputation": 41, "user_id": 13146487, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2da42fc289b0974c61e2aa8cdc04c6af?s=256&d=identicon&r=PG&f=1", "display_name": "Gu Liqi", "link": "https://stackoverflow.com/users/13146487/gu-liqi"}, "is_answered": true, "view_count": 158, "answer_count": 1, "score": 2, "last_activity_date": 1585640444, "creation_date": 1585483162, "question_id": 60913915, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/60913915/tensorflow-gradienttape-does-not-trace-optimizer-apply-gradients", "title": "Tensorflow GradientTape does not trace optimizer.apply_gradients?", "body": "<pre><code>import tensorflow as tf\n\ndef f(x):\n    return tf.multiply(x, x)\n\nx = tf.Variable([3.])\n\nwith tf.GradientTape() as test_tape:\n    test_tape.watch(x)\n\n    with tf.GradientTape() as train_tape:\n        train_tape.watch(x)\n        fx = f(x)\n\n    gradient = train_tape.gradient(fx, x)  # df(x)/x = d(x^2)/dx = 2x\n    x_prime = x.__copy__()  # x' = x\n    x_prime = tf.subtract(x_prime, tf.multiply(gradient, 0.01))  # x' = x' - 0.01 * 2x = 0.98x\n    fx_prime = f(x_prime)\n\ngradient = test_tape.gradient(fx_prime, x)  # df(x')/dx = df(0.98x)/dx = 1.9208 * x = 5.7624\nprint(gradient)\n</code></pre>\n\n<p>I'm learning tensorflow2.0 GradientTape() and testing this code, which calculate a second derivative d(x-0.01*df(x)/dx)/dx. Given x = 3 and f(x) = x*x, the result is 5.7624. And the code  above get the right answer. \nThen I tried to replace the line</p>\n\n<pre><code>x_prime = tf.subtract(x_prime, tf.multiply(gradient, 0.01))\n</code></pre>\n\n<p>by </p>\n\n<pre><code>optimizer = tf.optimizers.SGD()\noptimizer.apply_gradients(zip([gradient], [x_prime]))\n</code></pre>\n\n<p>And got the wrong answer 5.88, I can't get this around and guess GradientTape does not trace apply_gradients? Does anybody know why?</p>\n\n<p>python-3.7, tensorflow-2.0.0</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 98}]