[{"items": [{"tags": ["tensorflow", "gradienttape"], "owner": {"account_id": 7094188, "reputation": 669, "user_id": 5428405, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/aab46be9e0c4169cce832a2b79e2db20?s=256&d=identicon&r=PG&f=1", "display_name": "bigskull", "link": "https://stackoverflow.com/users/5428405/bigskull"}, "is_answered": false, "view_count": 53, "answer_count": 0, "score": 0, "last_activity_date": 1631760046, "creation_date": 1631760046, "question_id": 69201755, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/69201755/how-to-calculate-second-order-gradient-using-gradienttape", "title": "How to calculate second order gradient using GradientTape?", "body": "<p>I am trying to calculate partial derivative for the below function, could you advise if this is the right way to calculate partial derivative using TensorFlow?</p>\n<pre><code>f(x,y,z) = xy+z pow 2 + 1/x\n\nx = tf.Variable(2, name='x')\ny = tf.Variable(1, name='y')\nz = tf.constant(4, name='z')\n\nwith tf.GradientTape(persistent=True) as t:\n  t.watch(x)\n  f = x*y + tf.pow(z,2) + tf.divide(1,x)\n\ng = tape.gradient(f, [x,y,z])\n\nprint(g)\n</code></pre>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 30}]