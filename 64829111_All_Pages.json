[{"items": [{"tags": ["python", "tensorflow", "machine-learning"], "owner": {"account_id": 17631532, "reputation": 35, "user_id": 13429645, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/2c74e5addc4be4fec982164e1af212c7?s=256&d=identicon&r=PG&f=1", "display_name": "Poofy38", "link": "https://stackoverflow.com/users/13429645/poofy38"}, "is_answered": true, "view_count": 421, "accepted_answer_id": 64839290, "answer_count": 1, "score": 0, "last_activity_date": 1605393068, "creation_date": 1605308417, "last_edit_date": 1605317657, "question_id": 64829111, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/64829111/tf-nightly-gpu-degrading-performance-throughout-training", "title": "tf-nightly-gpu degrading performance throughout training", "body": "<ul>\n<li>Windows 10</li>\n<li>RTX 3070</li>\n<li>CUDA 11.1</li>\n<li>cuDNN 8.0.5 (for CUDA 11.1)</li>\n<li>python 3.8.5</li>\n<li>tf-nightly-gpu 2.5.0.dev20201113</li>\n<li>using Anaconda environment</li>\n</ul>\n<p>I finally managed to get tf-nightly-gpu working with my 3070 however, while training it seems that performance exponentially drops. Starting out at 50s an epoch and increasing to over 700s an epoch. In task manager, it looks like the 3070 is barely being used after the performance has degraded for a while. I haven't really tried anything yet because I don't what to do. Any advice?</p>\n<p>Here is my full code and output:</p>\n<pre><code>import numpy as np\nimport os\nimport tensorflow as tf\nfrom keras.callbacks import EarlyStopping\nfrom keras.layers.core import Dense, Dropout, Activation, Flatten\nfrom keras.layers import Conv2D, MaxPooling2D, BatchNormalization, LeakyReLU\nfrom keras.models import Sequential\nfrom keras.preprocessing.image import ImageDataGenerator\nfrom keras.regularizers import l2\n\nconfig = tf.compat.v1.ConfigProto(gpu_options = tf.compat.v1.GPUOptions(per_process_gpu_memory_fraction=0.70))\nfor device in tf.config.experimental.list_physical_devices(&quot;GPU&quot;):\n    tf.config.experimental.set_memory_growth(device, True)\nsession = tf.compat.v1.Session(config=config)\ntf.compat.v1.keras.backend.set_session(session)\n\nIMG_SIZE = 350\nVersion = 1\nbatch_size = 8\n\nval_aug = ImageDataGenerator(rescale=1/255)\naug = ImageDataGenerator(\n        rescale=1/255, \n        rotation_range=30, \n        width_shift_range=0.1, \n        height_shift_range=0.1, \n        shear_range=0.2, \n        zoom_range=0.2, \n        channel_shift_range=25, \n        horizontal_flip=True, \n        fill_mode='constant')\n\ntrain_gen = aug.flow_from_directory('F:/Storage/DataSet_Bal/Train', \n        target_size=(IMG_SIZE, IMG_SIZE), \n        batch_size=batch_size,\n        class_mode='binary',\n        shuffle=True)\nval_gen = val_aug.flow_from_directory('F:/Storage/DataSet_Bal/Val', \n        target_size=(IMG_SIZE, IMG_SIZE), \n        batch_size=batch_size,\n        class_mode='binary',\n        shuffle=True)\n\nmodel = Sequential()\nmodel.add(Conv2D(64, 3, strides=(1,1), padding = 'same', activation = 'relu', input_shape = (IMG_SIZE, IMG_SIZE, 3)))\nmodel.add(BatchNormalization())\nmodel.add(Conv2D(64, 3, strides=(1,1), activation = 'relu'))\nmodel.add(BatchNormalization())\nmodel.add(MaxPooling2D(pool_size=(2, 2), strides=2))\nmodel.add(BatchNormalization())\n\nmodel.add(Conv2D(128, 3, strides=(1,1), activation = 'relu'))\nmodel.add(BatchNormalization())\nmodel.add(Conv2D(128, 3, strides=(1,1), activation = 'relu'))\nmodel.add(BatchNormalization())\nmodel.add(MaxPooling2D(pool_size=(2, 2), strides=2))\nmodel.add(BatchNormalization())\n\nmodel.add(Conv2D(256, 3, strides=(1,1), activation = 'relu'))\nmodel.add(BatchNormalization())\nmodel.add(Conv2D(256, 3, strides=(1,1), activation = 'relu'))\nmodel.add(BatchNormalization())\nmodel.add(MaxPooling2D(pool_size=(2, 2), strides=2))\nmodel.add(BatchNormalization())\n\nmodel.add(Conv2D(512, 3, strides=(1,1), activation = 'relu'))\nmodel.add(BatchNormalization())\nmodel.add(MaxPooling2D(pool_size=(2, 2)))\nmodel.add(BatchNormalization())\n\nmodel.add(Flatten())\nmodel.add(Dense(128, activation = 'relu'))\nmodel.add(BatchNormalization())\nmodel.add(Dropout(0.5))\nmodel.add(Dense(32, activation = 'relu'))\nmodel.add(BatchNormalization())\nmodel.add(Dropout(0.5))\n\nmodel.add(Dense(1, activation = 'sigmoid'))\n\n\nmodel.compile(loss = &quot;binary_crossentropy&quot;, optimizer = 'adam', metrics = ['accuracy'])\n#model.summary()\n\nearlyStop = EarlyStopping(monitor = 'val_accuracy', min_delta = 0.0001, patience = 50, restore_best_weights = True)\nmodel.fit(\n    train_gen,\n    workers=8,\n    epochs= 250,\n    validation_data=val_gen,\n    callbacks=earlyStop,\n    verbose=2)\n\nmodel.save(f'F:/Storage/TrainedVersions/YiffModel{Version}')\n</code></pre>\n<p>Output:</p>\n<pre><code>2020-11-13 10:36:05.885624: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library cudart64_110.dll\n2020-11-13 10:36:07.923109: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2\nTo enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.\n2020-11-13 10:36:07.925060: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library nvcuda.dll\n2020-11-13 10:36:07.966126: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1724] Found device 0 with properties: \npciBusID: 0000:01:00.0 name: GeForce RTX 3070 computeCapability: 8.6\ncoreClock: 1.725GHz coreCount: 46 deviceMemorySize: 8.00GiB deviceMemoryBandwidth: 417.29GiB/s\n2020-11-13 10:36:07.966451: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library cudart64_110.dll\n2020-11-13 10:36:07.973267: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library cublas64_11.dll\n2020-11-13 10:36:07.973467: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library cublasLt64_11.dll\n2020-11-13 10:36:07.977131: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library cufft64_10.dll\n2020-11-13 10:36:07.978353: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library curand64_10.dll\n2020-11-13 10:36:07.986944: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library cusolver64_10.dll\n2020-11-13 10:36:07.990210: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library cusparse64_11.dll\n2020-11-13 10:36:07.991036: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library cudnn64_8.dll\n2020-11-13 10:36:07.991349: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1866] Adding visible gpu devices: 0\n2020-11-13 10:36:08.537694: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1265] Device interconnect StreamExecutor with strength 1 edge matrix:\n2020-11-13 10:36:08.537864: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1271]      0 \n2020-11-13 10:36:08.537967: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1284] 0:   N \n2020-11-13 10:36:08.538347: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1410] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 5734 MB memory) -&gt; physical GPU (device: 0, name: GeForce RTX 3070, pci bus id: 0000:01:00.0, compute capability: 8.6)\n2020-11-13 10:36:08.539462: I tensorflow/compiler/jit/xla_gpu_device.cc:99] Not creating XLA devices, tf_xla_enable_xla_devices not set\nWARNING:tensorflow:From e:\\PYTHON\\YiffMiner\\TrainYIFF.py:15: The name tf.keras.backend.set_session is deprecated. Please use tf.compat.v1.keras.backend.set_session instead.\n\n2020-11-13 10:36:08.659266: I tensorflow/compiler/jit/xla_cpu_device.cc:41] Not creating XLA devices, tf_xla_enable_xla_devices not set\n2020-11-13 10:36:08.659494: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1724] Found device 0 with properties: \npciBusID: 0000:01:00.0 name: GeForce RTX 3070 computeCapability: 8.6\ncoreClock: 1.725GHz coreCount: 46 deviceMemorySize: 8.00GiB deviceMemoryBandwidth: 417.29GiB/s\n2020-11-13 10:36:08.659873: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library cudart64_110.dll\n2020-11-13 10:36:08.660078: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library cublas64_11.dll\n2020-11-13 10:36:08.660248: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library cublasLt64_11.dll\n2020-11-13 10:36:08.660466: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library cufft64_10.dll\n2020-11-13 10:36:08.660683: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library curand64_10.dll\n2020-11-13 10:36:08.660912: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library cusolver64_10.dll\n2020-11-13 10:36:08.661140: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library cusparse64_11.dll\n2020-11-13 10:36:08.661317: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library cudnn64_8.dll\n2020-11-13 10:36:08.661570: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1866] Adding visible gpu devices: 0\n2020-11-13 10:36:08.662123: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1724] Found device 0 with properties: \npciBusID: 0000:01:00.0 name: GeForce RTX 3070 computeCapability: 8.6\ncoreClock: 1.725GHz coreCount: 46 deviceMemorySize: 8.00GiB deviceMemoryBandwidth: 417.29GiB/s\n2020-11-13 10:36:08.662477: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library cudart64_110.dll\n2020-11-13 10:36:08.662692: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library cublas64_11.dll\n2020-11-13 10:36:08.662877: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library cublasLt64_11.dll\n2020-11-13 10:36:08.663105: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library cufft64_10.dll\n2020-11-13 10:36:08.663290: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library curand64_10.dll\n2020-11-13 10:36:08.663528: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library cusolver64_10.dll\n2020-11-13 10:36:08.663727: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library cusparse64_11.dll\n2020-11-13 10:36:08.663931: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library cudnn64_8.dll\n2020-11-13 10:36:08.664231: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1866] Adding visible gpu devices: 0\n2020-11-13 10:36:08.664427: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1265] Device interconnect StreamExecutor with strength 1 edge matrix:\n2020-11-13 10:36:08.664608: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1271]      0 \n2020-11-13 10:36:08.664718: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1284] 0:   N \n2020-11-13 10:36:08.664948: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1410] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 5734 MB memory) -&gt; physical GPU (device: 0, name: GeForce RTX 3070, pci bus id: 0000:01:00.0, compute capability: 8.6)\n2020-11-13 10:36:08.665299: I tensorflow/compiler/jit/xla_gpu_device.cc:99] Not creating XLA devices, tf_xla_enable_xla_devices not set\n2020-11-13 10:36:09.429191: I tensorflow/compiler/mlir/mlir_graph_optimization_pass.cc:126] None of the MLIR optimization passes are enabled (registered 2)\n2020-11-13 10:36:11.556454: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library cudnn64_8.dll\n2020-11-13 10:36:12.526029: I tensorflow/stream_executor/cuda/cuda_dnn.cc:344] Loaded cuDNN version 8005\n2020-11-13 10:36:13.224088: I tensorflow/core/platform/windows/subprocess.cc:308] SubProcess ended with return code: 0\n\n2020-11-13 10:36:13.264015: I tensorflow/core/platform/windows/subprocess.cc:308] SubProcess ended with return code: 0\n\n2020-11-13 10:36:13.345749: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library cublas64_11.dll\n2020-11-13 10:36:14.220640: I tensorflow/stream_executor/platform/default/dso_loader.cc:49] Successfully opened dynamic library cublasLt64_11.dll\n2020-11-13 10:36:15.740837: I tensorflow/stream_executor/cuda/cuda_blas.cc:1838] TensorFloat-32 will be used for the matrix multiplication. This will only be logged once.\nC:\\Users\\circu\\anaconda3\\envs\\tf2\\python.exe\nFound 3266 images belonging to 2 classes.\nFound 86 images belonging to 2 classes.\nEpoch 1/250\n409/409 - 63s - loss: 0.8360 - accuracy: 0.5113 - val_loss: 0.7363 - val_accuracy: 0.5000\nEpoch 2/250\n409/409 - 51s - loss: 0.7559 - accuracy: 0.4951 - val_loss: 0.6892 - val_accuracy: 0.4651\nEpoch 3/250\n409/409 - 51s - loss: 0.7106 - accuracy: 0.5211 - val_loss: 0.6842 - val_accuracy: 0.4884\nEpoch 4/250\n409/409 - 50s - loss: 0.6959 - accuracy: 0.5380 - val_loss: 0.6874 - val_accuracy: 0.5465\nEpoch 5/250\n409/409 - 50s - loss: 0.6918 - accuracy: 0.5508 - val_loss: 0.7049 - val_accuracy: 0.5465\nEpoch 6/250\n409/409 - 50s - loss: 0.6875 - accuracy: 0.5554 - val_loss: 0.6623 - val_accuracy: 0.5814\nEpoch 7/250\n409/409 - 50s - loss: 0.6813 - accuracy: 0.5652 - val_loss: 0.6630 - val_accuracy: 0.6047\nEpoch 8/250\n409/409 - 50s - loss: 0.6770 - accuracy: 0.5720 - val_loss: 0.6815 - val_accuracy: 0.5698\nEpoch 9/250\n409/409 - 50s - loss: 0.6843 - accuracy: 0.5517 - val_loss: 0.7317 - val_accuracy: 0.6047\nEpoch 10/250\n409/409 - 50s - loss: 0.6791 - accuracy: 0.5765 - val_loss: 0.6666 - val_accuracy: 0.6047\nEpoch 11/250\n409/409 - 50s - loss: 0.6751 - accuracy: 0.5870 - val_loss: 0.6628 - val_accuracy: 0.6163\nEpoch 12/250\n409/409 - 50s - loss: 0.6654 - accuracy: 0.5989 - val_loss: 0.6964 - val_accuracy: 0.5465\nEpoch 13/250\n409/409 - 50s - loss: 0.6703 - accuracy: 0.5928 - val_loss: 0.6455 - val_accuracy: 0.6395\nEpoch 14/250\n409/409 - 50s - loss: 0.6722 - accuracy: 0.5814 - val_loss: 0.6470 - val_accuracy: 0.6395\nEpoch 15/250\n409/409 - 51s - loss: 0.6675 - accuracy: 0.5946 - val_loss: 0.6208 - val_accuracy: 0.6628\nEpoch 16/250\n409/409 - 52s - loss: 0.6710 - accuracy: 0.5882 - val_loss: 0.6413 - val_accuracy: 0.6860\nEpoch 17/250\n409/409 - 55s - loss: 0.6696 - accuracy: 0.5937 - val_loss: 0.9023 - val_accuracy: 0.5465\nEpoch 18/250\n409/409 - 58s - loss: 0.6763 - accuracy: 0.5860 - val_loss: 0.6736 - val_accuracy: 0.5814\nEpoch 19/250\n409/409 - 62s - loss: 0.6790 - accuracy: 0.5848 - val_loss: 0.6366 - val_accuracy: 0.6163\nEpoch 20/250\n409/409 - 66s - loss: 0.6716 - accuracy: 0.5943 - val_loss: 0.5956 - val_accuracy: 0.6860\nEpoch 21/250\n409/409 - 65s - loss: 0.6745 - accuracy: 0.5824 - val_loss: 0.6232 - val_accuracy: 0.6279\nEpoch 22/250\n409/409 - 69s - loss: 0.6675 - accuracy: 0.6038 - val_loss: 0.6290 - val_accuracy: 0.6512\nEpoch 23/250\n409/409 - 73s - loss: 0.6670 - accuracy: 0.6007 - val_loss: 0.6173 - val_accuracy: 0.6744\nEpoch 24/250\n409/409 - 77s - loss: 0.6583 - accuracy: 0.6139 - val_loss: 0.7856 - val_accuracy: 0.6163\nEpoch 25/250\n409/409 - 82s - loss: 0.6656 - accuracy: 0.6035 - val_loss: 0.5991 - val_accuracy: 0.7093\nEpoch 26/250\n409/409 - 86s - loss: 0.6561 - accuracy: 0.6234 - val_loss: 0.6191 - val_accuracy: 0.6047\nEpoch 27/250\n409/409 - 90s - loss: 0.6593 - accuracy: 0.6081 - val_loss: 0.7744 - val_accuracy: 0.5581\nEpoch 28/250\n409/409 - 95s - loss: 0.6630 - accuracy: 0.6035 - val_loss: 1.0304 - val_accuracy: 0.5698\nEpoch 29/250\n409/409 - 100s - loss: 0.6620 - accuracy: 0.5977 - val_loss: 0.6371 - val_accuracy: 0.6512\nEpoch 30/250\n409/409 - 105s - loss: 0.6499 - accuracy: 0.6197 - val_loss: 0.5892 - val_accuracy: 0.6512\nEpoch 31/250\n409/409 - 110s - loss: 0.6589 - accuracy: 0.6179 - val_loss: 0.6426 - val_accuracy: 0.6163\nEpoch 32/250\n409/409 - 116s - loss: 0.6542 - accuracy: 0.6139 - val_loss: 0.6295 - val_accuracy: 0.6279\nEpoch 33/250\n409/409 - 122s - loss: 0.6557 - accuracy: 0.6240 - val_loss: 0.5679 - val_accuracy: 0.7442\nEpoch 34/250\n409/409 - 127s - loss: 0.6515 - accuracy: 0.6219 - val_loss: 0.6137 - val_accuracy: 0.6512\nEpoch 35/250\n409/409 - 133s - loss: 0.6510 - accuracy: 0.6283 - val_loss: 0.6011 - val_accuracy: 0.6860\nEpoch 36/250\n409/409 - 140s - loss: 0.6495 - accuracy: 0.6332 - val_loss: 0.6108 - val_accuracy: 0.6163\nEpoch 37/250\n409/409 - 146s - loss: 0.6450 - accuracy: 0.6219 - val_loss: 0.6034 - val_accuracy: 0.6860\nEpoch 38/250\n409/409 - 153s - loss: 0.6444 - accuracy: 0.6320 - val_loss: 0.6000 - val_accuracy: 0.6860\nEpoch 39/250\n409/409 - 161s - loss: 0.6599 - accuracy: 0.6056 - val_loss: 0.6403 - val_accuracy: 0.5930\nEpoch 40/250\n409/409 - 168s - loss: 0.6466 - accuracy: 0.6332 - val_loss: 0.6008 - val_accuracy: 0.6047\nEpoch 41/250\n409/409 - 177s - loss: 0.6494 - accuracy: 0.6277 - val_loss: 0.6248 - val_accuracy: 0.6047\nEpoch 42/250\n409/409 - 184s - loss: 0.6458 - accuracy: 0.6286 - val_loss: 0.6352 - val_accuracy: 0.5581\nEpoch 43/250\n409/409 - 193s - loss: 0.6320 - accuracy: 0.6445 - val_loss: 0.6383 - val_accuracy: 0.6279\nEpoch 44/250\n409/409 - 203s - loss: 0.6468 - accuracy: 0.6231 - val_loss: 0.7030 - val_accuracy: 0.5465\nEpoch 45/250\n409/409 - 212s - loss: 0.6365 - accuracy: 0.6467 - val_loss: 0.6000 - val_accuracy: 0.6977\nEpoch 46/250\n409/409 - 221s - loss: 0.6351 - accuracy: 0.6494 - val_loss: 0.5629 - val_accuracy: 0.7326\nEpoch 47/250\n409/409 - 231s - loss: 0.6378 - accuracy: 0.6482 - val_loss: 0.6051 - val_accuracy: 0.6628\nEpoch 48/250\n409/409 - 241s - loss: 0.6342 - accuracy: 0.6473 - val_loss: 0.5751 - val_accuracy: 0.6860\nEpoch 49/250\n409/409 - 293s - loss: 0.6365 - accuracy: 0.6424 - val_loss: 0.5925 - val_accuracy: 0.6395\nEpoch 50/250\n409/409 - 262s - loss: 0.6351 - accuracy: 0.6399 - val_loss: 0.6040 - val_accuracy: 0.6744\nEpoch 51/250\n409/409 - 278s - loss: 0.6380 - accuracy: 0.6356 - val_loss: 0.6200 - val_accuracy: 0.6512\nEpoch 52/250\n409/409 - 286s - loss: 0.6351 - accuracy: 0.6436 - val_loss: 0.6334 - val_accuracy: 0.6395\nEpoch 53/250\n409/409 - 300s - loss: 0.6369 - accuracy: 0.6454 - val_loss: 0.6013 - val_accuracy: 0.7093\nEpoch 54/250\n409/409 - 312s - loss: 0.6352 - accuracy: 0.6430 - val_loss: 0.5895 - val_accuracy: 0.6628\nEpoch 55/250\n409/409 - 318s - loss: 0.6385 - accuracy: 0.6445 - val_loss: 0.6480 - val_accuracy: 0.5814\nEpoch 56/250\n409/409 - 336s - loss: 0.6340 - accuracy: 0.6448 - val_loss: 0.5963 - val_accuracy: 0.6395\nEpoch 57/250\n409/409 - 350s - loss: 0.6288 - accuracy: 0.6513 - val_loss: 0.6665 - val_accuracy: 0.5465\nEpoch 58/250\n409/409 - 360s - loss: 0.6267 - accuracy: 0.6528 - val_loss: 0.5441 - val_accuracy: 0.6860\nEpoch 59/250\n409/409 - 374s - loss: 0.6221 - accuracy: 0.6540 - val_loss: 0.5957 - val_accuracy: 0.6395\nEpoch 60/250\n409/409 - 383s - loss: 0.6181 - accuracy: 0.6604 - val_loss: 0.6006 - val_accuracy: 0.6744\nEpoch 61/250\n409/409 - 397s - loss: 0.6289 - accuracy: 0.6494 - val_loss: 0.6211 - val_accuracy: 0.6628\nEpoch 62/250\n409/409 - 416s - loss: 0.6250 - accuracy: 0.6500 - val_loss: 0.5410 - val_accuracy: 0.6977\nEpoch 63/250\n409/409 - 429s - loss: 0.6222 - accuracy: 0.6647 - val_loss: 0.7609 - val_accuracy: 0.4767\nEpoch 64/250\n409/409 - 443s - loss: 0.6295 - accuracy: 0.6479 - val_loss: 0.6089 - val_accuracy: 0.6628\nEpoch 65/250\n409/409 - 456s - loss: 0.6452 - accuracy: 0.6326 - val_loss: 0.6687 - val_accuracy: 0.5814\nEpoch 66/250\n409/409 - 562s - loss: 0.6400 - accuracy: 0.6363 - val_loss: 0.5692 - val_accuracy: 0.7209\nEpoch 67/250\n409/409 - 658s - loss: 0.6267 - accuracy: 0.6445 - val_loss: 0.5671 - val_accuracy: 0.7209\nEpoch 68/250\n409/409 - 523s - loss: 0.6283 - accuracy: 0.6549 - val_loss: 0.5553 - val_accuracy: 0.6977\nEpoch 69/250\n409/409 - 524s - loss: 0.6513 - accuracy: 0.6258 - val_loss: 0.6875 - val_accuracy: 0.5465\nEpoch 70/250\n409/409 - 543s - loss: 0.6652 - accuracy: 0.5980 - val_loss: 0.6886 - val_accuracy: 0.6047\nEpoch 71/250\n409/409 - 558s - loss: 0.6457 - accuracy: 0.6310 - val_loss: 0.6871 - val_accuracy: 0.5930\nEpoch 72/250\n409/409 - 576s - loss: 0.6360 - accuracy: 0.6310 - val_loss: 0.6281 - val_accuracy: 0.6395\nEpoch 73/250\n409/409 - 597s - loss: 0.6598 - accuracy: 0.6096 - val_loss: 0.6684 - val_accuracy: 0.5349\nEpoch 74/250\n409/409 - 613s - loss: 0.6526 - accuracy: 0.6139 - val_loss: 0.6379 - val_accuracy: 0.5698\nEpoch 75/250\n409/409 - 627s - loss: 0.6405 - accuracy: 0.6381 - val_loss: 0.6337 - val_accuracy: 0.5581\nEpoch 76/250\n409/409 - 650s - loss: 0.6306 - accuracy: 0.6555 - val_loss: 0.6146 - val_accuracy: 0.5814\nEpoch 77/250\n409/409 - 669s - loss: 0.6244 - accuracy: 0.6479 - val_loss: 0.6165 - val_accuracy: 0.6279\nEpoch 78/250\n409/409 - 678s - loss: 0.6313 - accuracy: 0.6513 - val_loss: 0.5995 - val_accuracy: 0.6512\nEpoch 79/250\n409/409 - 702s - loss: 0.6297 - accuracy: 0.6473 - val_loss: 0.6190 - val_accuracy: 0.6163\nEpoch 80/250\n409/409 - 732s - loss: 0.6212 - accuracy: 0.6540 - val_loss: 0.6515 - val_accuracy: 0.5581\n\n[Done] exited with code=1 in 20909.362 seconds\n</code></pre>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 140}]