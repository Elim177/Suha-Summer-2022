[{"items": [{"tags": ["python", "tensorflow", "keras", "jupyter-notebook", "google-colaboratory"], "owner": {"user_type": "does_not_exist", "display_name": "user12724454"}, "is_answered": true, "view_count": 300, "answer_count": 1, "score": 0, "last_activity_date": 1606503669, "creation_date": 1606477636, "question_id": 65036852, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/65036852/shapes-are-incompatible-with-keras-functional-model-and-vgg16-model", "title": "Shapes are incompatible with Keras Functional Model and VGG16 model", "body": "<p>I'm a little lost right now trying to merge my own model layers using Keras Functional API and layers from a VGG16 model into one new model. I need to add new layers after block3_pool with my custom ones. There is 8 classes that will be used (Fashion Mnist). All images are scaled up from 28x28 to 32x32. This is how far I've come:</p>\n<pre><code># VGG16 Model\nvgg_model = VGG16(include_top=False, weights='imagenet', input_shape=(32, 32, 3), classes=8)\nvgg_model.save_weights('vgg.model')\n# vgg_model.summary()\n\nfor layer in model.layers:\n   layer.trainable = False\n\ninputs = Input(shape=(4, 4,))\nx = tf.keras.layers.Dense(64, activation=tf.nn.relu)(inputs)\noutputs = tf.keras.layers.Dense(8, activation=tf.nn.softmax)(x)\n\nnew_model = tf.keras.Model(inputs=inputs, outputs=outputs, name='new_model')\nnew_model.load_weights('vgg.model')\n\nblock3_pool = vgg_model.get_layer('block3_pool').output\n\n# Now combine the two models\nfull_output = new_model(block3_pool)\nfull_model = Model(inputs=vgg_model.input, outputs=full_output)\nfull_model.summary()\n</code></pre>\n<p>When trying to run this code I get the following error in Google Colab:</p>\n<pre><code>/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/tensor_shape.py in assert_is_compatible_with(self, other)\n   1132     &quot;&quot;&quot;\n   1133     if not self.is_compatible_with(other):\n-&gt; 1134       raise ValueError(&quot;Shapes %s and %s are incompatible&quot; % (self, other))\n   1135 \n   1136   def most_specific_compatible_shape(self, other):\n\nValueError: Shapes (4, 64) and (3, 3, 3, 64) are incompatible\n</code></pre>\n<p>I do not seem to understand completely why that is and what I have to do to make it work.</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 129}]