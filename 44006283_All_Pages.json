[{"items": [{"tags": ["python", "tensorflow"], "owner": {"account_id": 26373, "reputation": 43816, "user_id": 68571, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/Yw9Lg.png?s=256&g=1", "display_name": "VansFannel", "link": "https://stackoverflow.com/users/68571/vansfannel"}, "is_answered": true, "view_count": 1125, "answer_count": 1, "score": 1, "last_activity_date": 1494977287, "creation_date": 1494950363, "question_id": 44006283, "content_license": "CC BY-SA 3.0", "link": "https://stackoverflow.com/questions/44006283/negative-dimension-size-caused-by-subtracting-2-from-1-for-max-pooling2d-3-maxp", "title": "Negative dimension size caused by subtracting 2 from 1 for &#39;max_pooling2d_3/MaxPool&#39;", "body": "<p>I'm newbie with Python and Tensorflow and now I'm trying to learn DC GAN. I have implemented this version of discriminator:</p>\n\n<pre><code>def discriminator(images, reuse=False, alpha=0.2):\n    with tf.variable_scope('discriminator', reuse=reuse):\n\n        x1 = tf.layers.conv2d(images, 128, 5, strides=2, padding='same')\n        pool1 = tf.layers.max_pooling2d(inputs=x1, pool_size=[2, 2], strides=2)\n        relu1 = tf.maximum(alpha * pool1, pool1)\n\n        x2 = tf.layers.conv2d(relu1, 256, 5, strides=2, padding='same')\n        pool2 = tf.layers.max_pooling2d(inputs=x2, pool_size=[2, 2], strides=2)\n        bn2 = tf.layers.batch_normalization(pool2, training=True)\n        relu2 = tf.maximum(alpha * bn2, bn2)\n\n        x3 = tf.layers.conv2d(relu2, 512, 5, strides=2, padding='same')\n        pool3 = tf.layers.max_pooling2d(inputs=x3, pool_size=[2, 2], strides=2)\n        bn3 = tf.layers.batch_normalization(pool3, training=True)\n        relu3 = tf.maximum(alpha * bn3, bn3)\n\n        x4 = tf.layers.conv2d(relu2, 512, 5, strides=2, padding='same')\n        pool4 = tf.layers.max_pooling2d(inputs=x4, pool_size=[2, 2], strides=2)\n        bn4 = tf.layers.batch_normalization(pool4, training=True)\n        relu4 = tf.maximum(alpha * bn4, bn4)\n\n        flat = tf.reshape(relu3, (-1, 4*4*256))\n        logits = tf.layers.dense(flat, 1)\n        out = tf.sigmoid(logits)\n\n        return out, logits\n</code></pre>\n\n<p>But when I try to run it, I get this error:</p>\n\n<pre><code>---------------------------------------------------------------------------\nInvalidArgumentError                      Traceback (most recent call last)\n/home/oalarcon/anaconda3/envs/ml/lib/python3.6/site-packages/tensorflow/python/framework/common_shapes.py in _call_cpp_shape_fn_impl(op, input_tensors_needed, input_tensors_as_shapes_needed, debug_python_shape_fn, require_shape_fn)\n    669           node_def_str, input_shapes, input_tensors, input_tensors_as_shapes,\n--&gt; 670           status)\n    671   except errors.InvalidArgumentError as err:\n\n/home/oalarcon/anaconda3/envs/ml/lib/python3.6/contextlib.py in __exit__(self, type, value, traceback)\n     88             try:\n---&gt; 89                 next(self.gen)\n     90             except StopIteration:\n\n/home/oalarcon/anaconda3/envs/ml/lib/python3.6/site-packages/tensorflow/python/framework/errors_impl.py in raise_exception_on_not_ok_status()\n    468           compat.as_text(pywrap_tensorflow.TF_Message(status)),\n--&gt; 469           pywrap_tensorflow.TF_GetCode(status))\n    470   finally:\n\nInvalidArgumentError: Negative dimension size caused by subtracting 2 from 1 for 'max_pooling2d_3/MaxPool' (op: 'MaxPool') with input shapes: [?,1,1,512].\n</code></pre>\n\n<p>I get this error after adding all the pooling layers.</p>\n\n<p>Any idea about how to solve it?</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 106}]