[{"items": [{"tags": ["python", "class", "tensorflow", "image-processing", "callback"], "owner": {"user_type": "does_not_exist", "display_name": "user14190332"}, "is_answered": true, "view_count": 185, "accepted_answer_id": 63655694, "answer_count": 1, "score": 0, "last_activity_date": 1598777768, "creation_date": 1598771817, "last_edit_date": 1598776971, "question_id": 63654938, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/63654938/i-intiated-a-callback-but-it-not-work-as-defined", "title": "I Intiated a callback but it not work as defined", "body": "<p>I am writing a code to predict the happy or sad person face using tensor flow and I defined a callback class as:</p>\n<pre><code>class myCallback(tf.keras.callbacks.Callback):\n  def on_epoch_end(self, epoch, logs={}):\n    if(logs.get('accuracy')&gt;DESIRED_ACCURACY):\n      print(&quot;\\nReached 99.9% accuracy so cancelling training!&quot;)\n      self.model.stop_training = True\n\ncallbacks = myCallback()\n\n</code></pre>\n<p>But it returns this :</p>\n<p><a href=\"https://i.stack.imgur.com/z2FpD.png\" rel=\"nofollow noreferrer\">Model Traning</a></p>\n<p>As one can see\nIt  returns the message which it is suppose to print but the model doesn't stop training\nas it should have done as I coded last line of class as <code>self.model.stop_training = True</code></p>\n<p>So kindly suggest what is the reason</p>\n<p>Edit : here is the full code I used to create and run model</p>\n<pre><code>import tensorflow as tf\nimport os\nimport zipfile\n\n\nDESIRED_ACCURACY = 0.999\n\n!wget --no-check-certificate \\\n    &quot;https://storage.googleapis.com/laurencemoroney-blog.appspot.com/happy-or-sad.zip&quot; \\\n    -O &quot;/tmp/happy-or-sad.zip&quot;\n\nzip_ref = zipfile.ZipFile(&quot;/tmp/happy-or-sad.zip&quot;, 'r')\nzip_ref.extractall(&quot;/tmp/h-or-s&quot;)\nzip_ref.close()\n\nclass myCallback(tf.keras.callbacks.Callback):\n  def on_epoch_end(self , epochs , logs={}):\n    if(logs.get('accuracy')&gt;DESIRED_ACCURACY):\n      print('\\nend')\n      self.model.stop_traning = True\ncallbacks = myCallback()\n\n# This Code Block should Define and Compile the Model\nmodel = tf.keras.models.Sequential([\n                                    tf.keras.layers.Conv2D(16 , (3,3) , activation = 'relu' , input_shape = (150, 150 , 3)),\n                                    tf.keras.layers.MaxPool2D(2,2),\n                                    tf.keras.layers.Conv2D(32 , (3,3) , activation = 'relu'),\n                                    tf.keras.layers.MaxPool2D(2,2),\n                                    tf.keras.layers.Conv2D(32 , (3,3) , activation = 'relu'),\n                                    tf.keras.layers.MaxPool2D(2,2),\n                                    tf.keras.layers.Flatten(),\n                                    tf.keras.layers.Dense(512 , activation = 'relu'),\n                                    tf.keras.layers.Dense(1 , activation = 'sigmoid')\n\n])\n\nfrom tensorflow.keras.optimizers import RMSprop\n\nmodel.compile(loss = 'binary_crossentropy' , optimizer = RMSprop(lr = 0.001) , metrics = ['accuracy'])\nmodel.summary()\n\n\n# Data genrator\n\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\n\ntrain_datagen = ImageDataGenerator(rescale = 1/255)\n\n\ntrain_generator = train_datagen.flow_from_directory(\n        '/tmp/h-or-s' , \n        target_size = (150,150),\n        batch_size = 8,\n        class_mode = 'binary' )\n\nhistory = model.fit(\n      train_generator , steps_per_epoch = 8 , epochs = 15 , callbacks = [callbacks], verbose = 1)\n\n\n</code></pre>\n<p>Please have a look and find bug , I don't get the right stuff\nThanks:)</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 61}]