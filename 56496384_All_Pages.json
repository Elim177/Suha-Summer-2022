[{"items": [{"tags": ["tensorflow", "keras", "deep-learning", "keras-layer", "tf.keras"], "owner": {"account_id": 4548208, "reputation": 3430, "user_id": 8089695, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/92107cb1b109e2b8281e9cb76b5e3f16?s=256&d=identicon&r=PG&f=1", "display_name": "MiloMinderbinder", "link": "https://stackoverflow.com/users/8089695/milominderbinder"}, "is_answered": false, "view_count": 1104, "answer_count": 1, "score": 0, "last_activity_date": 1569291050, "creation_date": 1559918219, "last_edit_date": 1559918439, "question_id": 56496384, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/56496384/what-is-the-expected-behavior-and-purpose-of-model-trainable-false-in-tensorflow", "title": "What is the expected behavior and purpose of model.trainable=False in tensorflow keras", "body": "<p>It seems setting <code>model.trainable=False</code> in tensorflow keras does nothing except for to print a wrong model.summary(). Here is the code to reproduce the issue:</p>\n\n<pre><code>import tensorflow as tf\nimport numpy as np\nIMG_SHAPE = (160, 160, 3)\n\n# Create the base model from the pre-trained model MobileNet V2\nbase_model = tf.keras.applications.MobileNetV2(input_shape=IMG_SHAPE,\n                                               include_top=False, \n                                               weights='imagenet')\nbase_model.trainable = False\n# for layer in base_model.layers:\n#     layer.trainable=False\nbc=[] #before compile\nac=[] #after compile\nfor layer in base_model.layers:\n    bc.append(layer.trainable)\nprint(np.all(bc)) #True\nprint(base_model.summary()) ##this changes to show no trainable parameters but that  is wrong given the output to previous np.all(bc)\nbase_model.compile(optimizer=tf.keras.optimizers.Adam(lr=0.001), \n              loss='categorical_crossentropy', \n              metrics=['accuracy'])\nfor layer in base_model.layers:\n    ac.append(layer.trainable)\nprint(np.all(ac)) #True\nprint(base_model.summary()) #this changes to show no trainable parameters but that  is wrong given the output to previous np.all(ac)\n</code></pre>\n\n<p>In light of this - What is the expected behavior and purpose of model.trainable=False in tensorflow keras?</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 163}]