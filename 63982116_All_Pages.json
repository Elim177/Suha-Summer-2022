[{"items": [{"tags": ["tensorflow", "python", "keras"], "migrated_from": {"other_site": {"styling": {"tag_background_color": "#FFF", "tag_foreground_color": "#000", "link_color": "#0077CC"}, "related_sites": [{"relation": "meta", "api_site_parameter": "ai.meta", "site_url": "https://ai.meta.stackexchange.com", "name": "Artificial Intelligence Meta Stack Exchange"}, {"relation": "chat", "site_url": "https://chat.stackexchange.com?tab=site&host=ai.stackexchange.com", "name": "Chat Stack Exchange"}], "markdown_extensions": ["MathJax"], "launch_date": 1639665491, "open_beta_date": 1471907237, "closed_beta_date": 1470164400, "site_state": "normal", "high_resolution_icon_url": "https://cdn.sstatic.net/Sites/ai/Img/apple-touch-icon@2.png", "favicon_url": "https://cdn.sstatic.net/Sites/ai/Img/favicon.ico", "icon_url": "https://cdn.sstatic.net/Sites/ai/Img/apple-touch-icon.png", "audience": "people interested in conceptual questions about life and challenges in a world where &quot;cognitive&quot; functions can be mimicked in purely digital environment", "site_url": "https://ai.stackexchange.com", "api_site_parameter": "ai", "logo_url": "https://cdn.sstatic.net/Sites/ai/Img/apple-touch-icon.png", "name": "Artificial Intelligence", "site_type": "main_site"}, "on_date": 1600625066, "question_id": 23612}, "owner": {"user_type": "does_not_exist", "display_name": "devPoppin"}, "is_answered": true, "view_count": 5982, "answer_count": 1, "score": 4, "last_activity_date": 1601396909, "creation_date": 1600188857, "question_id": 63982116, "link": "https://stackoverflow.com/questions/63982116/layer-dense-expects-1-inputs-but-it-received-2-input-tensors-how-do-i-change", "title": "Layer dense expects 1 input(s), but it received 2 input tensors, how do I change that", "body": "<p>So I am a beginner, just approaching tensorflow2 and keras, I was just playing around and trying to make some models when i stumbled across the following error:</p>\n<pre><code>Traceback (most recent call last):\n  File &quot;/home/arch_poppin/dev/AI/reviews/rev.py&quot;, line 7, in &lt;module&gt;\n    x = layers.Dense(8, activation='relu')([input1, input2])\n  File &quot;/usr/lib/python3.8/site-packages/tensorflow/python/keras/engine/base_layer.py&quot;, line 930, in __call__\n    return self._functional_construction_call(inputs, args, kwargs,\n  File &quot;/usr/lib/python3.8/site-packages/tensorflow/python/keras/engine/base_layer.py&quot;, line 1068, in _functional_construction_call\n    outputs = self._keras_tensor_symbolic_call(\n  File &quot;/usr/lib/python3.8/site-packages/tensorflow/python/keras/engine/base_layer.py&quot;, line 801, in _keras_tensor_symbolic_call\n    return self._infer_output_signature(inputs, args, kwargs, input_masks)\n  File &quot;/usr/lib/python3.8/site-packages/tensorflow/python/keras/engine/base_layer.py&quot;, line 841, in _infer_output_signature\n    self._maybe_build(inputs)\n  File &quot;/usr/lib/python3.8/site-packages/tensorflow/python/keras/engine/base_layer.py&quot;, line 2647, in _maybe_build\n    input_spec.assert_input_compatibility(\n  File &quot;/usr/lib/python3.8/site-packages/tensorflow/python/keras/engine/input_spec.py&quot;, line 204, in assert_input_compatibility\n    raise ValueError('Layer ' + layer_name + ' expects ' +\nValueError: Layer dense expects 1 input(s), but it received 2 input tensors. Inputs received: [&lt;tf.Tensor 'Placeholder:0' shape=(None,) dtype=float32&gt;, &lt;tf.Tensor 'Placeholder_1:0' shape=(None,) dtype=float32&gt;].\n</code></pre>\n<p>How do I get my dense layer to accept the output of the two preceding layers as input? My code\nis the following:</p>\n<pre><code>X1 = tf.constant([2, 3, 4, 5, 6, 7])\nX2 = tf.constant([2, 3, 4, 5, 6, 7])\nyTrain = tf.constant([4, 6, 8, 10, 12, 14])\n\ninput1 = keras.Input(shape=(X1.shape[1:]))\ninput2 = keras.Input(shape=(X2.shape[1:]))\nx = layers.Dense(8, activation='relu')([input1, input2])\noutputs = layers.Dense(2)(x)\nmlp = keras.Model(input1, input2, outputs)\n\nmlp.compile(loss='mean_squared_error',\n            optimizer='adam', metrics=['accuracy'])\n\nmlp.fit(X1, X2, yTrain, batch_size=1, epochs=10, validation_split=0.2,\n        shuffle=True)\n\nmlp.evaluate(X1, X2, yTrain)\n<span class=\"math-container\">```</span>\n</code></pre>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 182}]