[{"items": [{"tags": ["python", "numpy", "tensorflow"], "owner": {"user_type": "does_not_exist", "display_name": "user12331287"}, "is_answered": true, "view_count": 47, "accepted_answer_id": 58837950, "answer_count": 1, "score": 1, "last_activity_date": 1573650785, "creation_date": 1573650140, "question_id": 58837759, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/58837759/implement-simple-linear-algebra-operation-in-tensorflow", "title": "Implement simple linear algebra operation in tensorflow", "body": "<p>Given some (n,m) matrix X with columns x_1, ..., x_m, I am trying to find an op that gives me either the 3-mode tensor [x_1 x_1^T, ..., x_m x_m^T] with shape (m, n,n) or the (n**2, m) matrix with columns vec(x_1 x_1^T),...,vec(x_m x_m^T) where vec is the vectorization of the matrices x_i x_i^T.</p>\n\n<p>In other words, I am trying to generalize</p>\n\n<pre><code>tf.tensordot(a,a,axes=0)\n</code></pre>\n\n<p>or </p>\n\n<pre><code>tf.tensordot(a,a,axes=0).reshape(-1,1)\n</code></pre>\n\n<p>from vectors a to the columns of a matrix. Is there a way to get this done without having to rely on a loop?</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 27}]