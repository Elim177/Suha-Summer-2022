[{"items": [{"tags": ["python", "tensorflow", "nan", "loss"], "owner": {"user_type": "does_not_exist", "display_name": "user10229833"}, "is_answered": true, "view_count": 88, "accepted_answer_id": 56893893, "answer_count": 1, "score": 0, "last_activity_date": 1562271793, "creation_date": 1562271210, "question_id": 56893828, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/56893828/why-does-tensorflow-operation-lead-to-nan", "title": "Why does tensorflow operation lead to NaN?", "body": "<p>When I call tf.reduce_sum() or tf.nn.l2_loss(), I get NaN as result, why is that so?</p>\n\n<p>I have tried something like this:</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>sess.run(tf.reduce_mean(tf.clip_by_value(forward,1e-10,1.0)))\nOut[18]: nan\n</code></pre>\n\n<p>but the result is also nan..</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>forward\nOut[17]: \narray([[0.93465865],\n       [0.96060896],\n       [0.9346889 ],\n       ...,\n       [0.97003865],\n       [0.9155061 ],\n       [0.94954056]], dtype=float32)\n\nexpected\nOut[10]: \narray([[0.],\n       [0.],\n       [0.],\n       ...,\n       [0.],\n       [0.],\n       [0.]], dtype=float32)\n\nsess.run(tf.reduce_sum(forward))\nOut[14]: nan\n\nresultToPrint = tf.nn.l2_loss(forward - expected+1e-8, name=\"squared_error_cost\")\nergebnis = sess.run(resultToPrint)\n</code></pre>\n\n<p>ergebnis is also NaN..</p>\n\n<p>The expected result is NOT NaN, but an actual result. As I am very new to TensorFlow, I really would appreciate any good advise and explanations, thanks a lot! :)</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 43}]