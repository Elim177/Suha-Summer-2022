[{"items": [{"tags": ["python", "tensorflow"], "owner": {"account_id": 15431754, "reputation": 115, "user_id": 11132990, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-UrWvwsqq96g/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3reENO33h3T0yU1f4pXQ-INTRJ8wFQ/mo/photo.jpg?sz=256", "display_name": "jshackle", "link": "https://stackoverflow.com/users/11132990/jshackle"}, "is_answered": true, "view_count": 75, "accepted_answer_id": 62489595, "answer_count": 1, "score": 0, "last_activity_date": 1592691823, "creation_date": 1592668131, "question_id": 62488108, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/62488108/reformat-tensor-in-tensorflow", "title": "Reformat Tensor in Tensorflow", "body": "<p>I have a tensor of data which is the output of a net in Tensorflow, however, I want to reformat it into a larger batch size composed of elements of the original tensor. That wasn't very clear, so let's say the output of my net is a tensor with shape (10, 1000, 1) - (batch_size, length, features), and I want to reformat it so that I now have (500, 10, 1) which are 500 vectors of length ten from the original data set.</p>\n<p>I am familiar with numpy, so I was just going to use that but you can only use numpy with EagerTensors. I'm not sure if this is an additional problem, but I am attempting a GAN network so the code looks like:</p>\n<pre><code>with tf.GradientTape() as gen_tape, tf.GradientTape() as disc_tape:\n    generated = generator(noise, training=True)\n    generated = reformat(generated)\n    fake_output = discriminator(generated, training=True)\n    real_output = discriminator(real, training=True)\n    gen_loss = generator_loss(fake_output)\n    disc_loss = discriminator_loss(real_output, fake_output)\n\ngradients_of_generator = gen_tape.gradient(gen_loss, generator.trainable_variables)\ngradients_of_discriminator = disc_tape.gradient(disc_loss, discriminator.trainable_variables)\n\ngenerator_optimizer.apply_gradients(zip(gradients_of_generator, generator.trainable_variables))\ndiscriminator_optimizer.apply_gradients(...)\n</code></pre>\n<p>I mention this as I am unsure if reformatting the data in this context would mess up the training.</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 10}]