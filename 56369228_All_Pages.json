[{"items": [{"tags": ["tensorflow", "keras", "tf.keras", "transfer-learning", "mobilenet"], "owner": {"account_id": 4548208, "reputation": 3430, "user_id": 8089695, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/92107cb1b109e2b8281e9cb76b5e3f16?s=256&d=identicon&r=PG&f=1", "display_name": "MiloMinderbinder", "link": "https://stackoverflow.com/users/8089695/milominderbinder"}, "is_answered": true, "view_count": 1245, "accepted_answer_id": 56378663, "answer_count": 1, "score": 1, "last_activity_date": 1559220587, "creation_date": 1559168056, "question_id": 56369228, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/56369228/how-to-add-a-few-layers-before-the-model-in-transfer-learning-with-tensorflow", "title": "How to add a few layers before the model in transfer learning with tensorflow", "body": "<p>I am trying to use transfer learning in tensorflow. I know the high level paradigm </p>\n\n<pre><code>base_model=MobileNet(weights='imagenet',include_top=False) #imports the \n\nmobilenet model and discards the last 1000 neuron layer.\n\nx=base_model.output\nx=GlobalAveragePooling2D()(x)\nx=Dense(1024,activation='relu')(x) #we add dense layers so that the model can learn more complex functions and classify for better results.\nx=Dense(1024,activation='relu')(x) #dense layer 2\nx=Dense(512,activation='relu')(x) #dense layer 3\npreds=Dense(120,activation='softmax')(x) #final layer with softmax activation\n</code></pre>\n\n<p>and then one compiles it by</p>\n\n<pre><code>model=Model(inputs=base_model.input,outputs=preds)\n</code></pre>\n\n<p>However i want the there to be a few other layers before the base_model.input. I want to add adversarial noise to the images that come in and a few other things. So effectively i want to know how to :</p>\n\n<pre><code>base_model=MobileNet(weights='imagenet',include_top=False) #imports the \n\nmobilenet model and discards the last 1000 neuron layer\n\nx = somerandomelayers(x_in)\nbase_model.input = x_in\nx=base_model.output\nx=GlobalAveragePooling2D()(x)\nx=Dense(1024,activation='relu')(x) #we add dense layers so that the model can learn more complex functions and classify for better results.\nx=Dense(1024,activation='relu')(x) #dense layer 2\nx=Dense(512,activation='relu')(x) #dense layer 3\npreds=Dense(120,activation='softmax')(x) #final layer with softmax activation\nmodel=Model(inputs=x_in,outputs=preds)\n</code></pre>\n\n<p>but the line <code>base_model.input = x_in</code> is apparently not the way to do it as it throws <code>can't set attribute</code> error. How do i go about achieving the desired behavior?</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 161}]