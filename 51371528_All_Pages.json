[{"items": [{"tags": ["tensorflow", "tensorflow-datasets", "tfrecord"], "owner": {"account_id": 7112658, "reputation": 914, "user_id": 6393479, "user_type": "registered", "accept_rate": 55, "profile_image": "https://i.stack.imgur.com/WKBE5.jpg?s=256&g=1", "display_name": "Uchiha Madara", "link": "https://stackoverflow.com/users/6393479/uchiha-madara"}, "is_answered": true, "view_count": 5295, "answer_count": 1, "score": 1, "last_activity_date": 1531805406, "creation_date": 1531786121, "question_id": 51371528, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/51371528/reading-images-from-tfrecord-using-dataset-api-and-showing-them-on-jupyter-noteb", "title": "Reading Images from TFrecord using Dataset API and showing them on Jupyter notebook", "body": "<p>I created a tfrecord from a folder of images, now I want to iterate over entries in TFrecord file using Dataset API and show them on Jupyter notebook. However I'm facing problems with reading tfrecord file.</p>\n\n<p>Code I used to create TFRecord</p>\n\n<pre><code>def _bytes_feature(value):\n    return tf.train.Feature(bytes_list=tf.train.BytesList(value=[value]))\n\ndef _int64_feature(value):\n    return tf.train.Feature(int64_list=tf.train.Int64List(value=[value]))\n\ndef generate_tfr(image_list):\n    with tf.python_io.TFRecordWriter(output_path) as writer:\n        for image in images:\n            image_bytes = open(image,'rb').read()\n            image_array = imread(image)\n            image_shape = image_array.shape\n            image_x, image_y, image_z = image_shape[0],image_shape[1], image_shape[2]\n\n            data = {\n\n              'image/bytes':_bytes_feature(image_bytes),\n              'image/x':_int64_feature(image_x),\n              'image/y':_int64_feature(image_y),\n              'image/z':_int64_feature(image_z)\n            }\n\n            features = tf.train.Features(feature=data)\n            example = tf.train.Example(features=features)\n            serialized = example.SerializeToString()\n            writer.write(serialized)\n</code></pre>\n\n<p>Code to read TFRecord</p>\n\n<pre><code>#This code is incomplete and has many flaws. \n#Please give some suggestions in correcting this code if you can\n\ndef parse(serialized):\n    features = \\\n    {\n        'image/bytes': tf.FixedLenFeature([], tf.string),\n        'image/x': tf.FixedLenFeature([], tf.int64),\n        'image/y': tf.FixedLenFeature([], tf.int64),\n        'image/z': tf.FixedLenFeature([], tf.int64)\n    }\n\n    parsed_example = tf.parse_single_example(serialized=serialized,features=features)\n    image = parsed_example['image/bytes']\n    image = tf.decode_raw(image,tf.uint8)\n    x = parsed_example['image/x'] # breadth\n    y = parsed_example['image/y'] # height\n    z = parsed_example['image/z'] # depth\n    image = tf.cast(image,tf.float32)\n\n    # how can I reshape image tensor here? tf.reshape throwing some weird errors.\n\n    return {'image':image,'x':x,'y':y,'z':z}\n\n\n\ndataset = tf.data.TFRecordDataset([output_path])\ndataset.map(parse)\niterator = dataset.make_one_shot_iterator()\nnext_element = iterator.get_next()\nepoch = 1\n\nwith tf.Session() as sess:\n    for _ in range(epoch):\n    img = next_element.eval()\n    print(img)\n    # when I print image, it shows byte code.\n    # How can I convert it to numpy array and then show image on my jupyter notebook ?\n</code></pre>\n\n<p>I've never worked with any of this before and I'm stuck at reading TFRecords. Please answer how to iterate over the contents of TFrecords and show them on Jupyter notebook. Feel free to correct/optimize both pieces of code. That would help me a lot. </p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 35}]