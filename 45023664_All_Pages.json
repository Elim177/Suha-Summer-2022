[{"items": [{"tags": ["python", "image", "tensorflow"], "owner": {"user_type": "does_not_exist", "display_name": "user5593270"}, "is_answered": true, "view_count": 589, "accepted_answer_id": 45026556, "answer_count": 2, "score": 0, "last_activity_date": 1499755516, "creation_date": 1499734042, "question_id": 45023664, "content_license": "CC BY-SA 3.0", "link": "https://stackoverflow.com/questions/45023664/tensorflow-valueerror-setting-an-array-element-with-a-sequence-with-images", "title": "Tensorflow ValueError: setting an array element with a sequence with images", "body": "<p>I've looked through many forum sites trying to find out the solution but can't get it.</p>\n\n<p>I am trying to use Tensorflow (Python 3, Win 10 64 bit) with my own set of images. When I run it, I get a ValueError. Specifically:</p>\n\n<pre><code>Traceback (most recent call last):\n  File \"B:\\Josh\\Programming\\Python\\imgpredict\\predict.py\", line 62, in &lt;module&gt;\n    sess.run(train_step, feed_dict={imgs:batchX, lbls: batchY})\n  File \"C:\\Users\\Josh\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 789, in run\n    run_metadata_ptr)\n  File \"C:\\Users\\Josh\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 968, in _run\n    np_val = np.asarray(subfeed_val, dtype=subfeed_dtype)\n  File \"C:\\Users\\Josh\\AppData\\Local\\Programs\\Python\\Python36\\lib\\site-packages\\numpy\\core\\numeric.py\", line 531, in asarray\n    return array(a, dtype, copy=False, order=order)\nValueError: setting an array element with a sequence.\n</code></pre>\n\n<p>My code is:</p>\n\n<pre><code>import tensorflow as tf\nimport numpy as np\nimport os\nimport sys\nimport cv2\n\n\ncontent = [] # Where images are stored\nlabels_list = []\n\n\n########## File opening function\nwith open(\"data/cats/files.txt\") as ff:\n    for line in ff:\n        line = line.rstrip()\n        content.append(line)\n#################################\n\n########## Labels opening function\nwith open(\"data/cats/labels.txt\") as fff:\n    for linee in fff:\n        linee = linee.rstrip()\n        labels_list.append(linee)\n    labels_list = np.array(labels_list)\n###############################\n\n\ndef create_batches(batch_size):\n    images1 = []\n    for img1 in content:\n        thedata = cv2.imread(img1)\n        thedata = tf.contrib.layers.flatten(thedata)\n        images1.append(thedata)\n    images1 = np.asarray(images1)\n\n    images1 = np.array(images1)\n\n    while(True):\n        for i in range(0,298,10):\n            yield(images1[i:i+batch_size],labels_list[i:i+batch_size])\n\n\nimgs = tf.placeholder(dtype=tf.float32,shape=[None,262144])\nlbls = tf.placeholder(dtype=tf.float32,shape=[None,10])\n\nW = tf.Variable(tf.zeros([262144,10]))\nb = tf.Variable(tf.zeros([10]))\n\ny_ = tf.nn.softmax(tf.matmul(imgs,W) + b)\n\ncross_entropy = tf.reduce_mean(-tf.reduce_sum(lbls * tf.log(y_),reduction_indices=[1]))\ntrain_step = tf.train.GradientDescentOptimizer(0.05).minimize(cross_entropy)\n\nsess = tf.InteractiveSession()\ntf.global_variables_initializer().run()\nfor i in range(10000):#########################################\n    for (batchX,batchY) in create_batches(10):\n        for inn, imgs in enumerate(batchX):\n            batchX[inn] = imgs.eval()\n        sess.run(train_step, feed_dict={imgs:batchX, lbls: batchY})\n\ncorrect_prediction = tf.equal(tf.argmax(y_,1),tf.argmax(lbls,1))\naccuracy = tf.reduce_mean(tf.cast(correct_prediction,tf.float32))\n\nprint(sess.run(accuracy, feed_dict={imgs:content, lbls:labels_list}))\n</code></pre>\n\n<p>I don't know if the error is from my images, or my labels. I've tried lot's of suggestions from other SO questions, Reddit, Google Plus, GitHub Issues, etc but to no avail. My GitHub link for the project is: <a href=\"https://github.com/supamonkey2000/jm-uofa\" rel=\"nofollow noreferrer\">https://github.com/supamonkey2000/jm-uofa</a></p>\n\n<p>and the project folder is \"imgpredict\"</p>\n\n<p>Any help appreciated. Thanks in advance</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 101}]