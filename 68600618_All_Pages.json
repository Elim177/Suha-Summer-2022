[{"items": [{"tags": ["python-3.x", "tensorflow2.0"], "owner": {"account_id": 18965181, "reputation": 3, "user_id": 13839828, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4725145d64190b073216799613cb6fcf?s=256&d=identicon&r=PG&f=1", "display_name": "FarnazKH", "link": "https://stackoverflow.com/users/13839828/farnazkh"}, "is_answered": true, "view_count": 140, "accepted_answer_id": 68600712, "answer_count": 1, "score": 0, "last_activity_date": 1627722639, "creation_date": 1627721703, "question_id": 68600618, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/68600618/model-trainable-variables-return-none", "title": "model.trainable_variables return none", "body": "<p>I want to write my custom training function, but I couldn't access my trainable_weights because it returns []. I can get the weights using layer.get_weight() but my trainable_variables are empty. this is my training method:</p>\n<pre><code>def train_on_batch(X, y_real,model):\n  with tf.GradientTape() as tape:\n  tape.watch(X)\n  y_pred = model(X, training= True)\n  print(model.trainable_variables)\n  loss_value = loss(y_real, y_pred)\ngrads = tape. gradient(loss_value, model.trainable_variables)\noptimizer.apply_gradients(zip(grads, model.trainable_variables))\nreturn loss_value\n</code></pre>\n<p>and this is my part of CNN model:</p>\n<pre><code>model_list = list()\n# base model input\nin_image = Input(shape=input_shape)\n# conv 1x1\nd = Conv2D(128, (1,1), padding='same', kernel_initializer=init, kernel_constraint= const)(in_image)\nd = LeakyReLU(alpha=0.2)(d)\n# conv 3x3 (output block)\nd = MinibatchStdev()(d)\nd = Conv2D(128, (3,3), padding='same', kernel_initializer=init, kernel_constraint= const)(d)\nd = LeakyReLU(alpha=0.2)(d)\n# conv 4x4\nd = Conv2D(128, (4,4), padding='same', kernel_initializer=init, kernel_constraint= const)(d)\nd = LeakyReLU(alpha=0.2)(d)\n# dense output layer\nd = Flatten()(d)\nout_class = Dense(1, name='dense')(d)\nprint(type(out_class))\n# define model\nmodel = Model(in_image, out_class)\n</code></pre>\n<p>enter code here</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 92}]