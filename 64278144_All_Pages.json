[{"items": [{"tags": ["tensorflow", "deep-learning", "computer-vision", "ocr", "transfer-learning"], "owner": {"user_type": "does_not_exist", "display_name": "user12308216"}, "is_answered": false, "view_count": 165, "answer_count": 2, "score": 0, "last_activity_date": 1603265046, "creation_date": 1602238905, "question_id": 64278144, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/64278144/how-should-i-improve-my-accuracy-in-transfer-learning", "title": "How should I improve my accuracy in Transfer learning?", "body": "<p><strong>I am training a model for Optical Character Recognition of Gujarati Language. The input image is a character image. I have taken 37 classes. Total training images are 22200 (600 per class) and testing images are 5920 (160 per class). My input images are 32x32 in size.</strong></p>\n<p><strong>Below is my code:</strong></p>\n<pre><code>from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Conv2D\nfrom tensorflow.keras.layers import MaxPooling2D\nfrom tensorflow.keras.layers import Flatten\nfrom tensorflow.keras.layers import Dense\n\n\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Dense, Dropout, Activation, Flatten\nfrom tensorflow.keras.layers import Convolution2D, MaxPooling2D\nfrom tensorflow.keras.utils import to_categorical\nfrom tensorflow.keras.layers import BatchNormalization\nfrom tensorflow.keras.layers import MaxPool2D\nfrom tensorflow.keras.layers import ReLU\n\nfrom tensorflow.keras.callbacks import TensorBoard\nimport pickle\nimport time\n\nfrom datetime import datetime\nfrom packaging import version\n\nimport tensorflow as tf\nfrom tensorflow import keras\n\nimport numpy as np\nfrom tensorflow.keras import layers\n\nmodel = tf.keras.applications.DenseNet121(include_top=False, weights='imagenet', pooling='max', input_shape=(32,32,3))\n\nmodel.trainable = True\nprint(&quot;Number of layers in the base model: &quot;, len(model.layers))\n\nfine_tune_at = 400\nfor layer in model.layers[:fine_tune_at]:\n    layer.trainable =  False\n    \nbase_outputs = model.layers[-1].output \n\nfinal_outputs = layers.Dense(37)(base_outputs)\nnew_model = keras.Model(inputs=model.input, outputs=final_outputs)\nnew_model.summary()  \n\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\n\ntrain_datagen = ImageDataGenerator(\n                                   shear_range=0.2,\n                                   zoom_range=0.2,\n                                   \n                                   \n                                   horizontal_flip=False)\n\ntest_datagen = ImageDataGenerator(horizontal_flip = False)\n\ntraining_set = train_datagen.flow_from_directory('C:/Users/shweta/Desktop/characters/train',\n                                                 target_size = (32, 32),\n                                                 batch_size = 64,\n                                                 class_mode = 'categorical')\n\ntest_set = test_datagen.flow_from_directory('C:/Users/shweta/Desktop/characters/test',\n                                            target_size = (32, 32),\n                                            batch_size = 64,\n                                            class_mode = 'categorical')\n\nnew_model.compile(optimizer = 'adam', loss = 'categorical_crossentropy', metrics = ['accuracy'])\n\nnew_model.fit_generator(training_set,\n                        \n                         epochs = 25,\n                         validation_data = test_set, shuffle=True)\nnew_model.save('alphanumeric.mod')\n</code></pre>\n<p><strong>Below is my output:</strong></p>\n<p><a href=\"https://i.stack.imgur.com/nO7ny.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/nO7ny.png\" alt=\"Output accuracy\" /></a></p>\n<p>Thanks in advance!!</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 170}]