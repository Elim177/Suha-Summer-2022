[{"items": [{"tags": ["python-3.x", "tensorflow", "tensorflow2.0"], "owner": {"account_id": 285031, "reputation": 5218, "user_id": 583464, "user_type": "registered", "accept_rate": 87, "profile_image": "https://www.gravatar.com/avatar/931448dc20c10c1b799bb9dba38b5e58?s=256&d=identicon&r=PG", "display_name": "George", "link": "https://stackoverflow.com/users/583464/george"}, "is_answered": true, "view_count": 8257, "accepted_answer_id": 55150833, "answer_count": 1, "score": 6, "last_activity_date": 1552540419, "creation_date": 1552039074, "last_edit_date": 1552510832, "question_id": 55060736, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/55060736/tensorflow-2-api-regression-tensorflow-python-framework-ops-eagertensor-object", "title": "tensorflow 2 api regression tensorflow.python.framework.ops.EagerTensor&#39; object is not callable", "body": "<p>I am trying to implement a multivariate regression using tensorflow 2 api.</p>\n\n<pre><code>import tensorflow as tf\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ndf = pd.DataFrame({'A': np.array([100, 105.4, 108.3, 111.1, 113, 114.7]),\n                   'B': np.array([11, 11.8, 12.3, 12.8, 13.1,13.6]),\n                   'C': np.array([55, 56.3, 57, 58, 59.5, 60.4]),\n                   'Target': np.array([4000, 4200.34, 4700, 5300, 5800, 6400])})\n\nX = df.iloc[:, :3].values\nY = df.iloc[:, 3].values\n\nplt.scatter(X[:, 0], Y)\nplt.show()\n\nX = tf.convert_to_tensor(X, dtype=tf.float32)\nY = tf.convert_to_tensor(Y, dtype=tf.float32)\n\ndef poly_model(X, w, b):\n    mult = tf.matmul(X, w)\n    pred = tf.add(tf.matmul(X, w), b)\n    return pred\n\nw = tf.cast(tf.Variable(np.random.randn(3, 1), name='weight'), tf.float32)\nb = tf.Variable(np.random.randn(), name='bias')\n\nmodel = poly_model(X, w, b)\n\ncost = tf.reduce_sum(tf.square(Y - model))\n\ntrain_op = tf.optimizers.SGD(0.001)\n\ntrain_op.minimize(cost, var_list=[w])\n</code></pre>\n\n<p>At the last line it throws me:</p>\n\n<p><code>tensorflow.python.framework.ops.EagerTensor' object is not callable</code></p>\n\n<p>Also, I am a bit confused:</p>\n\n<p>1) How to proceed without using Session.\nJust do something like : <code>output = train_op(X)</code>?</p>\n\n<p>2) Do I need to use <code>tf.GradientTape() as tape</code> or this is only for graphs?</p>\n\n<p>-- error trace -- </p>\n\n<pre><code>TypeError                                 Traceback (most recent call last)\n&lt;ipython-input-1-ffbbbe1a3709&gt; in &lt;module&gt;()\n     32 train_op = tf.optimizers.SGD(0.001)\n     33 \n---&gt; 34 train_op.minimize(cost, var_list=[w])\n\n~/anaconda3/envs/dpl/lib/python3.6/site-packages/tensorflow/python/keras/optimizer_v2/optimizer_v2.py in minimize(self, loss, var_list, grad_loss, name)\n    294     \"\"\"\n    295     grads_and_vars = self._compute_gradients(\n--&gt; 296         loss, var_list=var_list, grad_loss=grad_loss)\n    297 \n    298     return self.apply_gradients(grads_and_vars, name=name)\n\n~/anaconda3/envs/dpl/lib/python3.6/site-packages/tensorflow/python/keras/optimizer_v2/optimizer_v2.py in _compute_gradients(self, loss, var_list, grad_loss)\n    326     with backprop.GradientTape() as tape:\n    327       tape.watch(var_list)\n--&gt; 328       loss_value = loss()\n    329     grads = tape.gradient(loss_value, var_list, grad_loss)\n    330 \n\nTypeError: 'tensorflow.python.framework.ops.EagerTensor' object is not callable\n</code></pre>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 270}]