[{"items": [{"tags": ["python", "tensorflow", "loss-function", "conv-neural-network"], "owner": {"account_id": 26373, "reputation": 43816, "user_id": 68571, "user_type": "registered", "accept_rate": 79, "profile_image": "https://i.stack.imgur.com/Yw9Lg.png?s=256&g=1", "display_name": "VansFannel", "link": "https://stackoverflow.com/users/68571/vansfannel"}, "is_answered": true, "view_count": 113, "answer_count": 1, "score": 0, "last_activity_date": 1591770172, "creation_date": 1591765760, "question_id": 62296278, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/62296278/how-to-count-how-many-times-appear-a-value-on-a-2d-tensor-uniquewithcounts-only", "title": "how to count how many times appear a value on a 2D Tensor: UniqueWithCounts only supports 1D Tensor", "body": "<p>I'm learning Tensorflow 2.10, with Python 3.7.7.</p>\n\n<p>I'm trying to use the tutorial \"<a href=\"https://www.tensorflow.org/tutorials/customization/custom_training_walkthrough\" rel=\"nofollow noreferrer\">Tensorflow - Custom training: walkthrough</a>\" to use my own loss function.</p>\n\n<p>This is my first version of loss function, and it works:</p>\n\n<pre><code>def loss(model, x, y):\n  output = model(x)\n  return tf.norm(y - output)\n</code></pre>\n\n<p>I have changed to try another one, and it doesn't work:</p>\n\n<pre><code>def my_loss(model, x, y):\n  output = model(x)\n\n  # Only valid values for output var are 0.0 and 1.0.\n  output_np = np.array(output)\n  output_np[output_np &gt;= 0.5] = 1.0\n  output_np[output_np &lt; 0.5] = 0.0\n\n  # Counts how many 1.0 are on y var.\n  unique, counts = np.unique(y, return_counts=True)\n  dict_wmh = dict(zip(unique, counts))  \n  wmh_count = 0\n  if 1.0 in dict_wmh:\n    wmh_count = dict_wmh[1.0]\n\n  # Add y and output to get another array.\n  c = y + output_np\n  unique, counts = np.unique(c, return_counts=True)\n  dict_net = dict(zip(unique, counts))\n\n  # Counts how many 2.0 are on this new array.\n  net_count = 0\n  if 2.0 in dict_net:\n    net_count = dict_net[2.0]\n\n  # Return the different between the number of ones in the label and the network output.\n  return wmh_count - net_count\n</code></pre>\n\n<p>But I can use it because my new loss function \"<a href=\"https://stackoverflow.com/a/62191901/68571\">interrupts the gradient chain registered by the gradient tape</a>\".</p>\n\n<p>So, I have tried to use only Tensorflow Tensor:</p>\n\n<pre><code>def my_loss_tensor(model, x, y):\n  output = model(x)\n\n  # Only valid values for output var are 0.0 and 1.0.\n  output = tf.math.round(output)\n  output = tf.clip_by_value(output, clip_value_min=0.0, clip_value_max=1.0)\n\n  # Counts how many 1.0 are on y var (WMH mask).\n  y_ele, y_idx, y_count = tf.unique_with_counts(y)\n\n  # Add output to WMH mask.\n  sum = tf.math.add(output, y)\n\n  # Counts how many 2.0 are on the sum.\n  sum_ele, sum_idx, sum_count = tf.unique_with_counts(sum)\n\n  return tf.math.subtract(sum_count[sum_ele == 1.0], y_count[y_ele == 2.0])\n</code></pre>\n\n<p><code>x</code> is a <code>tf.Tensor([[[[...]]]], shape=(1, 200, 200, 1), dtype=float32)</code>\n<code>y</code> is a <code>tf.Tensor([[[[...]]]], shape=(1, 200, 200, 1), dtype=float32)</code></p>\n\n<p>They are images <code>(200x200x1)</code>.</p>\n\n<p>I get the following error:</p>\n\n<blockquote>\n  <p>unique expects a 1D vector. [Op:UniqueWithCounts]</p>\n</blockquote>\n\n<p>Any idea about how to count how many times appear a value on a Tensor?</p>\n\n<p>The real image data are on the <code>200x200</code> dimensions, the other two are used on my CNN.</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 224}]