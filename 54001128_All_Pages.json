[{"items": [{"tags": ["python", "tensorflow"], "owner": {"account_id": 3948330, "reputation": 5043, "user_id": 3259896, "user_type": "registered", "accept_rate": 60, "profile_image": "https://www.gravatar.com/avatar/641c30a7b383022f22b53c8cedb04e3f?s=256&d=identicon&r=PG&f=1", "display_name": "SantoshGupta7", "link": "https://stackoverflow.com/users/3259896/santoshgupta7"}, "is_answered": false, "view_count": 770, "answer_count": 1, "score": 0, "last_activity_date": 1546404901, "creation_date": 1546402576, "question_id": 54001128, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/54001128/using-tf-concat-in-tf-while-loop-results-in-invalidargumenterror-concatop-ra", "title": "Using tf.concat in tf.while_loop results in `InvalidArgumentError: ConcatOp : Ranks of all input tensors should match`. But Ops work fine separately", "body": "<p>If I run my tf.concat operation or tf.while_loop operation separately, they execute fine, but if I run them together, I get an error. </p>\n\n<p>Here is the minimal code to reproduce the error</p>\n\n<pre><code>import tensorflow as tf\nimport numpy as np\n\n#Initialize matrix\ntestData = np.random.randint(0, 20, size=(4, 5 ))\nprint(testData)\n#Convert matrix to tensorflow tensor\ntestData2 = tf.convert_to_tensor(testData, dtype=tf.int64)\nstep = tf.constant(1)\n\n#Tensors that I want to concatinate in a while loop. Extracts values from testData2\nyAll = tf.py_func(lambda x, s: np.random.choice(x.reshape(-1),s, replace=False), [testData2[0], 2], tf.int64)\nyNew = tf.py_func(lambda x, s: np.random.choice(x.reshape(-1),s, replace=False), [testData2[0], 2], tf.int64)\n\n#Define while loop condition \ndef cond(step, yAll, yNew):\n    return step &lt; 4\n\n#Define while loop body \ndef body(step, yAll, yNew):\n    p=7\n    print('huh')\n    yNew = tf.py_func(lambda x, s: np.random.choice(x.reshape(-1),s, replace=False), [testData2[step], 2], tf.int64)\n    yAll = tf.concat( [[yAll], [yNew]], axis=0)\n    return step + 1, yAll, yNew\n\n#define while loop \nu = tf.while_loop(cond, body, loop_vars=[step, yAll, yNew], shape_invariants=[step.get_shape(), yAll.get_shape() , yNew.get_shape()])\n\n#Print data\nwith tf.Session( ) as sess:\n    sess.run(tf.global_variables_initializer())\n    print(sess.run([ u] ))\n</code></pre>\n\n<p>Here is the resulting output</p>\n\n<pre><code>[[ 1  6  2  7  7]\n [ 6  8  2 16  2]\n [13 18  5  6  8]\n [ 7 15  7  7 16]]\nhuh\n---------------------------------------------------------------------------\nInvalidArgumentError                      Traceback (most recent call last)\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/client/session.py in _do_call(self, fn, *args)\n   1333     try:\n-&gt; 1334       return fn(*args)\n   1335     except errors.OpError as e:\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/client/session.py in _run_fn(feed_dict, fetch_list, target_list, options, run_metadata)\n   1318       return self._call_tf_sessionrun(\n-&gt; 1319           options, feed_dict, fetch_list, target_list, run_metadata)\n   1320 \n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/client/session.py in _call_tf_sessionrun(self, options, feed_dict, fetch_list, target_list, run_metadata)\n   1406         self._session, options, feed_dict, fetch_list, target_list,\n-&gt; 1407         run_metadata)\n   1408 \n\nInvalidArgumentError: ConcatOp : Ranks of all input tensors should match: shape[0] = [1,2,2] vs. shape[1] = [1,2]\n     [[{{node while_1/concat}}]]\n\nDuring handling of the above exception, another exception occurred:\n\nInvalidArgumentError                      Traceback (most recent call last)\n&lt;ipython-input-2-45e2bf149017&gt; in &lt;module&gt;()\n     25 with tf.Session( ) as sess:\n     26     sess.run(tf.global_variables_initializer())\n---&gt; 27     print(sess.run([ u] ))\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/client/session.py in run(self, fetches, feed_dict, options, run_metadata)\n    927     try:\n    928       result = self._run(None, fetches, feed_dict, options_ptr,\n--&gt; 929                          run_metadata_ptr)\n    930       if run_metadata:\n    931         proto_data = tf_session.TF_GetBuffer(run_metadata_ptr)\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/client/session.py in _run(self, handle, fetches, feed_dict, options, run_metadata)\n   1150     if final_fetches or final_targets or (handle and feed_dict_tensor):\n   1151       results = self._do_run(handle, final_targets, final_fetches,\n-&gt; 1152                              feed_dict_tensor, options, run_metadata)\n   1153     else:\n   1154       results = []\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/client/session.py in _do_run(self, handle, target_list, fetch_list, feed_dict, options, run_metadata)\n   1326     if handle is None:\n   1327       return self._do_call(_run_fn, feeds, fetches, targets, options,\n-&gt; 1328                            run_metadata)\n   1329     else:\n   1330       return self._do_call(_prun_fn, handle, feeds, fetches)\n\n/usr/local/lib/python3.6/dist-packages/tensorflow/python/client/session.py in _do_call(self, fn, *args)\n   1346           pass\n   1347       message = error_interpolation.interpolate(message, self._graph)\n-&gt; 1348       raise type(e)(node_def, op, message)\n   1349 \n   1350   def _extend_graph(self):\n\nInvalidArgumentError: ConcatOp : Ranks of all input tensors should match: shape[0] = [1,2,2] vs. shape[1] = [1,2]\n     [[node while_1/concat (defined at &lt;ipython-input-2-45e2bf149017&gt;:18) ]]\n\nErrors may have originated from an input operation.\nInput Source operations connected to node while_1/concat:\n Const_2 (defined at &lt;ipython-input-2-45e2bf149017&gt;:6)  \n strided_slice_2/stack (defined at &lt;ipython-input-2-45e2bf149017&gt;:9)    \n Const_3 (defined at &lt;ipython-input-2-45e2bf149017&gt;:7)\n\nOriginal stack trace for 'while_1/concat':\n  File \"/usr/lib/python3.6/runpy.py\", line 193, in _run_module_as_main\n    \"__main__\", mod_spec)\n  File \"/usr/lib/python3.6/runpy.py\", line 85, in _run_code\n    exec(code, run_globals)\n  File \"/usr/local/lib/python3.6/dist-packages/ipykernel_launcher.py\", line 16, in &lt;module&gt;\n    app.launch_new_instance()\n  File \"/usr/local/lib/python3.6/dist-packages/traitlets/config/application.py\", line 658, in launch_instance\n    app.start()\n  File \"/usr/local/lib/python3.6/dist-packages/ipykernel/kernelapp.py\", line 477, in start\n    ioloop.IOLoop.instance().start()\n  File \"/usr/local/lib/python3.6/dist-packages/tornado/ioloop.py\", line 888, in start\n    handler_func(fd_obj, events)\n  File \"/usr/local/lib/python3.6/dist-packages/tornado/stack_context.py\", line 277, in null_wrapper\n    return fn(*args, **kwargs)\n  File \"/usr/local/lib/python3.6/dist-packages/zmq/eventloop/zmqstream.py\", line 450, in _handle_events\n    self._handle_recv()\n  File \"/usr/local/lib/python3.6/dist-packages/zmq/eventloop/zmqstream.py\", line 480, in _handle_recv\n    self._run_callback(callback, msg)\n  File \"/usr/local/lib/python3.6/dist-packages/zmq/eventloop/zmqstream.py\", line 432, in _run_callback\n    callback(*args, **kwargs)\n  File \"/usr/local/lib/python3.6/dist-packages/tornado/stack_context.py\", line 277, in null_wrapper\n    return fn(*args, **kwargs)\n  File \"/usr/local/lib/python3.6/dist-packages/ipykernel/kernelbase.py\", line 283, in dispatcher\n    return self.dispatch_shell(stream, msg)\n  File \"/usr/local/lib/python3.6/dist-packages/ipykernel/kernelbase.py\", line 235, in dispatch_shell\n    handler(stream, idents, msg)\n  File \"/usr/local/lib/python3.6/dist-packages/ipykernel/kernelbase.py\", line 399, in execute_request\n    user_expressions, allow_stdin)\n  File \"/usr/local/lib/python3.6/dist-packages/ipykernel/ipkernel.py\", line 196, in do_execute\n    res = shell.run_cell(code, store_history=store_history, silent=silent)\n  File \"/usr/local/lib/python3.6/dist-packages/ipykernel/zmqshell.py\", line 533, in run_cell\n    return super(ZMQInteractiveShell, self).run_cell(*args, **kwargs)\n  File \"/usr/local/lib/python3.6/dist-packages/IPython/core/interactiveshell.py\", line 2718, in run_cell\n    interactivity=interactivity, compiler=compiler, result=result)\n  File \"/usr/local/lib/python3.6/dist-packages/IPython/core/interactiveshell.py\", line 2822, in run_ast_nodes\n    if self.run_code(code, result):\n  File \"/usr/local/lib/python3.6/dist-packages/IPython/core/interactiveshell.py\", line 2882, in run_code\n    exec(code_obj, self.user_global_ns, self.user_ns)\n  File \"&lt;ipython-input-2-45e2bf149017&gt;\", line 21, in &lt;module&gt;\n    u = tf.while_loop(cond, body, loop_vars=[step, yAll, yNew], shape_invariants=[step.get_shape(), yAll.get_shape() , yNew.get_shape()])\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/control_flow_ops.py\", line 3560, in while_loop\n    return_same_structure)\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/control_flow_ops.py\", line 3089, in BuildLoop\n    pred, body, original_loop_vars, loop_vars, shape_invariants)\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/control_flow_ops.py\", line 3024, in _BuildLoop\n    body_result = body(*packed_vars_for_body)\n  File \"&lt;ipython-input-2-45e2bf149017&gt;\", line 18, in body\n    yAll = tf.concat( [[yAll], [yNew]], axis=0)\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/util/dispatch.py\", line 180, in wrapper\n    return target(*args, **kwargs)\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/array_ops.py\", line 1256, in concat\n    return gen_array_ops.concat_v2(values=values, axis=axis, name=name)\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/gen_array_ops.py\", line 1149, in concat_v2\n    \"ConcatV2\", values=values, axis=axis, name=name)\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/op_def_library.py\", line 788, in _apply_op_helper\n    op_def=op_def)\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/util/deprecation.py\", line 501, in new_func\n    return func(*args, **kwargs)\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py\", line 3300, in create_op\n    op_def=op_def)\n  File \"/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/ops.py\", line 1801, in __init__\n    self._traceback = tf_stack.extract_stack()\n</code></pre>\n\n<p>Here is just running the concat operation without the tf.while_loop, which works fine</p>\n\n<pre><code>testData = np.random.randint(0, 20, size=(4, 5 ))\nprint(testData)\ntestData2 = tf.convert_to_tensor(testData, dtype=tf.int64)\n\nyAll = tf.py_func(lambda x, s: np.random.choice(x.reshape(-1),s, replace=False), [testData2[0], 2], tf.int64)\nyNew = tf.py_func(lambda x, s: np.random.choice(x.reshape(-1),s, replace=False), [testData2[2], 2], tf.int64)\nyAll = tf.concat( [[yAll], [yNew]], axis=0)\n\n#Print data\nwith tf.Session( ) as sess:\n    sess.run(tf.global_variables_initializer())\n    print(sess.run([ yAll] ))\n</code></pre>\n\n<p>Here is the output</p>\n\n<pre><code>[[ 6 13 10  7 17]\n [17 13  8  1  3]\n [ 6 18  0 12  0]\n [14 14  0 19 19]]\n[array([[ 7, 13],\n       [ 0,  0]])]\n</code></pre>\n\n<p>And here is just running the whileloop, without tf.while_loop, which works fine</p>\n\n<pre><code>testData = np.random.randint(0, 20, size=(4, 5 ))\nprint(testData)\ntestData2 = tf.convert_to_tensor(testData, dtype=tf.int64)\nstep = tf.constant(1)\n\nyAll = tf.py_func(lambda x, s: np.random.choice(x.reshape(-1),s, replace=False), [testData2[0], 2], tf.int64)\nyNew = tf.py_func(lambda x, s: np.random.choice(x.reshape(-1),s, replace=False), [testData2[0], 2], tf.int64)\n\ndef cond(step, yAll, yNew):\n    return step &lt; 4\ndef body(step, yAll, yNew):\n    p=7\n    print('huh')\n    yNew = tf.py_func(lambda x, s: np.random.choice(x.reshape(-1),s, replace=False), [testData2[step], 2], tf.int64)\n#     yAll = tf.concat( [[yAll], [yNew]], axis=0)\n    return step + 1, yAll, yNew\n\nu = tf.while_loop(cond, body, loop_vars=[step, yAll, yNew], shape_invariants=[step.get_shape(), yAll.get_shape() , yNew.get_shape()])\n\n#Print data\nwith tf.Session( ) as sess:\n    sess.run(tf.global_variables_initializer())\n    print(sess.run([ u] ))\n</code></pre>\n\n<p>Here is the output</p>\n\n<pre><code>[[13 11  6 12 11]\n [18  7  4  4 17]\n [ 1  4 17 17 13]\n [ 1  9 10 10 18]]\nhuh\n[(4, array([11,  6]), array([18, 10]))]\n</code></pre>\n\n<p>So somehow combining the tf concat operation in a tf while loop causes the error, perhaps the loop is transforming the data somehow, but not sure what exactly it is doing. </p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 273}]