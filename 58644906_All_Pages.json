[{"items": [{"tags": ["python", "python-3.x", "tensorflow", "weak-references"], "owner": {"account_id": 14386550, "reputation": 805, "user_id": 10392393, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/158e9cd5e0945cfb6ff4407c8c049768?s=256&d=identicon&r=PG&f=1", "display_name": "azerila", "link": "https://stackoverflow.com/users/10392393/azerila"}, "is_answered": true, "view_count": 374, "accepted_answer_id": 58650883, "answer_count": 3, "score": 0, "last_activity_date": 1578322360, "creation_date": 1572530171, "question_id": 58644906, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/58644906/weak-object-has-gone-away-what-does-it-mean", "title": "weak object has gone away_what does it mean?", "body": "<p>I am using tensorflow for a problem where there is a function which is called once and it works correctly but the second time it is called the error \" weak object has gone away\" comes up which I don't understand what it means and where the problem might be.</p>\n\n<p>The full trackback is as follows:</p>\n\n<pre><code>----------------------------------------------------------------------\nTypeError                            Traceback (most recent call last)\n~/.local/share/virtualenvs/tf-tRAPLeXL/lib/python3.6/site-packages/tensorflow_core/python/eager/function.py in _hash_fix(self, elem)\n    108     try:\n--&gt; 109       hash(elem)\n    110     except TypeError:\n\nTypeError: weak object has gone away\n\nDuring handling of the above exception, another exception occurred:\n\nAttributeError                       Traceback (most recent call last)\n&lt;ipython-input-23-f1a95ac20255&gt; in &lt;module&gt;\n----&gt; 1 default_settings['sur_model'].predict_with_grad(np.atleast_2d(xx))\n\n&lt;ipython-input-5-7e554cb74b1d&gt; in predict_with_grad(self, x)\n    127 \n    128         with tf.GradientTape() as t:\n--&gt; 129             m, v = self.predict(x)\n    130             dmdx = t.gradient(m, x)\n    131         with tf.GradientTape() as t:\n\n&lt;ipython-input-5-7e554cb74b1d&gt; in predict(self, X)\n    116         \"\"\"\n    117 \n--&gt; 118         X_embed = self.embedding_model(X)\n    119         #print('X_embed',X_embed)\n    120         m, v = self.Pr_model.predict_y(X_embed)\n\n~/.local/share/virtualenvs/tf-tRAPLeXL/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/base_layer.py in __call__(self, inputs, *args, **kwargs)\n    889           with base_layer_utils.autocast_context_manager(\n    890               self._compute_dtype):\n--&gt; 891             outputs = self.call(cast_inputs, *args, **kwargs)\n    892           self._handle_activity_regularization(inputs, outputs)\n    893           self._set_mask_metadata(inputs, outputs, input_masks)\n\n~/.local/share/virtualenvs/tf-tRAPLeXL/lib/python3.6/site-packages/tensorflow_core/python/eager/def_function.py in __call__(self, *args, **kwds)\n    455 \n    456     tracing_count = self._get_tracing_count()\n--&gt; 457     result = self._call(*args, **kwds)\n    458     if tracing_count == self._get_tracing_count():\n    459       self._call_counter.called_without_tracing()\n\n~/.local/share/virtualenvs/tf-tRAPLeXL/lib/python3.6/site-packages/tensorflow_core/python/eager/def_function.py in _call(self, *args, **kwds)\n    492       # In this case we have not created variables on the first call. So we can\n    493       # run the first trace but we should fail if variables are created.\n--&gt; 494       results = self._stateful_fn(*args, **kwds)\n    495       if self._created_variables:\n    496         raise ValueError(\"Creating variables on a non-first call to a function\"\n\n~/.local/share/virtualenvs/tf-tRAPLeXL/lib/python3.6/site-packages/tensorflow_core/python/eager/function.py in __call__(self, *args, **kwargs)\n   1820   def __call__(self, *args, **kwargs):\n   1821     \"\"\"Calls a graph function specialized to the inputs.\"\"\"\n-&gt; 1822     graph_function, args, kwargs = self._maybe_define_function(args, kwargs)\n   1823     return graph_function._filtered_call(args, kwargs)  # pylint: disable=protected-access\n   1824 \n\n~/.local/share/virtualenvs/tf-tRAPLeXL/lib/python3.6/site-packages/tensorflow_core/python/eager/function.py in _maybe_define_function(self, args, kwargs)\n   2117 \n   2118     with self._lock:\n-&gt; 2119       graph_function = self._function_cache.primary.get(cache_key, None)\n   2120       if graph_function is not None:\n   2121         return graph_function, args, kwargs\n\n~/.local/share/virtualenvs/tf-tRAPLeXL/lib/python3.6/site-packages/tensorflow_core/python/eager/function.py in __eq__(self, other)\n    115 \n    116   def __eq__(self, other):\n--&gt; 117     return self._fields_safe == other._fields_safe  # pylint: disable=protected-access\n    118 \n    119 \n\n~/.local/share/virtualenvs/tf-tRAPLeXL/lib/python3.6/site-packages/tensorflow_core/python/eager/function.py in _fields_safe(self)\n     91   def _fields_safe(self):\n     92     \"\"\"Hash &amp; equality-safe version of all the namedtuple fields.\"\"\"\n---&gt; 93     return (self._hash_fix(self.input_signature), self.parent_graph,\n     94             self.device_functions, self.colocation_stack,\n     95             self.in_cross_replica_context)\n\n~/.local/share/virtualenvs/tf-tRAPLeXL/lib/python3.6/site-packages/tensorflow_core/python/eager/function.py in _hash_fix(self, elem)\n     99     # Descend into tuples\n    100     if isinstance(elem, tuple):\n--&gt; 101       return tuple(self._hash_fix(i) for i in elem)\n    102 \n    103     if isinstance(elem, set):\n\n~/.local/share/virtualenvs/tf-tRAPLeXL/lib/python3.6/site-packages/tensorflow_core/python/eager/function.py in &lt;genexpr&gt;(.0)\n     99     # Descend into tuples\n    100     if isinstance(elem, tuple):\n--&gt; 101       return tuple(self._hash_fix(i) for i in elem)\n    102 \n    103     if isinstance(elem, set):\n\n~/.local/share/virtualenvs/tf-tRAPLeXL/lib/python3.6/site-packages/tensorflow_core/python/eager/function.py in _hash_fix(self, elem)\n     99     # Descend into tuples\n    100     if isinstance(elem, tuple):\n--&gt; 101       return tuple(self._hash_fix(i) for i in elem)\n    102 \n    103     if isinstance(elem, set):\n\n~/.local/share/virtualenvs/tf-tRAPLeXL/lib/python3.6/site-packages/tensorflow_core/python/eager/function.py in &lt;genexpr&gt;(.0)\n     99     # Descend into tuples\n    100     if isinstance(elem, tuple):\n--&gt; 101       return tuple(self._hash_fix(i) for i in elem)\n    102 \n    103     if isinstance(elem, set):\n\n~/.local/share/virtualenvs/tf-tRAPLeXL/lib/python3.6/site-packages/tensorflow_core/python/eager/function.py in _hash_fix(self, elem)\n    110     except TypeError:\n    111       v = elem()\n--&gt; 112       return (v.__class__, tensor_spec.TensorSpec(v.shape, v.dtype))\n    113 \n    114     return elem\n\nAttributeError: 'NoneType' object has no attribute 'shape'\n</code></pre>\n\n<p>I find it rather strange and haven't found a clue to know from where I should fix it.</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 58}]