[{"items": [{"tags": ["tensorflow"], "owner": {"user_type": "does_not_exist", "display_name": "user6819011"}, "is_answered": true, "view_count": 76, "closed_date": 1510968785, "accepted_answer_id": 47358157, "answer_count": 1, "score": 1, "last_activity_date": 1510948096, "creation_date": 1510946047, "last_edit_date": 1510947592, "question_id": 47357734, "link": "https://stackoverflow.com/questions/47357734/tensorflow-labeling-issue", "closed_reason": "Not suitable for this site", "title": "Tensorflow: labeling issue", "body": "<pre><code>import tensorflow as tf\nimport numpy as np\nimport glob\nfq=glob.glob(\"*.jpg\")\nfilename_queue = tf.train.string_input_producer(fq)\nreader = tf.WholeFileReader()\nkey, value = reader.read(filename_queue)\nmy_img = tf.image.decode_jpeg(value,channels=3) \nmy_img=tf.cast(my_img,tf.float32)\nresized_image = tf.image.resize_images(my_img, [50, 50])\n\n\nlabels=[1,1,1,0,0]\nonehot = tf.one_hot(labels, depth=2)\n\n\n\nimage_batch = tf.train.batch([resized_image], batch_size=2)\n\n# layer 1\nw1 = tf.Variable(tf.truncated_normal([2, 2, 3, 52], stddev=0.01))\nb1= tf.Variable(tf.constant(0.01, shape = [52]))\nlayer1=tf.nn.conv2d(image_batch,w1,[1,1,1,1],padding='SAME')\nact1=tf.nn.relu(tf.nn.bias_add(layer1,b1))\npool1=tf.layers.max_pooling2d(act1,2,2)\n\n# layer 2\nb2= tf.Variable(tf.constant(0.01, shape = [104]))\nw2=tf.Variable(tf.truncated_normal([2, 2,52, 104], stddev=0.01))\nlayer2=tf.nn.conv2d(pool1,w2,[1,1,1,1],padding='SAME')\nact2=tf.nn.relu(tf.nn.bias_add(layer2,b2))\npool2=tf.layers.max_pooling2d(act2,2,2)\n\n#fully connected layer\nb3= tf.Variable(tf.constant(0.01, shape = [300]))\nw3=tf.Variable(tf.truncated_normal([12*12*104, 300], stddev=0.01))\nfcl1=tf.reshape(pool2,[-1,12*12*104])\nfcl1 = tf.add(tf.matmul(fcl1, w3), b3)\nfcl1 = tf.nn.relu(fcl1)\nfcl1 = tf.nn.dropout(fcl1,0.5)\n\n#output layer\nb_out=b3= tf.Variable(tf.constant(0.01, shape = [2]))\nw_out=tf.Variable(tf.truncated_normal([300, 2], stddev=0.01))\nans=tf.add(tf.matmul(fcl1,w_out),b_out)\n\n\n#traning , loss , optimizer\nlogits = ans\nprediction = tf.nn.softmax(logits)  \nloss_op = tf.reduce_mean(tf.nn.softmax_cross_entropy_with_logits(\nlogits=logits, labels=onehot))\noptimizer = tf.train.AdamOptimizer(learning_rate=0.001)\ntrain_op = optimizer.minimize(loss_op)\n\n\n\n\nwith tf.Session() as s:\n    s.run(tf.global_variables_initializer())\n    coord = tf.train.Coordinator()\n    threads = tf.train.start_queue_runners(coord=coord)\n    for step in range(1, 40):\n        s.run(train_op)\n        print(step,s.run(loss_op))\n    coord.request_stop()\n    coord.join(threads)\n</code></pre>\n\n<blockquote>\n  <p>Traceback (most recent call last):\n    File \"test.py\", line 56, in \n      logits=logits, labels=onehot))</p>\n  \n  <p>ValueError: Dimension 0 in both shapes must be equal, but are 2 and 5 for 'SoftmaxCrossEntropyWithLogits' (op: 'SoftmaxCrossEntropyWithLogits') with input shapes: [2,2], [5,2].</p>\n</blockquote>\n\n<p>Please tell me what is my mistake, I think I need to feed 2 labels at a time but it is taking all 5 at a time. How can I batch labels separately? </p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 91}]