[{"items": [{"tags": ["machine-learning", "tensorflow"], "owner": {"user_type": "does_not_exist", "display_name": "user7944563"}, "is_answered": true, "view_count": 1433, "answer_count": 2, "score": 1, "last_activity_date": 1538559869, "creation_date": 1493584893, "last_edit_date": 1493596248, "question_id": 43711104, "content_license": "CC BY-SA 3.0", "link": "https://stackoverflow.com/questions/43711104/no-gradients-provided-for-any-variable", "title": "No gradients provided for any variable", "body": "<pre><code>import tensorflow as tf\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nNclass = 500\nD = 2\nM = 3\nK = 3\n\nX1 = np.random.randn(Nclass, D) + np.array([0, -2])\nX2 = np.random.randn(Nclass, D) + np.array([2, 2])\nX3 = np.random.randn(Nclass, D) + np.array([-2, 2])\nX = np.vstack ([X1, X2, X3]).astype(np.float32)\n\nY = np.array([0]*Nclass + [1]*Nclass + [2]*Nclass)\n\nplt.scatter(X[:,0], X[:,1], c=Y, s=100, alpha=0.5)\nplt.show()\n\nN = len(Y)\n\nT = np.zeros((N, K))\nfor i in range(N):\n    T[i, Y[i]] = 1\n\ndef init_weights(shape):\n    return tf.Variable(tf.random_normal(shape, stddev=0.01))\n\ndef forward(X, W1, b1, W2, b2):\n    Z = tf.nn.sigmoid(tf.matmul(X, W1) + b1)\n    return tf.matmul(Z, W2) + b2\n\ntfX = tf.placeholder(tf.float32, [None, D])\ntfY = tf.placeholder(tf.float32, [None, K])\n\nW1 = init_weights([D, M])\nb1 = init_weights([M])\nW2 = init_weights([M, K])\nb2 = init_weights([K])\n\npy_x = forward(tfX, W1, b1, W2, b2)\n\ncost = tf.reduce_mean(tf.nn.softmax_cross_entropy_with_logits(labels=py_x, logits=T))\n\ntrain_op = tf.train.GradientDescentOptimizer(0.05).minimize(cost)\npredict_op = tf.argmax(py_x, 1)\n\nsess = tf.Session()\ninti = tf.initizalize_all_variables()\n\nfor i in range(1000):\n    sess.run(train_op, feed_dict={tfX: X, tfY: T})\n    pred = sess.run(predict_op, feed_dict={tfX: X, tfY: T})\n    if i % 10 == 0:\n        print(np.mean(Y == pred))\n</code></pre>\n\n<p>I have a little issue :</p>\n\n<pre><code>Traceback (most recent call last):\n  File \"test.py\", line 45, in &lt;module&gt;\n    train_op = tf.train.GradientDescentOptimizer(0.05).minimize(cost)\n  File \"/usr/local/lib/python3.5/dist-packages/tensorflow/python/training/optimizer.py\", line 322, in minimize\n    ([str(v) for _, v in grads_and_vars], loss))\nValueError: No gradients provided for any variable, check your graph for ops that do not support gradients, between variables [\"&lt;tf.Variable 'Variable:0' shape=(2, 3) dtype=float32_ref&gt;\", \"&lt;tf.Variable 'Variable_1:0' shape=(3,) dtype=float32_ref&gt;\", \"&lt;tf.Variable 'Variable_2:0' shape=(3, 3) dtype=float32_ref&gt;\", \"&lt;tf.Variable 'Variable_3:0' shape=(3,) dtype=float32_ref&gt;\"] and loss Tensor(\"Mean:0\", shape=(), dtype=float64).\n</code></pre>\n\n<p>It is unclear what I have to do here. Could anyone be able to help me at this point?</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 106}]