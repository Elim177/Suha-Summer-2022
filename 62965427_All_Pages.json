[{"items": [{"tags": ["python", "tensorflow", "conv-neural-network", "backpropagation"], "owner": {"account_id": 17221404, "reputation": 140, "user_id": 12468090, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AAuE7mAtaTlQ8Z_RkFMq5BsDYmlnY4aahXG4zHBpJpO-=k-s256", "display_name": "Adi Mehrotra", "link": "https://stackoverflow.com/users/12468090/adi-mehrotra"}, "is_answered": false, "view_count": 126, "answer_count": 0, "score": 2, "last_activity_date": 1595061607, "creation_date": 1595054003, "last_edit_date": 1595061607, "question_id": 62965427, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/62965427/how-to-compute-the-backprop-of-tf-nn-conv2d-without-using-tf-keras-layers-conv2d", "title": "How to compute the backprop of tf.nn.conv2d without using tf.keras.layers.conv2d", "body": "<p>I'm trying to figure out how to backpropagate gradients from <code>Conv2D</code>, but <code>T.gradient</code> always returns <code>None</code>.</p>\n<p>I'm using Python 3.7.5 and TensorFlow 2.2.0.</p>\n<pre><code>import tensorflow as tf\nimport numpy as np\n\narr = np.arange(0, 9, dtype = np.float32).reshape((1, 3, 3, 1))\nkernel = np.ones((3, 3), dtype = np.float32).reshape((3, 3, 1, 1))\n\ntf_arr = tf.constant(arr)\ntf_kernel = tf.constant(kernel)\n\nwith tf.GradientTape(persistent = True, watch_accessed_variables = True) as T:\n    tf_out =  tf.nn.conv2d(tf_arr, tf_kernel, [1, 1, 1, 1], padding = &quot;SAME&quot;, data_format = 'NHWC')\n\n\nprint(T.gradient(tf_kernel, tf_arr))\n</code></pre>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 210}]