[{"items": [{"tags": ["python", "tensorflow", "machine-learning", "keras", "deep-learning"], "owner": {"account_id": 15116032, "reputation": 30088, "user_id": 10908375, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/L7f8w.jpg?s=256&g=1", "display_name": "Nicolas Gervais", "link": "https://stackoverflow.com/users/10908375/nicolas-gervais"}, "is_answered": true, "view_count": 218, "accepted_answer_id": 67608627, "answer_count": 1, "score": 1, "last_activity_date": 1621541335, "creation_date": 1621436137, "last_edit_date": 1621541335, "question_id": 67605715, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/67605715/attributeerror-layer-cnn-model-has-no-inbound-nodes-when-making-a-model-from", "title": "&quot;AttributeError: Layer cnn_model has no inbound nodes&quot; when making a model from a subclassed model for Keras GradCam tutorial", "body": "<p>I'm trying to follow this <a href=\"https://keras.io/examples/vision/grad_cam/\" rel=\"nofollow noreferrer\">GradCam Tutorial</a> with my own model. Here is its architecture:</p>\n<pre><code>import tensorflow as tf\nfrom tensorflow import keras as K\nimport numpy as np\n\nclass CNNModel(K.Model):\n    def __init__(self):\n        super(CNNModel, self).__init__()\n        self.base = K.applications.EfficientNetB1(input_shape=(224, 224, 12),\n                                                  include_top=False,\n                                                  weights=None)\n\n        self.pool = K.layers.GlobalAveragePooling2D()\n        self.drop1 = K.layers.Dropout(0.25)\n        self.dense1 = K.layers.Dense(16, activation='relu')\n        self.drop2 = K.layers.Dropout(0.25)\n        self.out = K.layers.Dense(1, activation='sigmoid')\n\n    def call(self, x, training=None, **kwargs):\n        x = self.base(x)\n        x = self.pool(x)\n        x = self.drop1(x)\n        x = self.dense1(x)\n        x = self.drop2(x)\n        x = self.out(x)\n        return x\n\nmodel = CNNModel()\nmodel.build(input_shape=(None, 224, 224, 12))\n</code></pre>\n<p>I need to get the last convolutional layer, so I'm getting the one from the base (<strong>EfficientNet</strong>) model:</p>\n<pre><code>last_conv_layer_name = list(filter(lambda x: isinstance(x, tf.keras.layers.Conv2D), model.base.layers))[-1].name\n</code></pre>\n<p>Then I'm trying to make a 2 output model based on that, just like in the tutorial.</p>\n<pre><code>grad_model = tf.keras.models.Model(\n        [model.base.inputs], [model.base.get_layer(last_conv_layer_name).output, model.output]\n    )\n</code></pre>\n<p>I'm getting:</p>\n<blockquote>\n<p>AttributeError: Layer cnn_model has no inbound nodes</p>\n</blockquote>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 139}]