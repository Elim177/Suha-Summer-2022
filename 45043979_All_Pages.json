[{"items": [{"tags": ["python", "tensorflow"], "owner": {"user_type": "does_not_exist", "display_name": "user4225701"}, "is_answered": true, "view_count": 3737, "accepted_answer_id": 45053936, "answer_count": 1, "score": 7, "last_activity_date": 1499870086, "creation_date": 1499805176, "last_edit_date": 1499870086, "question_id": 45043979, "content_license": "CC BY-SA 3.0", "link": "https://stackoverflow.com/questions/45043979/how-to-decode-tfrecord-data-sample-with-variable-length-strings", "title": "How to decode TFRecord data sample with variable length strings?", "body": "<p>Let's say we have a TFRecord file with data samples like this:</p>\n\n<pre><code>def _bytes_feature(value):\n    return tf.train.Feature(bytes_list=tf.train.BytesList(value=[value]))\n\ndef _float32_feature(value):\n    return tf.train.Feature(float_list=tf.train.FloatList(value=value))\n\nexample = tf.train.Example(features=tf.train.Features(feature={\n    'image/encoded': _bytes_feature(encoded_jpg),\n    'label': _float_list_feature(label),\n}))\n</code></pre>\n\n<p>Here <code>encoded_jpg</code> is the raw value of encoded 32x32 jpg images, the length of which can be quite different for different images; <code>label</code> is a fixed-length vector.</p>\n\n<p>For fixed-length fields, one can always use something like the following to decode the sample:</p>\n\n<pre><code>features = tf.parse_single_example(\n    serialized_example,\n    features = {\n        'image/encoded': tf.FixedLenFeature([], tf.string)\n        'label': tf.FixedLenFeature([], tf.float32)\n    }\n\n)\n</code></pre>\n\n<p>But here the length of <code>image/encoded</code> is not constant, the aforementioned one doesn't work anymore.</p>\n\n<p>If I change the code into this:</p>\n\n<pre><code>features = tf.parse_single_example(\n    serialized_example,\n    features = {\n        'image/encoded': tf.VarLenFeature(tf.string)\n        'label': tf.FixedLenFeature([], tf.float32)\n    }\n)\n\nencoded = features['image/encoded']\n</code></pre>\n\n<p><code>image/encoded</code> is something like sparse tensor, I don't know how to decode the image from this stuff.</p>\n\n<p>Does anyone have similar experience before? Any suggestion is appreciated.</p>\n\n<p>Thanks!</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 291}]