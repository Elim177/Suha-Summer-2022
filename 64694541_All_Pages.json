[{"items": [{"tags": ["python-3.x", "tensorflow", "lstm", "tensorflow2.0"], "owner": {"account_id": 12388856, "reputation": 547, "user_id": 9031512, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/8b2a1806719bf7fccdda5ca47cbcbb00?s=256&d=identicon&r=PG&f=1", "display_name": "n0obcoder", "link": "https://stackoverflow.com/users/9031512/n0obcoder"}, "is_answered": false, "view_count": 113, "answer_count": 0, "score": 0, "last_activity_date": 1604570260, "creation_date": 1604568959, "last_edit_date": 1604570260, "question_id": 64694541, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/64694541/cudnnlstm-slower-than-lstm-in-tensorflow2", "title": "CuDNNLSTM slower than LSTM in TensorFlow2", "body": "<p>I read on multiple sources that using CuDNNLSTM instead of LSTM Layer on a GPU machine speeds up things. But it does not seem to be the case for me. I conducted a simple experiment as described below-</p>\n<pre><code>import tensorflow as tf\nimport time\n\nnum_items, emb_dim, lstm_dim = int(1e6), 64, 1024\n\nmodel_1 = tf.keras.Sequential([tf.keras.layers.Embedding(num_items, emb_dim),\n                            tf.keras.layers.LSTM(lstm_dim)\n                            ])\n\nmodel_2 = tf.keras.Sequential([tf.keras.layers.Embedding(num_items, emb_dim),\n                            tf.compat.v1.keras.layers.CuDNNLSTM(lstm_dim)\n                            ])\n\ndef data_gen(iterations=5000):\n  i=0\n  while i&lt;iterations:\n    inp = tf.random.uniform(shape=[64, 20], minval=0, maxval=100000, dtype=tf.int64)\n    yield inp\n    i+=1\n\ngen = data_gen()\ntick=time.time()\nfor inp in gen:\n    lstm = model_1(inp)\nprint(f'time taken by LSTM based model: {time.time()-tick} sec')\n\ngen = data_gen()\ntick=time.time()\nfor inp in gen:\n    lstm = model_2(inp)\nprint(f'time taken by CuDNNLSTM based model: {time.time()-tick} sec')\n</code></pre>\n<p>And I got the following results-</p>\n<pre><code>time taken by LSTM based model: 60.24342346191406 sec\ntime taken by CuDNNLSTM based model: 65.31983590126038 sec\n</code></pre>\n<p>Any idea what might be the reason behind it?</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 282}]