[{"items": [{"tags": ["numpy", "tensorflow"], "owner": {"account_id": 963556, "reputation": 1375, "user_id": 987397, "user_type": "registered", "accept_rate": 32, "profile_image": "https://www.gravatar.com/avatar/fa7ae7d9bd13c2d04335c3209865c262?s=256&d=identicon&r=PG", "display_name": "Derk", "link": "https://stackoverflow.com/users/987397/derk"}, "is_answered": false, "view_count": 65, "answer_count": 0, "score": 0, "last_activity_date": 1481053575, "creation_date": 1481053575, "question_id": 41003570, "content_license": "CC BY-SA 3.0", "link": "https://stackoverflow.com/questions/41003570/tensorflow-unexpected-behaviour", "title": "Tensorflow: Unexpected behaviour", "body": "<p>I run the same training script twice, with completely different results. The only difference is the Python operation inserted with this code</p>\n\n<pre><code># Add a small amount times the identity matrix to prevent errors\nidentity = tf.Variable(tf.convert_to_tensor(np.eye(mu_shape[-1].value), dtype=tf.float32))\nSigma = tf.batch_matmul(L,tf.matrix_transpose(L)) + 1e-4*identity\n\n# Check positive definite\ndef _debug_print_func(Sigma,L):\n  try:\n      C = np.linalg.cholesky(Sigma)\n  except np.linalg.LinAlgError:\n      print 'LinAlgError'  \n\n  return Sigma\n\n[Sigma] = tf.py_func(_debug_print_func, [Sigma,L], [tf.float32])\n</code></pre>\n\n<p>So when the last line is commented out the error decreases to ~-40 while (than a not positive definite error occurs). With the Python operation (that actually does not nothing) the error has a very different value.</p>\n\n<p>What could explain this behaviour? I ran this a lot of times, with this same phenomena each time</p>\n\n<p><a href=\"https://i.stack.imgur.com/k61VT.png\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/k61VT.png\" alt=\"enter image description here\"></a></p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 114}]