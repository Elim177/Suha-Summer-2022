[{"items": [{"tags": ["python", "tensorflow"], "owner": {"account_id": 7846906, "reputation": 2947, "user_id": 5931672, "user_type": "registered", "accept_rate": 86, "profile_image": "https://lh5.googleusercontent.com/-Ljkm-NVRzOc/AAAAAAAAAAI/AAAAAAAAAFE/EelBBzc8ji0/photo.jpg?sz=256", "display_name": "Agustin Barrachina", "link": "https://stackoverflow.com/users/5931672/agustin-barrachina"}, "is_answered": true, "view_count": 420, "accepted_answer_id": 66749081, "answer_count": 1, "score": 0, "last_activity_date": 1616426811, "creation_date": 1616426178, "question_id": 66748897, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/66748897/concatenating-empty-array-in-tensorflow", "title": "Concatenating empty array in Tensorflow", "body": "<p>So basically, my question is the same as <a href=\"https://stackoverflow.com/questions/22732589/concatenating-empty-array-in-numpy/22732845\">Concatenating empty array in Numpy</a> but for Tensorflow.</p>\n<p>Mainly, the motivation is to handle the initial array in a prettier way that using a if statement. My current pseudo-code is:</p>\n<pre><code>E = None\nfor a in A:\n    if E is None:\n        E = a\n    else:\n        E = tf.concat([E, a], axis=0)\n</code></pre>\n<p>This technique works but I would like to make it a prettier way and maybe using only <code>tf.Tensor</code>. This is a code of a custom layer so I am interested in a code that works inside a model.</p>\n<p>I would like a solution closer to the accepted response initializing E as: <code>E = np.array([], dtype=np.int64).reshape(0,5)</code>.</p>\n<p>This <a href=\"https://stackoverflow.com/questions/51888829/constructing-a-tensorflow-tensor-that-behaves-as-empty-when-passed-to-tf-concat\">question</a> gets close enough but when I init E as:</p>\n<pre><code>E = tf.zeros([a.shape[0], a.shape[1], 0])\n...\n</code></pre>\n<p>I get an empty tensor as a result with only the correct shape but not filled.</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 240}]