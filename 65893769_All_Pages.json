[{"items": [{"tags": ["python", "tensorflow", "keras"], "owner": {"account_id": 15116032, "reputation": 30088, "user_id": 10908375, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/L7f8w.jpg?s=256&g=1", "display_name": "Nicolas Gervais", "link": "https://stackoverflow.com/users/10908375/nicolas-gervais"}, "is_answered": true, "view_count": 233, "accepted_answer_id": 65894017, "answer_count": 1, "score": 0, "last_activity_date": 1611619379, "creation_date": 1611616801, "question_id": 65893769, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/65893769/attributeerror-sparsecategoricalcrossentropy-object-has-no-attribute-name", "title": "AttributeError: &#39;SparseCategoricalCrossentropy&#39; object has no attribute &#39;__name__&#39;", "body": "<p>I encountered this error in a basic CNN:</p>\n<blockquote>\n<p>AttributeError: 'SparseCategoricalCrossentropy' object has no attribute '<strong>name</strong>'</p>\n</blockquote>\n<p>I thought you could set <code>loss=tf.metrics.SparseCategoricalCrossentropy()</code> in <code>model.compile()</code>?</p>\n<pre><code>import tensorflow as tf\nimport tensorflow_datasets as tfds\nimport numpy as np\nimport matplotlib.pyplot as plt\ntf.random.set_seed(42)\n\ntrain, test = tfds.load('fashion_mnist', split=['train', 'test'], as_supervised=True)\n\ntrain = train.map(lambda x, y: (tf.divide(x, 255), y)).batch(8)\ntest = test.map(lambda x, y: (tf.divide(x, 255), y)).batch(8)\n\ncustom_model = tf.keras.Sequential([\n    tf.keras.layers.Conv2D(32, kernel_size=3, activation='relu'),\n    tf.keras.layers.MaxPooling2D(pool_size=(2, 2)),\n    tf.keras.layers.Conv2D(64, kernel_size=3, activation='relu'),\n    tf.keras.layers.MaxPooling2D(pool_size=(2, 2)),\n    tf.keras.layers.Flatten(),\n    tf.keras.layers.Dense(64, activation='relu'),\n    tf.keras.layers.Dense(128, activation='relu'),\n    tf.keras.layers.Dense(10, activation='softmax')])\n\ncustom_model.compile(loss=tf.metrics.SparseCategoricalCrossentropy(),\n                     optimizer=tf.optimizers.Adam(),\n                     metrics=[tf.metrics.SparseCategoricalAccuracy()])\n\nearly_stopping = [tf.keras.callbacks.EarlyStopping(patience=5)]\n\nconv_dropout_history = custom_model.fit(train, validation_data=test,\n                                        epochs=100, callbacks=early_stopping)\n</code></pre>\n<p>Is there any way to use this object in <code>model.compile()</code> or should I only ever use <code>tf.metrics.sparse_categorical_crossentropy</code> (or the string form)?</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 223}]