[{"items": [{"tags": ["numpy", "tensorflow"], "owner": {"account_id": 3098229, "reputation": 894, "user_id": 2623004, "user_type": "registered", "accept_rate": 90, "profile_image": "https://www.gravatar.com/avatar/224123d67189a6a8ba2d6add125be437?s=256&d=identicon&r=PG", "display_name": "Kane", "link": "https://stackoverflow.com/users/2623004/kane"}, "is_answered": false, "view_count": 41, "answer_count": 1, "score": 1, "last_activity_date": 1630510846, "creation_date": 1630497111, "question_id": 69013229, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/69013229/inconsistent-behaviour-shuffling-numpy-arrays-using-tensorflow", "title": "Inconsistent behaviour shuffling numpy arrays using TensorFlow", "body": "<p>I encountered a strange behaviour while shuffling numpy arrays in Tensorflow (using Google Colab):</p>\n<pre><code>from matplotlib import pyplot as plt\nimport tensorflow as tf\nimport numpy as np\n\nseed = int(np.random.randint(0, 2 ** 16))\n(train_x, train_y), (test_x, test_y) = tf.keras.datasets.cifar10.load_data()\ntrain_x = train_x / 255.0 # this line\ntrain_x = tf.random.shuffle(train_x, seed=seed)\ntrain_y = tf.random.shuffle(train_y, seed=seed)\ntrain_dataset = tf.data.Dataset.from_tensor_slices((train_x, train_y))\n\nfor i in train_dataset.take(10):\n    print(f&quot;Label: {i[1].numpy()[0]}&quot;, end=', ')\n    plt.figure()\n    plt.imshow(i[0])\n</code></pre>\n<p>After shuffling train_x and train_y (both numpy arrays) this way, I visually confirmed that the relationship between the indexes were maintained i.e. seems each call to shuffle reset the rng and got the same permutation both times. However, when I comment out the normalization step (marked 'this line') the shuffling destroys the relationship between indexes.</p>\n<p>I don't understand this behaviour and would like to find out why this happens. Any help appreciated.</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 78}]