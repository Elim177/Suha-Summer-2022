[{"items": [{"tags": ["python", "tensorflow", "loss-function", "mean-square-error"], "owner": {"user_type": "does_not_exist", "display_name": "user12069894"}, "is_answered": false, "view_count": 139, "answer_count": 0, "score": 0, "last_activity_date": 1577972212, "creation_date": 1577972212, "question_id": 59564302, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/59564302/tensorflow-meansquarederror-doenst-work-on-one-number", "title": "Tensorflow MeanSquaredError doens&#39;t work on one number", "body": "<p>I am trying calculate the loss of a network with tensorflow mean squared error, but for some reason it doesn't work if the input tensors only have one number. How should do this instead.</p>\n\n<p>Here is some code:</p>\n\n<pre><code>import tensorflow as tf\n\nloss = tf.keras.losses.MeanSquaredError()\n\na = loss(y_true=tf.constant([1.0, 2.0, 3.0]), y_pred=tf.constant([2.0, 2.0, 4.0]))\nprint(a)\n\na = loss(y_true=tf.constant(1.0, dtype=tf.float32), y_pred=tf.constant(2.0, dtype=tf.float32)) #this is where the error occurs.\nprint(a)\n</code></pre>\n\n<p>error</p>\n\n<blockquote>\n  <p>tensorflow.python.framework.errors_impl.InvalidArgumentError: Invalid reduction dimension (-1 for input with 0 dimension(s) [Op:Mean]</p>\n</blockquote>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 19}]