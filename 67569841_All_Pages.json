[{"items": [{"tags": ["machine-learning", "keras", "deep-learning", "tf.keras", "training-data"], "owner": {"account_id": 18357231, "reputation": 11, "user_id": 13370013, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/a-/AOh14Gj4qTXaNP0CCbzTIMaW768lGHTagySdA5FYquIs=k-s256", "display_name": "Ketaki Malhotra", "link": "https://stackoverflow.com/users/13370013/ketaki-malhotra"}, "is_answered": false, "view_count": 272, "answer_count": 0, "score": 1, "last_activity_date": 1621266946, "creation_date": 1621255165, "last_edit_date": 1621266946, "question_id": 67569841, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/67569841/method-requires-being-in-cross-replica-context-use-get-replica-context-merge", "title": "Method requires being in cross-replica context, use get_replica_context().merge_call()", "body": "<p>I'm getting this runtime error in my custom loss function, inside which I have further used model.predict() to calculate a certain loss</p>\n<pre><code>RuntimeError: Method requires being in cross-replica context, use get_replica_context().merge_call()\n</code></pre>\n<p>Here is the code of my custom loss function:</p>\n<pre><code>#y_true passed is dummy, loading y_true from saved NumPy array to compare with\n\n#load model\nmodel = load_model()\n\nwith tf.GradientTape() as tape:\n    y_true= np.load(&quot;../data/test/embedding_vector.npy&quot;)        \n    \n    y_pred_output = model.predict(y_pred)\n\n    loss = tf.keras.losses.cosine_similarity(y_pred_output, y_true)\n    return loss \n</code></pre>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 219}]