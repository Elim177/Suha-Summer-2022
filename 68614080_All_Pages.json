[{"items": [{"tags": ["python", "tensorflow"], "owner": {"account_id": 12829196, "reputation": 3199, "user_id": 9280994, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/378f51f8fdf92e078e0fd52507fed62f?s=256&d=identicon&r=PG&f=1", "display_name": "Jonathan R", "link": "https://stackoverflow.com/users/9280994/jonathan-r"}, "is_answered": false, "view_count": 53, "answer_count": 0, "score": 0, "last_activity_date": 1627852543, "creation_date": 1627849242, "last_edit_date": 1627852543, "question_id": 68614080, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/68614080/tensorflow-valueerror-no-gradients-provided-for-any-variable", "title": "Tensorflow: ValueError: No gradients provided for any variable", "body": "<p>I am confused as of why the following functions throws the error <code>ValueError: No gradients provided for any variable</code>.</p>\n<pre class=\"lang-py prettyprint-override\"><code>@tf.function\ndef train_network(model, optimizer, states, actions, rewards):\n    with tf.GradientTape() as tape:\n        predictions = model(states)\n        indices = tf.stack([tf.range(predictions.shape[0], dtype=tf.int64), actions], axis=1)\n        action_rewards = tf.scatter_nd(indices, rewards, predictions.shape)\n        loss = tf.keras.losses.MSE(predictions, action_rewards)\n    grads = tape.gradient(loss, model.trainable_variables)\n    optimizer.apply_gradients(zip(grads, model.trainable_variables))\n    return loss\n</code></pre>\n<p>I pass the model and optimizer because they are part of a class-object. But as I found you cannot have a tf.function as a class-function.</p>\n<p>If I try the same thing with a keras fit function it works just fine, eg. <code>self.model.fit(np.array(states_epoch), np.array(rewards_epoch), batch_size=50)</code>.</p>\n<p>I want to run it with a tf function because my training is actually more complex but for this example I slimmed it down as much as possible.</p>\n<p>More info:</p>\n<p>states are float32, actions is a list of integers of actions took, reward is a list of integers of received rewards.</p>\n<p>The network is a simple DNN, optimizer is keras.</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 88}]