[{"items": [{"tags": ["tensorflow", "tensorflow2.0"], "owner": {"account_id": 4548208, "reputation": 3430, "user_id": 8089695, "user_type": "registered", "accept_rate": 100, "profile_image": "https://www.gravatar.com/avatar/92107cb1b109e2b8281e9cb76b5e3f16?s=256&d=identicon&r=PG&f=1", "display_name": "MiloMinderbinder", "link": "https://stackoverflow.com/users/8089695/milominderbinder"}, "is_answered": true, "view_count": 956, "accepted_answer_id": 59627473, "answer_count": 1, "score": 0, "last_activity_date": 1578396261, "creation_date": 1578394305, "question_id": 59626966, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/59626966/using-tensors-are-dictionary-keys-in-tensorflow", "title": "Using tensors are dictionary keys in tensorflow", "body": "<p>i have seen the answer <a href=\"https://stackoverflow.com/questions/52879126/how-are-tensors-immutable-in-tensorflow\">here</a>. It is not what i am looking for.</p>\n\n<p>I am running this on tensorflow2.0</p>\n\n<p>I read the following sentence in the TensorFlow documentation:</p>\n\n<blockquote>\n  <p>With the exception of tf.Variable, the value of a tensor is immutable,\n  which means that in the context of a single execution tensors only\n  have a single value. However, evaluating the same tensor twice can\n  return different values; for example that tensor can be the result of\n  reading data from disk, or generating a random number.</p>\n</blockquote>\n\n<p>I tried using tensors as a dictionary key and i get the following error:</p>\n\n<pre><code>Tensor is unhashable if Tensor equality is enabled. Instead, use tensor.experimental_ref() as the key\n</code></pre>\n\n<ol>\n<li>What does this error mean?</li>\n<li>Are tf.Variables hashable as well? They also define a computation rather than being the computation, so why the distinction 'With the exception of tf.Variable, the value of a tensor is immutable' is there</li>\n</ol>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 171}]