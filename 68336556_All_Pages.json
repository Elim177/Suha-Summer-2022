[{"items": [{"tags": ["python", "tensorflow", "deep-learning", "tensorflow-probability"], "owner": {"account_id": 14830665, "reputation": 65, "user_id": 10710212, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/514681b4eab00e298414f6b68f42ef8a?s=256&d=identicon&r=PG&f=1", "display_name": "John Brown", "link": "https://stackoverflow.com/users/10710212/john-brown"}, "is_answered": false, "view_count": 166, "answer_count": 0, "score": 0, "last_activity_date": 1626013497, "creation_date": 1626008948, "last_edit_date": 1626013497, "question_id": 68336556, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/68336556/real-nvp-with-tensorflow-probability", "title": "Real NVP with tensorflow probability", "body": "<p>I am trying to train a Real NVP with tensorflow probability. However I get a <code>TypeError</code> with the following description:</p>\n<pre><code>The following are legacy tf.layers.Layers:\n &lt;tensorflow.python.keras.legacy_tf_layers.core.Dense object at 0x7f0888763580&gt;\n  &lt;tensorflow.python.keras.legacy_tf_layers.core.Dense object at 0x7f0888744b20&gt;\n  &lt;tensorflow.python.keras.legacy_tf_layers.core.Dense object at 0x7f0888761df0&gt;\n  &lt;tensorflow.python.keras.legacy_tf_layers.core.Dense object at 0x7f088866df40&gt;\n  &lt;tensorflow.python.keras.legacy_tf_layers.core.Dense object at 0x7f088866d9a0&gt;\n  &lt;tensorflow.python.keras.legacy_tf_layers.core.Dense object at 0x7f0888572220&gt;\nTo use keras as a framework (for instance using the Network, Model, or Sequential classes), please use the tf.keras.layers implementation instead. (Or, if writing custom layers, subclass from tf.keras.layers rather than tf.layers)\n\n</code></pre>\n<p>This is the code:</p>\n<pre><code>import numpy as np\nimport tensorflow as tf\nimport tensorflow.keras as k\nimport tensorflow_probability as tfp\n\nrealnvp1 = tfp.bijectors.RealNVP(fraction_masked=0.5,\n    shift_and_log_scale_fn=tfp.bijectors.real_nvp_default_template(\n        hidden_layers=[32,32])\n    )\n\nbase_distribution = tfp.distributions.MultivariateNormalDiag(loc=[0.,0.])\ntrainable_distribution = realnvp1(base_distribution)\n\nnet_in = k.layers.Input(shape=(2,), dtype=np.float32)\nnet_out = trainable_distribution.log_prob(net_in)\nmodel = k.Model(net_in,net_out)\n\n</code></pre>\n<p>The last line causes the error. What is the right implementation?</p>\n<p>Below I attach the full traceback:</p>\n<pre><code>2021-07-11 15:52:52.896472: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library libcudart.so.11.0\n2021-07-11 15:52:53.743731: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library libcuda.so.1\n2021-07-11 15:52:53.766232: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:937] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n2021-07-11 15:52:53.766414: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1733] Found device 0 with properties: \npciBusID: 0000:01:00.0 name: GeForce RTX 2070 computeCapability: 7.5\ncoreClock: 1.83GHz coreCount: 36 deviceMemorySize: 7.79GiB deviceMemoryBandwidth: 417.29GiB/s\n2021-07-11 15:52:53.766428: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library libcudart.so.11.0\n2021-07-11 15:52:53.769011: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library libcublas.so.11\n2021-07-11 15:52:53.769037: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library libcublasLt.so.11\n2021-07-11 15:52:53.769636: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library libcufft.so.10\n2021-07-11 15:52:53.769787: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library libcurand.so.10\n2021-07-11 15:52:53.770123: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library libcusolver.so.11\n2021-07-11 15:52:53.770679: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library libcusparse.so.11\n2021-07-11 15:52:53.770767: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library libcudnn.so.8\n2021-07-11 15:52:53.770816: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:937] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n2021-07-11 15:52:53.771010: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:937] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n2021-07-11 15:52:53.771166: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1871] Adding visible gpu devices: 0\n2021-07-11 15:52:53.771355: I tensorflow/core/platform/cpu_feature_guard.cc:142] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 FMA\nTo enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.\n2021-07-11 15:52:53.771762: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:937] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n2021-07-11 15:52:53.771931: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1733] Found device 0 with properties: \npciBusID: 0000:01:00.0 name: GeForce RTX 2070 computeCapability: 7.5\ncoreClock: 1.83GHz coreCount: 36 deviceMemorySize: 7.79GiB deviceMemoryBandwidth: 417.29GiB/s\n2021-07-11 15:52:53.771967: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:937] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n2021-07-11 15:52:53.772140: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:937] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n2021-07-11 15:52:53.772296: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1871] Adding visible gpu devices: 0\n2021-07-11 15:52:53.772320: I tensorflow/stream_executor/platform/default/dso_loader.cc:53] Successfully opened dynamic library libcudart.so.11.0\n2021-07-11 15:52:54.097441: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1258] Device interconnect StreamExecutor with strength 1 edge matrix:\n2021-07-11 15:52:54.097462: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1264]      0 \n2021-07-11 15:52:54.097467: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1277] 0:   N \n2021-07-11 15:52:54.097580: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:937] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n2021-07-11 15:52:54.097755: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:937] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n2021-07-11 15:52:54.097936: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:937] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\n2021-07-11 15:52:54.098093: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1418] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 381 MB memory) -&gt; physical GPU (device: 0, name: GeForce RTX 2070, pci bus id: 0000:01:00.0, compute capability: 7.5)\n/home/john/miniconda3/envs/myenv/lib/python3.8/site-packages/tensorflow/python/keras/legacy_tf_layers/core.py:171: UserWarning: `tf.layers.dense` is deprecated and will be removed in a future version. Please use `tf.keras.layers.Dense` instead.\n  warnings.warn('`tf.layers.dense` is deprecated and '\n/home/john/miniconda3/envs/myenv/lib/python3.8/site-packages/tensorflow/python/keras/engine/base_layer.py:2183: UserWarning: `layer.apply` is deprecated and will be removed in a future version. Please use `layer.__call__` method instead.\n  warnings.warn('`layer.apply` is deprecated and '\nTraceback (most recent call last):\n  File &quot;/home/john/.local/lib/python3.8/site-packages/IPython/core/interactiveshell.py&quot;, line 3343, in run_code\n    exec(code_obj, self.user_global_ns, self.user_ns)\n  File &quot;&lt;ipython-input-3-147123f84263&gt;&quot;, line 16, in &lt;module&gt;\n    model = k.Model(net_in,net_out)\n  File &quot;/home/john/miniconda3/envs/myenv/lib/python3.8/site-packages/tensorflow/python/training/tracking/base.py&quot;, line 522, in _method_wrapper\n    result = method(self, *args, **kwargs)\n  File &quot;/home/john/miniconda3/envs/myenv/lib/python3.8/site-packages/tensorflow/python/keras/engine/functional.py&quot;, line 115, in __init__\n    self._init_graph_network(inputs, outputs)\n  File &quot;/home/john/miniconda3/envs/myenv/lib/python3.8/site-packages/tensorflow/python/training/tracking/base.py&quot;, line 522, in _method_wrapper\n    result = method(self, *args, **kwargs)\n  File &quot;/home/john/miniconda3/envs/myenv/lib/python3.8/site-packages/tensorflow/python/keras/engine/functional.py&quot;, line 227, in _init_graph_network\n    tf_utils.assert_no_legacy_layers(self.layers)\n  File &quot;/home/john/miniconda3/envs/myenv/lib/python3.8/site-packages/tensorflow/python/keras/utils/tf_utils.py&quot;, line 411, in assert_no_legacy_layers\n    raise TypeError(\nTypeError: The following are legacy tf.layers.Layers:\n  &lt;tensorflow.python.keras.legacy_tf_layers.core.Dense object at 0x7ff8602fb640&gt;\n  &lt;tensorflow.python.keras.legacy_tf_layers.core.Dense object at 0x7ff8602fb6a0&gt;\n  &lt;tensorflow.python.keras.legacy_tf_layers.core.Dense object at 0x7ff8602e1850&gt;\n  &lt;tensorflow.python.keras.legacy_tf_layers.core.Dense object at 0x7ff860232310&gt;\n  &lt;tensorflow.python.keras.legacy_tf_layers.core.Dense object at 0x7ff860229fa0&gt;\n  &lt;tensorflow.python.keras.legacy_tf_layers.core.Dense object at 0x7ff860232c10&gt;\nTo use keras as a framework (for instance using the Network, Model, or Sequential classes), please use the tf.keras.layers implementation instead. (Or, if writing custom layers, subclass from tf.keras.layers rather than tf.layers)\n</code></pre>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 202}]