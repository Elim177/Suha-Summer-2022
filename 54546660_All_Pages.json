[{"items": [{"tags": ["c#", "python", "tensorflow", "keras"], "owner": {"account_id": 82169, "reputation": 2748, "user_id": 231238, "user_type": "registered", "accept_rate": 45, "profile_image": "https://www.gravatar.com/avatar/79eacf8ee1b8da82f5baffd6ba94054e?s=256&d=identicon&r=PG", "display_name": "LOST", "link": "https://stackoverflow.com/users/231238/lost"}, "is_answered": true, "view_count": 1006, "accepted_answer_id": 54562457, "answer_count": 1, "score": 2, "last_activity_date": 1549486729, "creation_date": 1549427611, "question_id": 54546660, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/54546660/how-to-pass-validation-data-to-model-fit-dataset", "title": "How to pass validation_data to Model.fit + Dataset?", "body": "<p>I am trying to train a simple <code>Sequential</code> network on generated data. I have a precomputed validation dataset.</p>\n\n<p>To feed the inputs, I am using <code>tf.data.Dataset</code> API like suggested here: \n<a href=\"https://stackoverflow.com/a/48134765/231238\">https://stackoverflow.com/a/48134765/231238</a></p>\n\n<pre><code>var train = Dataset.from_tensor_slices(ValueTuple.Create(trainInputs, trainOutputs));\ntrain = train\n    .repeat(2000000)\n    .shuffle(buffer_size: 1024 * 8 * InterpolateBy)\n    .batch(1024);\nmodel.fit_dyn(train,\n    epochs: 6*1024,\n    steps_per_epoch: 4\n    // line below does not work:\n    , validation_data: (testInputs, testOutputs)\n);\n</code></pre>\n\n<p>It works fine without <code>validation_data</code>.</p>\n\n<p>If I pass <code>validation_data</code> as a tuple of tensors, like in the example above, e.g. <code>(testInputs, testOutputs)</code>, it throws <code>'TypeError : float() argument must be a string or a number, not 'NoneType'</code>.  (This is what I used to do with train data too before switching to <code>Dataset</code>, and validation worked)</p>\n\n<p>If I wrap <code>testInputs</code> and <code>testOutputs</code> into a <code>Dataset</code> similarly to the train data, e.g. <code>Dataset.from_tensor_slices(ValueTuple.Create(testInputs, testOutputs))</code></p>\n\n<p>I get a different error: <code>ValueError : Error when checking input: expected sequential_input to have 2 dimensions, but got array with shape (347,)</code>.</p>\n\n<p>Here 347 is the size of feature vector, hence <code>testInputs.shape</code> is (221, 347) and <code>testOutputs.shape</code> is (221, 1)</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 60}]