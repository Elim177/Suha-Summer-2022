[{"items": [{"tags": ["python", "numpy", "tensorflow", "tensor"], "owner": {"account_id": 5602969, "reputation": 33, "user_id": 4438611, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/1793ba099e5c4d9f49505d797bf104f7?s=256&d=identicon&r=PG", "display_name": "John", "link": "https://stackoverflow.com/users/4438611/john"}, "is_answered": true, "view_count": 570, "answer_count": 1, "score": 2, "last_activity_date": 1601283536, "creation_date": 1597432736, "question_id": 63418873, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/63418873/in-decorated-tf-function-i-get-error-tensor-object-has-no-attribute-numpy", "title": "In decorated tf function, I get error: &#39;Tensor&#39; object has no attribute &#39;numpy&#39;", "body": "<p>I've looked all over but can't find anyone who's previous answers help.</p>\n<p>I have a tensorflow model with an @tf.function in it that does the training (tf version 2.3.0). Within the train_step call, I need to pass the data from a tensor on to a numpy function that performs a cwt transform on it. There is (afaik) no tensorflow cwt, thus the need to pass this on to a numpy function. The issue I have is that within the @tf.function, the tensors are graphed, and thus one cannot directly call .numpy() to transform that tensor into a numpy array. Small code snippet shows the code, below.</p>\n<p>My question is how can I transform my generated output data from my generator call into something I can pass on to this numpy function. Here's hoping there's a way to do this!</p>\n<p>Thanks.</p>\n<pre><code>@tf.function\ndef train_step(self, true_data):\n    noise = tf.random.uniform(shape=[1, 100, 1], minval=0, maxval=1, dtype=tf.float32) \n    with tf.GradientTape() as gen_tape, tf.GradientTape() as disc_tape:\n        generated_data = self.generator(noise)\n        nump_data = generated_data.numpy()\n\n&lt;this line produces: AttributeError: 'Tensor' object has no attribute 'numpy'&gt;\n</code></pre>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 195}]