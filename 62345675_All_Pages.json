[{"items": [{"tags": ["tensorflow", "tensorboard", "summary"], "owner": {"account_id": 13457117, "reputation": 671, "user_id": 9710391, "user_type": "registered", "profile_image": "https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg?sz=256", "display_name": "gab", "link": "https://stackoverflow.com/users/9710391/gab"}, "is_answered": false, "view_count": 46, "answer_count": 0, "score": 0, "last_activity_date": 1591969947, "creation_date": 1591969947, "question_id": 62345675, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/62345675/image-summaries-with-tensorflow-2-dataset-api", "title": "Image summaries with TensorFlow 2 Dataset API", "body": "<p>How can I create an image summary in tensorboard using tensorflow >2? It is clear to me how I should do with tensorflow 1 (e.g. using placeholder), but I'm not sure about the new tensorflow.</p>\n\n<p>This is my current code:</p>\n\n<pre><code># create dataset using tf.data.Dataset :\ntrain_data = create_dataset_pipeline(train_filenames)  #\u00a0returns (image, mask) pairs\nvalid_data = create_dataset_pipeline(valid_filenames)  #\u00a0exactly as train_data, but on different images\n\n# define a model:\nmodel = UNet()\n\n# train model:\nfor image, mask in train_data:\n   with tf.GradientTape() as tape:\n      predictions = model(image, training=True)\n      loss = weighted_cross_entropy(predictions, labels)\n\n   # apply gradients\n   gradients = tape.gradient(loss, model.trainable_variables)\n   optimizer.apply_gradients(zip(gradients, model.trainable_variables))\n\n   # ....\n</code></pre>\n\n<p>And during the validation step, I'd like to show some examples of an input image, and the respective model prediction and ground-truth segmentation mask.</p>\n\n<pre><code>with writer.as_default():\n   tf.summary.image(\"Validation\", ????, step=0, max_outputs=3)\n</code></pre>\n\n<p>What should I put in <code>????</code>? </p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 79}]