[{"items": [{"tags": ["python", "tensorflow"], "owner": {"account_id": 9184711, "reputation": 792, "user_id": 10528078, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c42df61d1d464c084c4540fdcbfe56e5?s=256&d=identicon&r=PG&f=1", "display_name": "leo", "link": "https://stackoverflow.com/users/10528078/leo"}, "is_answered": true, "view_count": 100, "accepted_answer_id": 59923389, "answer_count": 1, "score": 1, "last_activity_date": 1580078282, "creation_date": 1580072860, "question_id": 59922755, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/59922755/how-to-compute-the-gradient-of-only-one-output-unit", "title": "How to compute the gradient of only one output unit?", "body": "<p>I have a trained model called <strong>net</strong>, last layer(output layer) is a Dense layer with 10 unit and linear activation funcion. when I calculate the gradient like this everything works fine:</p>\n\n<pre><code>   with tf.GradientTape(persistent=True) as tape:\n        output = net(x)\n   grad = tape.gradient(output, x)\n</code></pre>\n\n<p>output is a tf.Tensor with shape (1, 10).</p>\n\n<p>now when I try to calculate gradients from only one of the 10 output units grad is None, and I calculate it like this for the first unit for example:</p>\n\n<pre><code>   with tf.GradientTape(persistent=True) as tape:\n        output = net(x)\n   grad = tape.gradient(output[0,0], x)\n</code></pre>\n\n<p>output[0,0] is a tf.Tensor.</p>\n\n<p>What is the correct way to calculate this gradients?</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 38}]