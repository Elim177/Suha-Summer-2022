[{"items": [{"tags": ["tensorflow", "google-cloud-platform", "google-colaboratory"], "owner": {"account_id": 15587361, "reputation": 651, "user_id": 11245475, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/77dcf0ea160a4e6b27eed736d2b8df83?s=256&d=identicon&r=PG&f=1", "display_name": "krenerd", "link": "https://stackoverflow.com/users/11245475/krenerd"}, "is_answered": false, "view_count": 296, "answer_count": 0, "score": 0, "last_activity_date": 1613381500, "creation_date": 1613381500, "question_id": 66205563, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/66205563/typeerror-not-json-serializable-when-saving-a-model-with-custom-layer-on", "title": "TypeError: (&#39;Not JSON Serializable:&#39;... when saving a model with custom layer ONLY in Google cloud platform", "body": "<p>I implemented a neural network consisting of a custom layer <code>GlobalWeightedAveragePooling</code> described below. The following error occurred when saving the model in Google Cloud Platform, while successfully saving the model in <a href=\"https://colab.research.google.com/drive/1m3Vh-P20o41kzwu7tgd0TYmF8iW4r7Hu#scrollTo=p1-ySEpYwArD\" rel=\"nofollow noreferrer\">Google Colab</a>. I searched for multiple Github issues, suggesting several solutions but none I have tried solved this issue. What might be some possible issues of this only happening in GCP? (Perhaps version issues, cudnn setup, OS compatibility...)</p>\n<pre><code>class GlobalWeightedAveragePooling(tf.keras.layers.Layer):\n    #Implementation of GlobalWeightedAveragePooling\n    def __init__(self,kernel_initializer=tf.keras.initializers.RandomNormal(stddev=0.01),**kwargs):\n        #self.num_outputs = num_outputs\n        super(GlobalWeightedAveragePooling, self).__init__()\n        self.kernel_initializer =kernel_initializer\n        super(GlobalWeightedAveragePooling, self).__init__(**kwargs)\n\n    def build(self, input_shape):\n        #input_shape=(w,h,c)\n        self.kernel = self.add_weight(&quot;kernel&quot;,shape=input_shape[1:],initializer=self.kernel_initializer)\n\n    def get_config(self):\n        config = super().get_config().copy()\n        config.update({'kernel': self.kernel})\n        return config\n    \n    def call(self, input):\n        com=tf.math.multiply(input, self.kernel)\n        return tf.math.reduce_sum(com,axis=[1,2])\n\nmodel.save('./logs/weights', save_format='tf')\n</code></pre>\n<p>Error message</p>\n<pre><code>...\n  File &quot;/opt/conda/lib/python3.7/json/encoder.py&quot;, line 257, in iterencode\n    return _iterencode(o, 0)\n  File &quot;/opt/conda/lib/python3.7/site-packages/tensorflow/python/keras/saving/saved_model/json_utils.py&quot;, line 50, in default\n    return serialization.get_json_type(obj)\n  File &quot;/opt/conda/lib/python3.7/site-packages/tensorflow/python/util/serialization.py&quot;, line 79, in get_json_type\n    raise TypeError('Not JSON Serializable:', obj)\n\nTypeError: ('Not JSON Serializable:', &lt;tf.Variable 'global_weighted_average_pooling_1/kernel:0' shape=(6, 6, 448) dtype=float32, numpy=\narray([[[-0.01235585,  0.00958068, -0.01888468, ..., -0.01521709,\n          0.0061503 , -0.0146472 ],\n        [ 0.00336177, -0.00686159,  0.01115836, ...,  0.00540031,\n          0.00579884, -0.00464661],\n        [-0.00188815, -0.00527825,  0.00524037, ...,  0.00175391,\n</code></pre>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 255}]