[{"items": [{"tags": ["python", "tensorflow", "feature-extraction", "roi"], "owner": {"account_id": 12443584, "reputation": 138, "user_id": 9060589, "user_type": "registered", "profile_image": "https://lh6.googleusercontent.com/-L112kx7B-CM/AAAAAAAAAAI/AAAAAAAAAeY/50KaS_RgRwI/photo.jpg?sz=256", "display_name": "Go Go Gadget 2", "link": "https://stackoverflow.com/users/9060589/go-go-gadget-2"}, "is_answered": true, "view_count": 15081, "accepted_answer_id": 47707733, "answer_count": 1, "score": 6, "last_activity_date": 1512987603, "creation_date": 1512647625, "last_edit_date": 1512987603, "question_id": 47694551, "content_license": "CC BY-SA 3.0", "link": "https://stackoverflow.com/questions/47694551/valueerror-shape-must-be-rank-1-but-is-rank-0-for-roialign-crop-op-cropand", "title": "ValueError: Shape must be rank 1 but is rank 0 for &#39;ROIAlign/Crop&#39; (op: &#39;CropAndResize&#39;) with input shapes: [2,360,475,3], [1,4], [], [2]", "body": "<p>I tried to give all input in this function but it comes out problem like below , i not sure what is the empty [] is .\nThere are 2 image image in RGB and the original code is from <a href=\"https://github.com/CharlesShang/FastMaskRCNN/blob/master/libs/layers/crop.py\" rel=\"noreferrer\">https://github.com/CharlesShang/FastMaskRCNN/blob/master/libs/layers/crop.py</a>.</p>\n\n<pre><code>Traceback (most recent call last):\n  File \"croptest.py\", line 77, in &lt;module&gt;\n    crop(img, boxes, batch_inds,1,7,7,'ROIAlign')\n  File \"croptest.py\", line 64, in crop\n    name='Crop')\n  File \"/home/ubuntu/Desktop/WK/my_project/lib/python2.7/site-packages/tensorflow/python/ops/gen_image_ops.py\", line 166, in crop_and_resize\n    name=name)\n  File \"/home/ubuntu/Desktop/WK/my_project/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py\", line 767, in apply_op\n    op_def=op_def)\n  File \"/home/ubuntu/Desktop/WK/my_project/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 2632, in create_op\n    set_shapes_for_outputs(ret)\n  File \"/home/ubuntu/Desktop/WK/my_project/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1911, in set_shapes_for_outputs\n    shapes = shape_func(op)\n  File \"/home/ubuntu/Desktop/WK/my_project/lib/python2.7/site-packages/tensorflow/python/framework/ops.py\", line 1861, in call_with_requiring\n    return call_cpp_shape_fn(op, require_shape_fn=True)\n  File \"/home/ubuntu/Desktop/WK/my_project/lib/python2.7/site-packages/tensorflow/python/framework/common_shapes.py\", line 595, in call_cpp_shape_fn\n    require_shape_fn)\n  File \"/home/ubuntu/Desktop/WK/my_project/lib/python2.7/site-packages/tensorflow/python/framework/common_shapes.py\", line 659, in _call_cpp_shape_fn_impl\n    raise ValueError(err.message)\nValueError: Shape must be rank 1 but is rank 0 for 'ROIAlign/Crop' (op: 'CropAndResize') with input shapes: [2,360,475,3], [1,4], [], [2].\n</code></pre>\n\n<p>the code i run is shown as below.</p>\n\n<pre><code>from __future__ import absolute_import\nfrom __future__ import division\nfrom __future__ import print_function\nimport glob\nimport tensorflow as tf\nimport numpy as np\nimport cv2 \n\ndef crop(images, boxes, batch_inds, stride, pooled_height, pooled_width, scope):\n  \"\"\"Cropping areas of features into fixed size\n  Params:\n  --------\n  images: a 4-d Tensor of shape (N, H, W, C)\n  boxes: rois in the original image, of shape (N, ..., 4), [x1, y1, x2, y2]\n  batch_inds: \n\n  Returns:\n  --------\n  A Tensor of shape (N, pooled_height, pooled_width, C)\n  \"\"\"\n  with tf.name_scope(scope):\n    boxes = [x / (stride+0.0) for x in boxes]\n    boxes = tf.reshape(boxes, [-1, 4])\n    print(images)\n\n    print(images.shape)\n    shape = tf.shape(images)\n    boxes = tf.reshape(boxes, [-1, 2]) # to (x, y)\n    xs = boxes[:, 0] \n    ys = boxes[:, 1]\n    xs = xs / tf.cast(shape[2], tf.float32)\n    ys = ys / tf.cast(shape[1], tf.float32)\n    boxes = tf.concat([ys[:, tf.newaxis], xs[:, tf.newaxis]], axis=1)\n    boxes = tf.reshape(boxes, [-1, 4])  # to (y1, x1, y2, x2)\n    assert_op = tf.Assert(tf.greater(tf.size(images), 0), [images, batch_inds])\n    print(assert_op)\n    print(\"-----------------------\")\n    print(images.astype('float'))\n    print(\"-----------------------\")\n    print(batch_inds)\n    x=images.astype('float')\n    print(\"-----------------------\")\n    print(batch_inds)\n    print(\"-----------------------\")\n    print(pooled_height)\n    print(\"-----------------------\")\n    pools =[pooled_height, pooled_width]\n\n    arg = tf.convert_to_tensor(x, dtype=tf.float32)\n    arg1 = tf.convert_to_tensor(batch_inds)\n    with tf.control_dependencies([assert_op, arg,arg1 ]):\n        return  tf.image.crop_and_resize(images, boxes, batch_inds,\n                                         pools,\n                                         method='bilinear',\n                                         name='Crop')\nimages = [cv2.imread(file) for file in glob.glob(\"/home/ubuntu/Pictures/TeImage/*.png\")]\nimg= np.asarray(images)\nboxes = [100, 100, 200, 200]\nbatch_inds=2\ncrop(img, boxes, batch_inds,1,7,7,'ROIAlign')\n</code></pre>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 77}]