[{"items": [{"tags": ["python", "tensorflow"], "owner": {"user_type": "does_not_exist", "display_name": "user8547000"}, "is_answered": false, "view_count": 142, "answer_count": 1, "score": 1, "last_activity_date": 1504640683, "creation_date": 1504609380, "last_edit_date": 1504612811, "question_id": 46053363, "content_license": "CC BY-SA 3.0", "link": "https://stackoverflow.com/questions/46053363/tensorflow-mnist-label-placeholder-shape-mismatches-errors", "title": "Tensorflow MNIST label placeholder shape mismatches errors", "body": "<p>I have written following code for MNIST classification training, when I run it throws <code>placeholder</code> shape mismatches errors. </p>\n\n<pre><code>from tensorflow.examples.tutorials.mnist import input_data \nmnist = input_data.read_data_sets(\"/tmp/data/\", one_hot=False)\nx = tf.placeholder(tf.float32, [None, 784])\ny_ = tf.placeholder(tf.float32, [None,10])\ndef weight_variable(shape):\n    initial = tf.truncated_normal(shape, stddev=0.1)\n    return tf.Variable(initial)\ndef bias_variable(shape):\n    initial = tf.constant(0.1, shape=shape)\n    return tf.Variable(initial)\ndef conv2d(x, W):\n    return tf.nn.conv2d(x, W, strides=[1, 1, 1, 1], padding='SAME')\ndef max_pool_2x2(x):\n    return tf.nn.max_pool(x, ksize=[1, 2, 2, 1],strides=[1, 2, 2, 1], padding='SAME')\n W_conv1 = weight_variable([5, 5, 1, 32])\n b_conv1 = bias_variable([32])\n x_image = tf.reshape(x, [-1, 28, 28, 1])\n h_conv1 = tf.nn.relu(conv2d(x_image, W_conv1) + b_conv1)\n h_pool1 = max_pool_2x2(h_conv1)\n W_conv2 = weight_variable([5, 5, 32, 64])\n b_conv2 = bias_variable([64])\n h_conv2 = tf.nn.relu(conv2d(h_pool1, W_conv2) + b_conv2)\n h_pool2 = max_pool_2x2(h_conv2)\n W_fc1 = weight_variable([7 * 7 * 64, 1024])\n b_fc1 = bias_variable([1024])\n h_pool2_flat = tf.reshape(h_pool2, [-1, 7*7*64])\n h_fc1 = tf.nn.relu(tf.matmul(h_pool2_flat, W_fc1) + b_fc1)\n keep_prob = tf.placeholder(tf.float32)\n h_fc1_drop = tf.nn.dropout(h_fc1, keep_prob)\n W_fc2 = weight_variable([1024, 10])\n b_fc2 = bias_variable([10])\n y_conv = tf.matmul(h_fc1_drop, W_fc2) + b_fc2\n cross_entropy = tf.reduce_mean(tf.nn.softmax_cross_entropy_with_logits(labels=y_, logits=y_conv))\n train_step = tf.train.AdamOptimizer(1e-4).minimize(cross_entropy)\n correct_prediction = tf.equal(tf.argmax(y_conv, 1), tf.argmax(y_, 1))\n accuracy = tf.reduce_mean(tf.cast(correct_prediction, tf.float32))\n with tf.Session() as sess:\n     sess.run(tf.global_variables_initializer())\n     for i in range(20000):\n         batch = mnist.train.next_batch(50)\n         if i % 100 == 0:\n             train_accuracy = accuracy.eval(feed_dict={x: batch[0], y_: batch[1], keep_prob: 1.0})\n             print('step %d, training accuracy %g' % (i, train_accuracy))\n         train_step.run(feed_dict={x: batch[0], y_: batch[1], keep_prob: 0.5})\n     print('test accuracy %g' % accuracy.eval(feed_dict={x: mnist.test.images, y_: mnist.test.labels, keep_prob: 1.0}))\n</code></pre>\n\n<p>When I run the training, it throws the following errors</p>\n\n<blockquote>\n  <p>ValueError: Cannot feed value of shape (50,) for Tensor 'Placeholder_1:0', which has shape '(?, 10)'</p>\n</blockquote>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 112}]