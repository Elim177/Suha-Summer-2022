[{"items": [{"tags": ["python", "tensorflow", "optimization", "keras", "loss-function"], "owner": {"account_id": 1314660, "reputation": 1090, "user_id": 1261829, "user_type": "registered", "accept_rate": 89, "profile_image": "https://www.gravatar.com/avatar/7dd19b7a71f13d946735fb841047c621?s=256&d=identicon&r=PG", "display_name": "mj1261829", "link": "https://stackoverflow.com/users/1261829/mj1261829"}, "is_answered": true, "view_count": 282, "accepted_answer_id": 60511244, "answer_count": 1, "score": 0, "last_activity_date": 1583251544, "creation_date": 1583242161, "question_id": 60508363, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/60508363/how-to-compile-a-keras-model-that-has-2-outputs-with-a-custom-loss-that-takes-3", "title": "How to compile a keras model that has 2 outputs with a custom loss that takes 3 parameters?", "body": "<p>I am trying to compile a model with 2 outputs using a custom loss function but I am failing at doing so. \nAny ideas? Let me show you what I have done,</p>\n\n<p>Here is the loss function:</p>\n\n<pre><code>def contrastive_loss(y_true, y_pred1, y_pred2):\n    '''Contrastive loss from Hadsell-et-al.'06\n    http://yann.lecun.com/exdb/publis/pdf/hadsell-chopra-lecun-06.pdf\n    '''\n    euclidean_distance = pairwise_dist(y_pred1, y_pred2)\n    loss_contrastive = K.mean((1-y_true) * tf.pow(euclidean_distance, 2) + \n                                  (y_true) * tf.pow(tf.clip_by_value(2.0 - euclidean_distance, 0.0, 2.0), 2))\n\n    return loss_contrastive\n</code></pre>\n\n<p>I tried this:</p>\n\n<pre><code>optimizer = Adam(lr = 0.00006)\nmodel.compile(loss=[lambda y_true,y_pred: contrastive_loss(y_true, y_pred[0], y_pred[1])],optimizer=optimizer)\n</code></pre>\n\n<p>But I get this error:</p>\n\n<pre><code>---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n&lt;ipython-input-27-b31099307b2d&gt; in &lt;module&gt;\n     15 [lambda y_true,y_pred: Custom_loss(y_true, y_pred, val=0.01)]\n     16 \n---&gt; 17 model.compile(loss=[lambda y_true,y_pred: contrastive_loss(y_true, y_pred[0], y_pred[1])],optimizer=optimizer)\n     18 \n     19 print(\"Starting training process!\")\n\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras\\backend\\tensorflow_backend.py in symbolic_fn_wrapper(*args, **kwargs)\n     73         if _SYMBOLIC_SCOPE.value:\n     74             with get_graph().as_default():\n---&gt; 75                 return func(*args, **kwargs)\n     76         else:\n     77             return func(*args, **kwargs)\n\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras\\engine\\training.py in compile(self, optimizer, loss, metrics, loss_weights, sample_weight_mode, weighted_metrics, target_tensors, **kwargs)\n    117         # Prepare list of loss functions, same size as model outputs.\n    118         self.loss_functions = training_utils.prepare_loss_functions(\n--&gt; 119             self.loss, self.output_names)\n    120 \n    121         self._feed_outputs = []\n\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\keras\\engine\\training_utils.py in prepare_loss_functions(loss, output_names)\n    825             raise ValueError('When passing a list as loss, it should have one entry '\n    826                              'per model outputs. The model has {} outputs, but you '\n--&gt; 827                              'passed loss={}'.format(len(output_names), loss))\n    828         loss_functions = [get_loss_function(l) for l in loss]\n    829     else:\n\nValueError: When passing a list as loss, it should have one entry per model outputs. The model has 2 outputs, but you passed loss=[&lt;function &lt;lambda&gt; at 0x0000000041EFCB88&gt;]\n</code></pre>\n\n<p>How to resolve this?</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 53}]