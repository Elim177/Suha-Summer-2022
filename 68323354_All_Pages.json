[{"items": [{"tags": ["python", "tensorflow"], "owner": {"account_id": 16122530, "reputation": 323, "user_id": 11638153, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/c1e00e3ad6c21fc0896e84b89a3d10a1?s=256&d=identicon&r=PG&f=1", "display_name": "ewr3243", "link": "https://stackoverflow.com/users/11638153/ewr3243"}, "is_answered": true, "view_count": 45, "accepted_answer_id": 68323521, "answer_count": 1, "score": 0, "last_activity_date": 1625873271, "creation_date": 1625870901, "question_id": 68323354, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/68323354/why-is-this-tensorflow-gradient-tape-returning-none", "title": "Why is this Tensorflow gradient tape returning None?", "body": "<p>I am using Tensorflow 2.0 and computing second derivative. However, tensorflow is returning <code>None</code> for <code>u_tt</code> and <code>u_xx</code>. <code>u_x</code>, <code>u_t</code> are computed properly. Variables <code>u,x,t</code> are defined before and are <code>tf.Tensor</code>s</p>\n<pre><code>import tensorflow as tf\n# defining u,x,t\nwith tf.GradientTape(persistent=True) as tp2:\n    with tf.GradientTape(persistent=True) as tp1:\n        tp1.watch(t)\n        tp1.watch(x)\n        u_x = tp1.gradient(u, x)  # shape (1000,1)\n        u_t = tp1.gradient(u, t)  # shape (1000,1)\n        u_tt = tp2.gradient(u_t, t)  # None??\n        u_xx = tp2.gradient(u_x, x)  # None??\n</code></pre>\n<p>Any idea what is wrong in the second derivative computation?</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 107}]