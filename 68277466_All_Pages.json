[{"items": [{"tags": ["python", "tensorflow", "loss-function", "tensorflow-probability"], "owner": {"account_id": 2811841, "reputation": 872, "user_id": 2417922, "user_type": "registered", "accept_rate": 0, "profile_image": "https://www.gravatar.com/avatar/5cee40c36bc502473b0976b339a8b8da?s=256&d=identicon&r=PG", "display_name": "Mark Lavin", "link": "https://stackoverflow.com/users/2417922/mark-lavin"}, "is_answered": true, "view_count": 126, "answer_count": 1, "score": 1, "last_activity_date": 1626073122, "creation_date": 1625606303, "question_id": 68277466, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/68277466/wny-is-the-loss-during-fitting-of-a-tensorflow-probabilistic-model-always-nan", "title": "Wny is the loss during fitting of a Tensorflow Probabilistic model always ```nan```", "body": "<p>I am working on a Tensorflow <em>probabilistic</em> model to recognize digits in the MNIST dataset.\nI am encountering the problem that during fitting of the model, it always reports the\nloss to be <code>nan</code>.  Here is the definition of the loss function:</p>\n<pre><code>def nll(y_true, y_pred):\n    # This function should return the negative log-likelihood of each sample\n    # in y_true given the predicted distribution y_pred.\n    result =  - y_pred.log_prob( y_true )\n    return result\n</code></pre>\n<p>Here's the code that generates and compiles the model:</p>\n<pre><code>def get_probabilistic_model(input_shape, loss, optimizer, metrics):\n    # This function should return the compiled probabilistic model\n    model = Sequential([\n        Conv2D( filters = 8, kernel_size = ( 5, 5 ), activation = &quot;relu&quot;, padding = &quot;valid&quot;, input_shape = input_shape ),\n        MaxPooling2D( pool_size = ( 6, 6 ) ),\n        Flatten(),\n        Dense( units = 10, activation = None ),\n        tfpl.DistributionLambda( lambda t:  tfd.OneHotCategorical( probs = t ) )\n    ])\n    model.compile( loss = loss, optimizer = optimizer, metrics = metrics )\n    return model\n\ntf.random.set_seed(0)\nprobabilistic_model = get_probabilistic_model(\n    input_shape=(28, 28, 1), \n    loss=nll, \n    optimizer=RMSprop(), \n    metrics=['accuracy']\n)\n</code></pre>\n<p><code>probabilistic_model.summary()</code> confirms that the model is being built and compiled\nsuccessfully.  However, when I try to fit the model, I get the following:</p>\n<pre><code>probabilistic_model.fit(x_train, y_train_oh, epochs=5)\n\nTrain on 60000 samples\nEpoch 1/5\n20544/60000 [=========&gt;....................] - ETA: 40s - loss: nan - accuracy: 0.0978\n</code></pre>\n<p>The problem is that the <code>loss</code> is <code>nan</code> (not a number), and the accuracy seems\nquite small, not surprising given that the loss is messed up.</p>\n<p>I've been trying to figure out what is wrong with either the definition of the loss\nfunction, or the construction / compilation of the model, or what.</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 110}]