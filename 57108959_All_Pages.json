[{"items": [{"tags": ["tensorflow", "gradient", "complex-numbers", "autodiff"], "owner": {"account_id": 7846906, "reputation": 2947, "user_id": 5931672, "user_type": "registered", "accept_rate": 86, "profile_image": "https://lh5.googleusercontent.com/-Ljkm-NVRzOc/AAAAAAAAAAI/AAAAAAAAAFE/EelBBzc8ji0/photo.jpg?sz=256", "display_name": "Agustin Barrachina", "link": "https://stackoverflow.com/users/5931672/agustin-barrachina"}, "is_answered": true, "view_count": 768, "accepted_answer_id": 58098418, "answer_count": 1, "score": 5, "last_activity_date": 1583229253, "creation_date": 1563526733, "last_edit_date": 1583229253, "question_id": 57108959, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/57108959/how-does-tf-gradients-manages-complex-functions", "title": "How does tf.gradients manages complex functions?", "body": "<p>I am working with complex-valued neural networks. </p>\n\n<p>For Complex-valued neural networks Wirtinger calculus is normally used. The definition of the derivate is then (take into acount that functions are non-Holomorphic because of Liouville's theorem):</p>\n\n<p><img src=\"https://chart.googleapis.com/chart?cht=tx&amp;chl=%5Cfrac%7B%5Cpartial%20f%7D%7B%5Cpartial%20z%7D%20%3D%20%5Cfrac%7B1%7D%7B2%7D%5Cleft(%20%5Cfrac%7B%5Cpartial%20f%7D%7B%5Cpartial%20x%7D%20-%20j%20%5Cfrac%7B%5Cpartial%20f%7D%7B%5Cpartial%20y%7D%20%5Cright)\" alt=\"wirtinger\"></p>\n\n<p>If you take Akira Hirose book \"Complex-Valued Neural Networks: Advances and Applications\", Chapter 4 equation 4.9 defines:</p>\n\n<p><img src=\"https://user-images.githubusercontent.com/9558385/75762586-38770800-5d3b-11ea-8a64-b32ca61fb052.png\" alt=\"Screenshot from 2020-03-03 10-38-21\"></p>\n\n<p>Where the partial derivative is also calculated using Wirtinger calculus of course.</p>\n\n<p>Is this the case for tensorflow? or is it defined in some other way? I cannot find any good reference on the topic.</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 292}]