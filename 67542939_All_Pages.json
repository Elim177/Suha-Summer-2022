[{"items": [{"tags": ["python", "numpy", "tensorflow"], "owner": {"account_id": 14601296, "reputation": 69, "user_id": 10545499, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-XN72I-S9mEc/AAAAAAAAAAI/AAAAAAAAAuc/1MlL94P3mEw/photo.jpg?sz=256", "display_name": "Louis Law", "link": "https://stackoverflow.com/users/10545499/louis-law"}, "is_answered": true, "view_count": 141, "accepted_answer_id": 67561207, "answer_count": 1, "score": 1, "last_activity_date": 1621196177, "creation_date": 1621048109, "last_edit_date": 1621055123, "question_id": 67542939, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/67542939/tensorflow-function-in-graph-mode-tf-function-is-slow-when-return-object", "title": "tensorflow function in graph mode (tf.function) is slow when return object", "body": "<p>I have a function wrapped by <code>@tf.function</code>, the function was quick when it doen't return any object. But it becomes significant slower when it return an object.</p>\n<p>Any way to boost the performance even when it has to return an object?</p>\n<p>Below is a toy example</p>\n<pre><code>from tqdm import tqdm\nimport tensorflow as tf\nimport numpy as np\n\nmodel = tf.keras.Sequential([\n    tf.keras.layers.Input((4,)),\n    tf.keras.layers.Dense(64, activation='relu'),\n    tf.keras.layers.Dense(10000)\n])\n\nmodel.compile(\n        optimizer=&quot;rmsprop&quot;,\n        loss=&quot;sparse_categorical_crossentropy&quot;,\n        metrics=[&quot;sparse_categorical_accuracy&quot;],\n)\n\nnp.random.seed(0)\nxy = tf.data.Dataset.from_tensor_slices((np.random.random((200000,4)), np.random.randint(1000, size=(200000,1)))).batch(200)\n\n@tf.function\ndef _no_return(batch):\n    x, y = batch\n    y_pred = model(x, training=False)\n    r = tf.math.top_k(y_pred, k=20).indices\n    # True indicate that item is the correct prediction\n    r = tf.cast(tf.equal(r, tf.expand_dims(tf.cast(y, tf.int32), 1)), tf.float32)\n    # rank of the correct prediction, rank = 9999999+1 if no correction prediction within topk\n    r = tf.add((tf.reduce_sum(r, 1)-1) * -9999999, tf.cast(tf.argmax(r, 1) + 1, tf.float32))\n\n@tf.function\ndef _return(batch):\n    x, y = batch\n    y_pred = model(x, training=False)\n    r = tf.math.top_k(y_pred, k=20).indices\n    # True indicate that item is the correct prediction\n    r = tf.cast(tf.equal(r, tf.expand_dims(tf.cast(y, tf.int32), 1)), tf.float32)\n    # rank of the correct prediction, rank = 9999999+1 if no correction prediction within topk\n    r = tf.add((tf.reduce_sum(r, 1)-1) * -9999999, tf.cast(tf.argmax(r, 1) + 1, tf.float32))\n    return r\n\n#\n# this run 1428.27 iterations/s \n#\nfor batch in tqdm(xy):\n    _no_return(batch)\n\n#\n# this run 135.61 iterations/s \n#\nfor batch in tqdm(xy):\n    _return(batch)\n\n</code></pre>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 143}]