[{"items": [{"tags": ["python", "tensorflow", "machine-learning", "keras", "logistic-regression"], "owner": {"user_type": "does_not_exist", "display_name": "user14543472"}, "is_answered": true, "view_count": 194, "accepted_answer_id": 64946662, "answer_count": 1, "score": 0, "last_activity_date": 1605984094, "creation_date": 1605980613, "last_edit_date": 1605984094, "question_id": 64946166, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/64946166/why-is-tf-reduce-mean-used-when-computing-the-accuracy-of-logistic-regression", "title": "Why is `tf.reduce_mean` used when computing the accuracy of logistic regression?", "body": "<p>The following function is meant to calculate accuracy of logistic regression, but what is the point of using <code>reduce_mean</code> function in this function?</p>\n<p>The code is:</p>\n<pre><code>import tensorflow as tf    \ndef accuracy(y_pred, y_true):\n        # Predicted class is the index of the highest score in prediction vector (i.e. argmax).\n    \n        correct_prediction = tf.equal(tf.argmax(y_pred, 1), tf.cast(y_true, tf.int64))\n    \n        return tf.reduce_mean(tf.cast(correct_prediction, tf.float32))\n</code></pre>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 136}]