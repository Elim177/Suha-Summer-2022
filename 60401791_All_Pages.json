[{"items": [{"tags": ["python", "tensorflow", "keras", "tensorflow2.0", "tf.keras"], "owner": {"account_id": 6086211, "reputation": 143, "user_id": 4750170, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/254b92136c99574dbc4ddb4d599edf4b?s=256&d=identicon&r=PG&f=1", "display_name": "lida", "link": "https://stackoverflow.com/users/4750170/lida"}, "is_answered": true, "view_count": 1023, "accepted_answer_id": 60401968, "answer_count": 1, "score": 0, "last_activity_date": 1582659382, "creation_date": 1582658432, "question_id": 60401791, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/60401791/input-shape-is-none-in-custom-layer", "title": "Input_shape is None in custom layer", "body": "<p>I'm building my own layer in Tensorflow 2.1 and using it in custom model. However when I'm trying to learn something, the layer is trying to build itself when called for the first time, and it needs input_shape to do it. As far as I know, it should compute it because it's getting an actual input, but it seems that input_size is None.</p>\n\n<p>My question is: what I did wrong and how to correct that?</p>\n\n<p>Below I'm attaching an example to reproduce the problem.</p>\n\n<p>My code (MinimalRNNCell is copied from tensorflow website <a href=\"https://www.tensorflow.org/api_docs/python/tf/keras/layers/RNN\" rel=\"nofollow noreferrer\">https://www.tensorflow.org/api_docs/python/tf/keras/layers/RNN</a>):</p>\n\n<pre><code>import tensorflow as tf \nfrom tensorflow.keras.layers import Layer\nfrom tensorflow.keras import Model\nimport numpy as np\n\nclass MinimalRNNCell(Layer):\n\n    def __init__(self, units, **kwargs):\n        self.units = units\n        self.state_size = units\n        super(MinimalRNNCell, self).__init__(**kwargs)\n\n    def build(self, input_shape):\n        self.kernel = self.add_weight(shape=(input_shape[-1], self.units),\n                                      initializer='uniform',\n                                      name='kernel')\n        self.recurrent_kernel = self.add_weight(\n            shape=(self.units, self.units),\n            initializer='uniform',\n            name='recurrent_kernel')\n        self.built = True\n\n    def call(self, inputs, states):\n        prev_output = states[0]\n        h = K.dot(inputs, self.kernel)\n        output = h + K.dot(prev_output, self.recurrent_kernel)\n        return output, [output]\n\n\nclass RNNXModel(Model):\n    def __init__(self, size):\n        super(RNNXModel, self).__init__()\n        self.minimalrnn=MinimalRNNCell(size)\n\n    def call(self, inputs):\n        out=self.minimalrnn(input)\n        return out\n\n\nx=np.array([[[1,2,3],[4,5,6],[7,8,9]],[[10,11,12],[13,14,15],[16,17,18]]])\ny=np.array([[1,2,3],[10,11,12]])\n\nmodel=RNNXModel(3)\nmodel.compile(optimizer='sgd', loss='mse')\nmodel.fit(x,y,epochs=10, batch_size=1)\n</code></pre>\n\n<p>Error I'm getting:</p>\n\n<pre><code>Traceback (most recent call last):\n  File \"/home/.../test.py\", line 64, in &lt;module&gt;\n    model.fit(x,y,epochs=10, batch_size=1)\n  File \"/home/.../.venv/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/training.py\", line 819, in fit\n    use_multiprocessing=use_multiprocessing)\n  File \"/home/.../.venv/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/training_v2.py\", line 235, in fit\n    use_multiprocessing=use_multiprocessing)\n  File \"/home/.../.venv/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/training_v2.py\", line 593, in _process_training_inputs\n    use_multiprocessing=use_multiprocessing)\n  File \"/home/.../.venv/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/training_v2.py\", line 646, in _process_inputs\n    x, y, sample_weight=sample_weights)\n  File \"/home/.../.venv/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/training.py\", line 2346, in _standardize_user_data\n    all_inputs, y_input, dict_inputs = self._build_model_with_inputs(x, y)\n  File \"/home/.../.venv/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/training.py\", line 2572, in _build_model_with_inputs\n    self._set_inputs(cast_inputs)\n  File \"/home/.../.venv/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/training.py\", line 2659, in _set_inputs\n    outputs = self(inputs, **kwargs)\n  File \"/home/.../.venv/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/base_layer.py\", line 773, in __call__\n    outputs = call_fn(cast_inputs, *args, **kwargs)\n  File \"/home/.../.venv/lib/python3.6/site-packages/tensorflow_core/python/autograph/impl/api.py\", line 237, in wrapper\n    raise e.ag_error_metadata.to_exception(e)\nTypeError: in converted code:\n\n    /home/.../test.py:36 call  *\n        out=self.minimalrnn(input)\n    /home/.../.venv/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/base_layer.py:818 __call__\n        self._maybe_build(inputs)\n    /home/.../.venv/lib/python3.6/site-packages/tensorflow_core/python/keras/engine/base_layer.py:2116 _maybe_build\n        self.build(input_shapes)\n    /home/.../test.py:14 build\n        self.kernel = self.add_weight(shape=(input_shape[-1], self.units),\n\n    TypeError: 'NoneType' object is not subscriptable\n</code></pre>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 60}]