[{"items": [{"tags": ["tensorflow"], "owner": {"account_id": 14193578, "reputation": 643, "user_id": 12214867, "user_type": "registered", "profile_image": "https://lh5.googleusercontent.com/-RCjV0xfzAWk/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3rdopK4Nj0yLOC-VAKly278w63sD8w/mo/photo.jpg?sz=256", "display_name": "JJJohn", "link": "https://stackoverflow.com/users/12214867/jjjohn"}, "is_answered": true, "view_count": 46, "accepted_answer_id": 68557773, "answer_count": 1, "score": 0, "last_activity_date": 1627464477, "creation_date": 1627448293, "question_id": 68554608, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/68554608/is-my-understanding-about-tensorflow-retracing-correct", "title": "Is my understanding about tensorflow retracing correct?", "body": "<p><a href=\"https://www.tensorflow.org/guide/function\" rel=\"nofollow noreferrer\">tensorflow doc</a> give this example</p>\n<pre><code>def train_one_step():\n  pass\n\n@tf.function\ndef train(num_steps):\n  print(&quot;Tracing with num_steps = &quot;, num_steps)\n  tf.print(&quot;Executing with num_steps = &quot;, num_steps)\n  for _ in tf.range(num_steps):\n    train_one_step()\n\nprint(&quot;Retracing occurs for different Python arguments.&quot;)\ntrain(num_steps=10)\ntrain(num_steps=20)\n\nprint()\nprint(&quot;Traces are reused for Tensor arguments.&quot;)\ntrain(num_steps=tf.constant(10))\ntrain(num_steps=tf.constant(20))\n</code></pre>\n<p>Here is the output</p>\n<pre><code>Retracing occurs for different Python arguments.\nTracing with num_steps =  10\nExecuting with num_steps =  10\nTracing with num_steps =  20\nExecuting with num_steps =  20\n\nTraces are reused for Tensor arguments.\nTracing with num_steps =  Tensor(&quot;num_steps:0&quot;, shape=(), dtype=int32)\nExecuting with num_steps =  10\nExecuting with num_steps =  20\n</code></pre>\n<p>I guess I understand the first part where <code>train(num_steps)</code> is defined as a <code>Function</code> object. <code>train(num_steps=10)</code> and <code>train(num_steps=20)</code> use different Python values and result in retracing.</p>\n<p>In the second part, <code>train(num_steps=tf.constant(10))</code> and <code>train(num_steps=tf.constant(20))</code> cause reusing Traces where <code>print(&quot;Tracing with num_steps = &quot;, num_steps)</code> runs normally while the parameter part <code>num_steps=tf.constant(10)</code> is captured by the tf.Graph and does not run in the tracing stage.</p>\n<p>Is my understanding correct?</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 94}]