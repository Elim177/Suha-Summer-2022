[{"items": [{"tags": ["tensorflow", "tensorflow2.0"], "owner": {"account_id": 2111877, "reputation": 1829, "user_id": 1877002, "user_type": "registered", "accept_rate": 73, "profile_image": "https://www.gravatar.com/avatar/8a1c3de36e3fb239c77f4439d1866894?s=256&d=identicon&r=PG", "display_name": "Benny K", "link": "https://stackoverflow.com/users/1877002/benny-k"}, "is_answered": false, "view_count": 580, "answer_count": 1, "score": 0, "last_activity_date": 1606678674, "creation_date": 1606641647, "question_id": 65058600, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/65058600/compute-second-derivative-with-gradienttape-tensorflow", "title": "Compute second derivative with GradientTape TensorFlow", "body": "<p>I am trying to compute the second derivative of a function (3*x^2+y^2) with respect to two variables ordered as two column matrix, for some reason the first derivative is OK but the second is all wrong</p>\n<pre><code>import tensorflow as tf\nimport numpy as np\nx = np.array([[-6.0,1.0,2.0,4.0,]])\ny = np.array([[-3.0,8.0,9.0,12.0,]])\nxy = tf.convert_to_tensor(np.concatenate([x.T,y.T],axis=1))\nwith tf.GradientTape() as tape2:\n    tape2.watch(xy)\n    with tf.GradientTape() as tape:\n        tape.watch(xy)\n        f = 3 * xy[:, 0] ** 2 * xy[:, 1] + xy[:, 1] ** 2\n    df = tape.gradient(f, xy)\nd2f = tape2.gradient(df, xy)\n</code></pre>\n<p>am getting that <code>d2f</code>  is:</p>\n<pre><code>&lt;tf.Tensor: shape=(4, 2), dtype=float64, numpy=\narray([[-54., -34.],\n       [ 54.,   8.],\n       [ 66.,  14.],\n       [ 96.,  26.]])&gt;\n</code></pre>\n<p>which is obviously  wrong since the second derivative with respect to y is constant 2.</p>\n<p>What am I doing wrong here?</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 129}]