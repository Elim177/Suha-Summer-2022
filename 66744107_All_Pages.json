[{"items": [{"tags": ["tensorflow", "keras"], "owner": {"account_id": 1637432, "reputation": 1718, "user_id": 1510542, "user_type": "registered", "accept_rate": 67, "profile_image": "https://i.stack.imgur.com/zysaA.jpg?s=256&g=1", "display_name": "MPA", "link": "https://stackoverflow.com/users/1510542/mpa"}, "is_answered": false, "view_count": 405, "answer_count": 1, "score": 0, "last_activity_date": 1616574059, "creation_date": 1616408283, "question_id": 66744107, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/66744107/keras-get-weights-and-set-weights-during-training-cannot-get-value-inside-tens", "title": "Keras get_weights and set_weights during training: &quot;Cannot get value inside Tensorflow graph function&quot;", "body": "<p>Using Tensorflow2/Keras I want to modify the weights of a model component during training, according to some update rule. For this I used <code>get_weights()</code> and <code>set_weights()</code> method. I've tried to implement this as follows:</p>\n<pre><code>class CAD_model(keras.Model):\n    \n    def __init__(self, online_encoder, target_encoder, predictor, **kwargs):\n        super(CAD_model, self).__init__(**kwargs)\n        self.online_encoder = online_encoder\n        self.target_encoder = target_encoder\n        self.predictor = predictor\n        \n    def call(self, x):\n        z = self.target_encoder(x)\n        return z\n    \n    def compile(self, optimizer):\n        super(CAD_model, self).compile()\n        self.opt = optimizer\n    \n    def compute_loss(self, x1, x2):\n        \n        online_encoder = self.online_encoder\n        target_encoder = self.target_encoder\n        \n        y = online_encoder(x1)\n        z1 = self.predictor(y)\n        # Stop gradient\n        z2 = tf.stop_gradient(target_encoder(x2))        \n        loss = tf.reduce_mean((z1 - z2)**2)\n        return loss\n    \n    def update_ema(self, decay=0.999):\n        online_vars = self.online_encoder.get_weights()\n        target_vars = self.target_encoder.get_weights()\n        ema_vars = [decay * var1 + (1 - decay) * var2 for var1, var2 in zip(target_vars, online_vars)]\n        self.target_encoder.set_weights(ema_vars)\n\n    def train_step(self, data):\n        \n        x1, x2 = data\n            \n        with tf.GradientTape() as tape:\n            loss = self.compute_loss(x1, x2)        \n        \n        grads = tape.gradient(loss, self.trainable_weights)\n        self.opt.apply_gradients(zip(grads, self.trainable_weights))\n        \n        self.update_ema()\n        \n        return {\n            &quot;loss&quot;: loss,\n        }\n</code></pre>\n<p>When running <code>CAD_model.fit</code> I get:</p>\n<pre><code>RuntimeError: Cannot get value inside Tensorflow graph function.\n</code></pre>\n<p>Which pertains to the <code>get_weights</code> and <code>set_weights</code> operations. How can properly extract and assign weights such that the operation is performed within the graph?</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 180}]