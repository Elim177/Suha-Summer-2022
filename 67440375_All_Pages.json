[{"items": [{"tags": ["python", "tensorflow", "multiprocessing"], "owner": {"account_id": 12711637, "reputation": 493, "user_id": 9235106, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/23bca8cc0465ec0ee449ce605c48b702?s=256&d=identicon&r=PG&f=1", "display_name": "Jiawei Lu", "link": "https://stackoverflow.com/users/9235106/jiawei-lu"}, "is_answered": true, "view_count": 1120, "answer_count": 1, "score": 3, "last_activity_date": 1623087996, "creation_date": 1620413958, "question_id": 67440375, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/67440375/cannot-pickle-weakref-object-when-using-tensorflow-with-multiprocessing", "title": "Cannot pickle &#39;weakref&#39; object when using Tensorflow with Multiprocessing", "body": "<p>I would like to train several neural networks at the same time, and I'm trying to use the <code>multiprocessing</code> module so that each network can be trained in a separate process, but I met an issue. When I ran the demo code below (as <code>apply_async</code> function does not give a hint on errors, I temporarily changed it to <code>apply</code> function):</p>\n<pre><code>import tensorflow as tf\nimport multiprocessing as mp\n\n\nclass SeqModel(tf.keras.Sequential):\n    def __init__(self, input_size, hidden_sizes, output_size):\n        super().__init__()\n        self.add(tf.keras.layers.Dense(hidden_sizes[0], activation=&quot;relu&quot;, input_shape=(input_size,)))\n        for hidden_size in hidden_sizes[1:]: self.add(tf.keras.layers.Dense(hidden_size, activation=&quot;relu&quot;))\n        if output_size is not None: self.add(tf.keras.layers.Dense(output_size))\n\n\nclass Partition:\n    def __init__(self, partition_id):\n        self.partition_id = partition_id\n        self.model = None\n\n    def initialization(self):\n        self.model = SeqModel(10,[10,10],10)\n\n    def test(self):\n        print(f'partition {self.partition_id} testing...')\n\n\ndef func():\n    partition_list = [Partition(i) for i in range(4)]\n\n    for partition in partition_list: partition.initialization()\n\n    p = mp.Pool(4)\n    for partition in partition_list:\n        p.apply(partition.test)\n    p.close()\n    p.join()\n\n\nif __name__ == '__main__':\n    func()\n</code></pre>\n<p>I got the following error:</p>\n<pre><code>Traceback (most recent call last):\n  File &quot;C:/Users/Administrator/Dropbox (ASU)/Work/Traffic State Estimation/traffic state estimation/dataset/mp/mp_net.py&quot;, line 43, in &lt;module&gt;\n    func()\n  File &quot;C:/Users/Administrator/Dropbox (ASU)/Work/Traffic State Estimation/traffic state estimation/dataset/mp/mp_net.py&quot;, line 37, in func\n    p.apply(partition.test)\n  File &quot;C:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python38\\lib\\multiprocessing\\pool.py&quot;, line 357, in apply\n    return self.apply_async(func, args, kwds).get()\n  File &quot;C:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python38\\lib\\multiprocessing\\pool.py&quot;, line 771, in get\n    raise self._value\n  File &quot;C:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python38\\lib\\multiprocessing\\pool.py&quot;, line 537, in _handle_tasks\n    put(task)\n  File &quot;C:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python38\\lib\\multiprocessing\\connection.py&quot;, line 206, in send\n    self._send_bytes(_ForkingPickler.dumps(obj))\n  File &quot;C:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python38\\lib\\multiprocessing\\reduction.py&quot;, line 51, in dumps\n    cls(buf, protocol).dump(obj)\nTypeError: cannot pickle 'weakref' object\n</code></pre>\n<p>If I do not do partition initialization (no SeqModel involved in Partition instances), the code runs without problem. Does that mean I cannot use tf Models in child processes?</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 222}]