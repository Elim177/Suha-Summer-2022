[{"items": [{"tags": ["python", "tensorflow"], "owner": {"account_id": 438612, "reputation": 22264, "user_id": 826983, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/B9PSD.jpg?s=256&g=1", "display_name": "Stefan Falk", "link": "https://stackoverflow.com/users/826983/stefan-falk"}, "is_answered": false, "view_count": 261, "answer_count": 0, "score": 0, "last_activity_date": 1574152039, "creation_date": 1574096278, "last_edit_date": 1574152039, "question_id": 58919516, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/58919516/how-to-apply-a-function-along-an-axis-which-can-modify-the-length-of-samples", "title": "How to apply a function along an axis which can modify the length of samples?", "body": "<p>I have a batch of variable-length sequences and three channels. So <code>x</code> has the shape <code>(None, None, 3)</code> or <code>[batch_size, sample_length, channel]</code> with <code>batch_size</code> and <code>sample_length</code> being dynamic dimensions.</p>\n\n<p>In one of my steps I want to apply a function <code>f</code> to <em>each</em> of the samples in <code>x</code>. The problem with <code>f</code>: The <code>sample_length</code> can change. </p>\n\n<p>As I tried to run:</p>\n\n<pre><code>new_x = tf.map_fn(lambda sample: f(sample), x)\n</code></pre>\n\n<p>I got this error:</p>\n\n<pre class=\"lang-none prettyprint-override\"><code>Could not write to TensorArray index 2 because the value shape is \n[10,257] which is incompatible with the TensorArray's inferred \nelement shape: [11,257] (consider setting infer_shape=False).\n</code></pre>\n\n<p>which makes sense since, as stated, <code>f</code> may modify <code>sample_length</code>.</p>\n\n<p>The question here is how could I make something like this work? Since each sample has a variable length to begin with, I am sure this must somehow be possible but I don't know how I could achieve that.</p>\n\n<p>Any ideas?</p>\n\n<hr>\n\n<h3>Environment</h3>\n\n<pre><code>$ pip freeze | grep tensorflow-gpu\ntensorflow-gpu==1.12.0\n</code></pre>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 254}]