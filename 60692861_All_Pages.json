[{"items": [{"tags": ["tensorflow", "keras"], "owner": {"account_id": 16376867, "reputation": 111, "user_id": 11828768, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/cca3144900fb22777484b9469184a999?s=256&d=identicon&r=PG&f=1", "display_name": "ABCMOONMAN999", "link": "https://stackoverflow.com/users/11828768/abcmoonman999"}, "is_answered": false, "view_count": 416, "answer_count": 0, "score": 2, "last_activity_date": 1584275495, "creation_date": 1584275207, "last_edit_date": 1584275495, "question_id": 60692861, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/60692861/how-can-i-get-trainable-variables-from-model-subclassing-the-tf-keras-model", "title": "How can I get trainable_variables from model subclassing the tf.keras.Model?", "body": "<p>I want to get <code>trainable_variables</code> from model which is created by subclassing <code>tf.keras.Model</code>, but it return <code>[]</code>.I know it works when using <code>tf.keras.Sequential</code>.</p>\n\n<pre><code>class MyModel(tf.keras.Model):\n\n    def __init__(self):\n        super(MyModel, self).__init__()\n        self.dense1 = tf.keras.layers.Dense(4, activation=tf.nn.relu)\n        self.dense2 = tf.keras.layers.Dense(5, activation=tf.nn.softmax)\n        self.des = tf.constant([[1.,2.]])\n\n    def call(self, inputs):\n        x = self.dense1(inputs)\n        # y = self.des\n        return self.dense2(x)\n\nmodel = MyModel()\nprint(model.trainable_variables)  #=&gt;[]\n</code></pre>\n\n<p>I tried feedding some values to the model but it still returns <code>[]</code>. </p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 2}]