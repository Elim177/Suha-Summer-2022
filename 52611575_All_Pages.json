[{"items": [{"tags": ["python", "tensorflow"], "owner": {"account_id": 13658258, "reputation": 179, "user_id": 9854132, "user_type": "registered", "profile_image": "https://graph.facebook.com/10209322581445667/picture?type=large", "display_name": "Theodosis Siomos", "link": "https://stackoverflow.com/users/9854132/theodosis-siomos"}, "is_answered": false, "view_count": 528, "answer_count": 2, "score": 1, "last_activity_date": 1592479023, "creation_date": 1538494057, "question_id": 52611575, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/52611575/tf-while-loop-gives-wrong-result-when-it-runs-in-parallel", "title": "tf.while_loop gives wrong result when it runs in parallel", "body": "<p>I want to update a two dimensional <code>tf.variable</code> inside a <code>tf.while_loop</code> in tensorflow by row. For this reason, I use the <code>tf.assign</code> method. The problem is that with my implementation and <code>parallel_iterations&gt;1</code> the result is wrong. With <code>parallel_iterations=1</code> the result is correct. The code is like this:</p>\n\n<pre><code>a = tf.Variable(tf.zeros([100, 100]), dtype=tf.int64)\n\ni = tf.constant(0)\ndef condition(i, var):\n    return tf.less(i, 100)\n\ndef body(i, var):\n    updated_row = method() # This method returns a [1, 100] tensor which is the updated row for the variable\n    temp = tf.assign(a[i], updated_row)\n    return [tf.add(i, 1), temp]\n\nz = tf.while_loop(condition, body, [i, a], back_prop=False, parallel_iterations=10)\n</code></pre>\n\n<p>The iterations are completely independent and I do not know what is the problem.</p>\n\n<p>Strangely If I change the code like this:</p>\n\n<pre><code>a = tf.Variable(tf.zeros([100, 100]), dtype=tf.int64)\n\ni = tf.constant(0)\ndef condition(i, var):\n    return tf.less(i, 100)\n\ndef body(i, var):\n    zeros = lambda: tf.zeros([100, 100], dtype=tf.int64)\n    temp = tf.Variable(initial_value=zeros, dtype=tf.int64)\n    updated_row = method() # This method returns a [1, 100] tensor which is the updated row for the variable\n    temp = tf.assign(temp[i], updated_row)\n    return [tf.add(i, 1), temp]\n\nz = tf.while_loop(condition, body, [i, a], back_prop=False, parallel_iterations=10)\n</code></pre>\n\n<p>the code gives the correct outcome for <code>parallel_iterations&gt;1</code>. Can someone explain me what is going on here and give me an efficient solution to update the variable because the original variable I want to update is huge and the solution I found is very inefficient.</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 277}]