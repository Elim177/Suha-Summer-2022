[{"items": [{"tags": ["python", "tensorflow"], "owner": {"account_id": 7846906, "reputation": 2937, "user_id": 5931672, "user_type": "registered", "accept_rate": 86, "profile_image": "https://lh5.googleusercontent.com/-Ljkm-NVRzOc/AAAAAAAAAAI/AAAAAAAAAFE/EelBBzc8ji0/photo.jpg?sz=256", "display_name": "Agustin Barrachina", "link": "https://stackoverflow.com/users/5931672/agustin-barrachina"}, "is_answered": false, "view_count": 182, "answer_count": 1, "score": 0, "last_activity_date": 1570375237, "creation_date": 1570357527, "question_id": 58256352, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/58256352/tensorflow-how-to-assign-a-name-to-a-list-of-tensors", "title": "Tensorflow: How to assign a name to a list of tensors?", "body": "<p>So I am doing the following code using TF 2 (but working with TF 1 actually):</p>\n\n<pre><code>self.gradients_w, self.gradients_b = tf.gradients(ys=self.loss, xs=[self.w, self.b])\nself.training_op_w = tf.compat.v1.assign(self.w, self.w - self.learning_rate * self.gradients_w)\nself.training_op_b = tf.compat.v1.assign(self.b, self.b - self.learning_rate * self.gradients_b)\nself.training_op = tf.stack([self.training_op_w, self.training_op_b], axis=0, name=\"training_op\")\n</code></pre>\n\n<p>Basically I will like to have this <code>training_op</code> as a list of all the assignments so then by only doing <code>self.sess.run(self.training_op, feed_dict=feed_dict_batch)</code> I train my whole network as once. When I have multiple layers I will then create a longer list and the training part of the code will remain untouched. </p>\n\n<p>This works so far, the problem comes when I try to restore the networks metadata. Because the list is not saved as a single tensorflow name so I have to get each one of them then loosing the generality/flexibility I want. So my question is: </p>\n\n<p><strong>How to assign a name to a list of tensors?</strong></p>\n\n<p>I tried some things like <a href=\"https://www.tensorflow.org/api_docs/python/tf/stack\" rel=\"nofollow noreferrer\">tf.stack()</a> or <a href=\"https://www.tensorflow.org/api_docs/python/tf/convert_to_tensor\" rel=\"nofollow noreferrer\">tf.convert_to_tensor()</a> but I have error messages telling me the sizes don't match (which they won't). Example:</p>\n\n<pre><code>ValueError: Shapes must be equal rank, but are 2 and 1\n    From merging shape 0 with other shapes. for 'leargning_rule/training_op' (op: 'Pack') with input shapes: [30,1], [1].\n</code></pre>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 97}]