[{"items": [{"tags": ["python", "tensorflow"], "owner": {"account_id": 438612, "reputation": 22264, "user_id": 826983, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/B9PSD.jpg?s=256&g=1", "display_name": "Stefan Falk", "link": "https://stackoverflow.com/users/826983/stefan-falk"}, "is_answered": false, "view_count": 373, "answer_count": 0, "score": 2, "last_activity_date": 1540222264, "creation_date": 1540217575, "last_edit_date": 1540222264, "question_id": 52931446, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/52931446/how-to-add-dynamic-dimension-to-tensor-in-tensorflow", "title": "How to add dynamic dimension to tensor in tensorflow?", "body": "<p>I am having a <code>input_node</code> with shape <code>(None, 80, 3)</code> meaning <code>(sample_length, resolution, channel)</code>. However, this tensor is missing a fourth dimension for the batches. Is there a way to reshape <code>input_node</code> to <code>(None, None, 80, 3)</code>?</p>\n\n<hr>\n\n<p>Using <code>tf.expand_dims</code> I won't be able to work with batches:</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>wave_input = tf.placeholder(dtype=tf.float32, shape=[None], name='wave_input')\nencoded_dict = problem.preprocess_example({'waveforms': wave_input, 'targets': [0]}, mode, hparams)\n\n# This is where a dynamic shape would be required\nencoded_dict['inputs'] = tf.expand_dims(encoded_dict['inputs'], 0)\nencoded_dict['targets'] = tf.expand_dims(encoded_dict['targets'], 0)\n\n# Get input/output nodes\n\ninferred = model.infer(encoded_dict)\n\ntf.identity(encoded_dict['inputs'], name=input_name)\ntf.identity(inferred['outputs'], name=output_name)\n</code></pre>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 277}]