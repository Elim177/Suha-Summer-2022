[{"items": [{"tags": ["python", "deep-learning", "computer-vision", "artificial-intelligence", "tensorflow2.0"], "owner": {"account_id": 20465057, "reputation": 21, "user_id": 15016764, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/Up7SH.jpg?s=256&g=1", "display_name": "devanshu singh", "link": "https://stackoverflow.com/users/15016764/devanshu-singh"}, "is_answered": false, "view_count": 1025, "answer_count": 1, "score": 0, "last_activity_date": 1619439794, "creation_date": 1619429930, "last_edit_date": 1619433416, "question_id": 67264231, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/67264231/tensorflow-logits-and-labels-must-have-the-same-first-dimension-got-logits-sha", "title": "TensorFlow: logits and labels must have the same first dimension, got logits shape [120,4] and labels shape [480]", "body": "<p>I created an object detection model with hand written digits images, my model has two output layers first is to classification between digits, and second one is to detect/localize the bounding box coordinates of digit.</p>\n<p>Output = [Output1, Output2]</p>\n<p>Output1 = [0, 1, 2, 3, 4, 5, 6, 7, 8 ,9] (Dense layer with 10 unit)</p>\n<p>Output2 = [x, y, w, h] (Dense layer with 4 units for bounding box coordinates)</p>\n<p>I am facing am error regarding logits and label shape, I am not getting why this error is occurring, help me out.</p>\n<p><a href=\"https://i.stack.imgur.com/byQez.png\" rel=\"nofollow noreferrer\">This is the SS of csv file labels</a></p>\n<p><a href=\"https://i.stack.imgur.com/SVrM7.png\" rel=\"nofollow noreferrer\">Training image look like</a></p>\n<pre><code>import os\nos.environ['TF_CPP_MIN_LOG_LEVEL'] = '2'\nimport tensorflow as tf\nimport pandas as pd\n\ndata = pd.read_csv('train_label.csv')\n\nimage = data.iloc[:,0].values\nlabel = data.iloc[:,1:].values\n\ntrain = tf.data.Dataset.from_tensor_slices((image, label))\n\ndef collector(images_file, label):\n    image = tf.io.read_file('train\\\\'+images_file)\n    image = tf.image.decode_image(image, channels=1, dtype=tf.float32)\n\n    labels = {'label': label[0], 'coordinates': label[1:]}\n    return image, labels\n\ntrain = train.map(collector).batch(120)\n\ninput = tf.keras.Input(shape=(75, 75, 1))\nx = tf.keras.layers.Conv2D(32, kernel_size=3, activation='relu')(input)\nx = tf.keras.layers.MaxPooling2D((3,3), strides=(1,1), padding='same')(x)\nx = tf.keras.layers.BatchNormalization()(x)\nx = tf.keras.layers.Conv2D(64, kernel_size=3, activation='relu')(x)\nx = tf.keras.layers.MaxPooling2D((3,3), strides=(1,1), padding='same')(x)\nx = tf.keras.layers.BatchNormalization()(x)\nx = tf.keras.layers.Conv2D(128, kernel_size=3, activation='relu')(x)\nx = tf.keras.layers.MaxPooling2D((3,3), strides=(1,1), padding='same')(x)\nx = tf.keras.layers.BatchNormalization()(x)\nx = tf.keras.layers.Flatten()(x)\nx = tf.keras.layers.Dense(128, activation='relu')(x)\noutput1 = tf.keras.layers.Dense(10, activation='softmax', name=&quot;label&quot;)(x)\noutput2 = tf.keras.layers.Dense(4, name=&quot;coordinates&quot;)(x)\n\nmodel = tf.keras.Model(inputs=input, outputs=[output1, output2])\n\nmodel.compile(loss=tf.keras.losses.SparseCategoricalCrossentropy(from_logits=False),\n              optimizer='adam', metrics=['accuracy'])\n\nmodel.fit(train, batch_size=120, epochs=5, verbose=1)\n</code></pre>\n<pre><code>Epoch 1/5\nTraceback (most recent call last):\n  File &quot;D:/obj_detection_and_classification/train_model.py&quot;, line 42, in &lt;module&gt;\n    model.fit(train, batch_size=120, epochs=5, verbose=1)\n  File &quot;C:\\Users\\Devanshu\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\training.py&quot;, line 1100, in fit\n    tmp_logs = self.train_function(iterator)\n  File &quot;C:\\Users\\Devanshu\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\tensorflow\\python\\eager\\def_function.py&quot;, line 828, in __call__\n    result = self._call(*args, **kwds)\n  File &quot;C:\\Users\\Devanshu\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\tensorflow\\python\\eager\\def_function.py&quot;, line 888, in _call\n    return self._stateless_fn(*args, **kwds)\n  File &quot;C:\\Users\\Devanshu\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\tensorflow\\python\\eager\\function.py&quot;, line 2942, in __call__\n    return graph_function._call_flat(\n  File &quot;C:\\Users\\Devanshu\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\tensorflow\\python\\eager\\function.py&quot;, line 1918, in _call_flat\n    return self._build_call_outputs(self._inference_function.call(\n  File &quot;C:\\Users\\Devanshu\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\tensorflow\\python\\eager\\function.py&quot;, line 555, in call\n    outputs = execute.execute(\n  File &quot;C:\\Users\\Devanshu\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\tensorflow\\python\\eager\\execute.py&quot;, line 59, in quick_execute\n    tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,\ntensorflow.python.framework.errors_impl.InvalidArgumentError:  logits and labels must have the same first dimension, got logits shape [120,4] and labels shape [480]\n     [[node sparse_categorical_crossentropy_1/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits (defined at D:/obj_detection_and_classification/train_model.py:42) ]] [Op:__inference_train_function_1524]\n\nFunction call stack:\ntrain_function\n\n</code></pre>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 157}]