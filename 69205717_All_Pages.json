[{"items": [{"tags": ["python", "tensorflow"], "owner": {"account_id": 15813630, "reputation": 1, "user_id": 11409982, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/0a14cf61ce762cec1877dede071b5095?s=256&d=identicon&r=PG&f=1", "display_name": "mohuazheliu", "link": "https://stackoverflow.com/users/11409982/mohuazheliu"}, "is_answered": false, "view_count": 78, "answer_count": 0, "score": 0, "last_activity_date": 1631784026, "creation_date": 1631784026, "question_id": 69205717, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/69205717/errortried-to-append-a-tensor-with-incompatible-shape-to-a-list", "title": "Error:Tried to append a tensor with incompatible shape to a list", "body": "<p>tensorflow-gpu==2.4.1\npython==3.6.0\nI try train a seq2seq model\nThe releated code:</p>\n<pre><code> def train_step(self, data): \n        x,y=data\n        x=self.EngEncoder(x)\n        y=self.ChineseEncoder(y)\n        length=tf.shape(y)[1]-1\n        with tf.GradientTape() as tape:\n            encoder_seq,encoder_state_m,encoder_state_c=self.Encoder(x)\n            decoder_state_m = encoder_state_m\n            decoder_state_c = encoder_state_c\n            loss=tf.constant(0.0)\n            loop_var=(0,encoder_seq,decoder_state_m,decoder_state_c,loss)\n            @tf.function\n            def loop(i,encoder_seq,decoder_state_m,decoder_state_c,_loss):\n                output,decoder_state_m,decoder_state_c=self.Decoder([y[:,i],decoder_state_m,decoder_state_c,encoder_seq])\n                target=y[:,i+1]\n                i+=1\n                _loss+=self.loss(target,output)\n                return (i,encoder_seq,decoder_state_m,decoder_state_c,_loss)\n            loop_var=tf.while_loop(lambda x,_,__,___,____:x&lt;length-1,loop,loop_var,parallel_iterations=1,name=&quot;loop_while&quot;)\n            loss=loop_var[-1]/tf.cast(length,dtype=tf.float32)\n        grads=tape.gradient(loss,self.trainable_variables)\n        self.optimizer.apply_gradients(zip(grads,self.trainable_variables))\n        return {'batch_loss' : loss}\n</code></pre>\n<p>but it throw a error:</p>\n<pre><code>(0) Invalid argument:  Tried to append a tensor with incompatible shape to a list. Op element shape: [32,7,128] list shape: [?,1,128]\n         [[{{node loop_while/body/_1/loop_while/TensorListPushBack_22}}]]\n         [[loop_while/LoopCond/_142/_228]]\n  (1) Invalid argument:  Tried to append a tensor with incompatible shape to a list. Op element shape: [32,7,128] list shape: [?,1,128]\n         [[{{node loop_while/body/_1/loop_while/TensorListPushBack_22}}]]\n</code></pre>\n<p>I have located the point :</p>\n<pre><code>output,decoder_state_m,decoder_state_c=self.Decoder([y[:,i],decoder_state_m,decoder_state_c,encoder_seq])\n</code></pre>\n<p>The shape of <code>encoder_seq</code> is [32,7,128] and <code>decoder_state_c</code> is  [?,1,128]. <br/>\nSo I think it is because tf try to append <code>encoder_seq</code> to a list.\nbut I have tested that Running <code>self.Decoder()</code> in <code>train_step()</code> not in <code>tf.while_loop()</code>, it work well.<br/>\nWhat happened in tf.while_loop()?Why will it append something to a list?</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 31}]