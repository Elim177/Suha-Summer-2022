[{"items": [{"tags": ["python", "tensorflow", "keras", "tensorflow2.0"], "owner": {"account_id": 7277007, "reputation": 16990, "user_id": 10133797, "user_type": "registered", "profile_image": "https://i.stack.imgur.com/ElNKG.png?s=256&g=1", "display_name": "OverLordGoldDragon", "link": "https://stackoverflow.com/users/10133797/overlordgolddragon"}, "is_answered": true, "view_count": 19158, "accepted_answer_id": 58257711, "answer_count": 4, "score": 8, "last_activity_date": 1629278984, "creation_date": 1570322529, "last_edit_date": 1570416162, "question_id": 58253408, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/58253408/how-to-get-value-of-a-keras-tensor-in-tensorflow-2", "title": "How to get value of a Keras tensor in TensorFlow 2?", "body": "<p>TF1 had <code>sess.run()</code> and <code>.eval()</code> to get values of tensors - and Keras had <code>K.get_value()</code>; now, neither work the same (former two at all).</p>\n\n<p><code>K.eager(K.get_value)(tensor)</code> appears to work inside Keras graph by exiting it, and <code>K.get_value(tensor)</code> outside the graph - both w/ TF2's default eagerly (which is <em>off</em> in former). However, this fails if <code>tensor</code> is a <em>Keras backend operation</em>:</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>import keras.backend as K\ndef tensor_info(x):\n    print(x)\n    print(\"Type: %s\" % type(x))\n    try:        \n        x_value = K.get_value(x)\n    except:\n        try:    x_value = K.eager(K.get_value)(x)\n        except: x_value = x.numpy()\n    print(\"Value: %s\" % x_value)  # three methods\n\nones = K.ones(1)\nones_sqrt = K.sqrt(ones)\n\ntensor_info(ones); print()\ntensor_info(ones_sqrt)\n</code></pre>\n\n<pre class=\"lang-py prettyprint-override\"><code>&lt;tf.Variable 'Variable:0' shape=(1,) dtype=float32, numpy=array([1.], dtype=float32)&gt;\nType: &lt;class 'tensorflow.python.ops.resource_variable_ops.ResourceVariable'&gt;\nValue: [1.]\n\nTensor(\"Sqrt:0\", shape=(1,), dtype=float32)\nType: &lt;class 'tensorflow.python.framework.ops.Tensor'&gt;\n# third print fails w/ below\n</code></pre>\n\n<pre class=\"lang-py prettyprint-override\"><code>AttributeError: 'Tensor' object has no attribute 'numpy' \n</code></pre>\n\n<p><hr> \nThis is a non-issue in TF &lt; 2.0. <a href=\"https://github.com/keras-team/keras/issues/13396\" rel=\"noreferrer\">Github</a>'s been silent. I'm aware of ways to rewrite the code as a workaround, but it'll eliminate Keras' backend-neutrality and work akin to <code>tf.keras</code>. Is there a way to get Keras 2.3 tensor values in TensorFlow 2.0 while retaining backend-neutrality? </p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 33}]