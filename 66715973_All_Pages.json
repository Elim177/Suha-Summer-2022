[{"items": [{"tags": ["python", "tensorflow", "keras", "pytorch", "tf.keras"], "owner": {"account_id": 16777256, "reputation": 361, "user_id": 12128237, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/f56364f29ee711028529370db5673fd4?s=256&d=identicon&r=PG&f=1", "display_name": "dexter2406", "link": "https://stackoverflow.com/users/12128237/dexter2406"}, "is_answered": false, "view_count": 693, "answer_count": 1, "score": 0, "last_activity_date": 1656756771, "creation_date": 1616190354, "question_id": 66715973, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/66715973/how-to-load-weights-from-pytorch-to-keras-layer-by-layer", "title": "How to load weights from Pytorch to Keras layer by layer?", "body": "<p>I have tried tons of methods like <code>onnx2keras</code>, <code>pytorch2keras</code> and so on. But there would always be something wrong...</p>\n<p>Since my model is not really complicated: just a <strong>ResNet18-encoder + Decoder</strong> with some <em>skip-connections</em>. I'm considering to simply transfer them one layer by another, from pytorch to Keras.</p>\n<p>Before I try I'd like to ask if you have similar experience? I know there's <code>set_weights</code> method, but that's for <em>keras-to-keras</em> so nothing special. However, Keras is <strong>object-based</strong> model, so how can I assign name-based weights, e.g. <code>'encoder.bn1.bias', 'encoder.bn1.running_mean', 'encoder.bn1.running_var'</code> to a BN? I don't want <code>TF1.x</code> solutions because all of my work is on TF2.x.</p>\n<p>So In my opinion, it would be something like:</p>\n<pre><code># 1. Save weights and names from pytorch model\nweights_dict = torch_mode.static_dict() \n\n# 2. Construct Keras model\nkeras_model = tf.keras.models.Model(...)\n\n# 3. Now load weights for each layer in Keras model\nfor var_name, weight in weights_dict.items():\n    # Assign conv with weight with'encoder.conv1.weight'\n    # Assign BN with 'encoder.bn1.weight', 'encoder.bn1.bias', 'encoder.bn1.running_mean', 'encoder.bn1.running_var', 'encoder.bn1.num_batches_tracked'\n\n</code></pre>\n<p>But I don't know how... Look forward to your opinions!</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 181}]