[{"items": [{"tags": ["python-3.x", "tensorflow", "tensorflow2.0", "mean-square-error"], "owner": {"account_id": 17536104, "reputation": 23, "user_id": 12719202, "user_type": "registered", "profile_image": "https://lh4.googleusercontent.com/-EfEL8tgNDLo/AAAAAAAAAAI/AAAAAAAAAAA/ACHi3reU24NbRIWKJdYCgD_aOZYX41F4CQ/photo.jpg?sz=256", "display_name": "Octave Noisette", "link": "https://stackoverflow.com/users/12719202/octave-noisette"}, "is_answered": true, "view_count": 1809, "accepted_answer_id": 59792360, "answer_count": 1, "score": 2, "last_activity_date": 1579282687, "creation_date": 1579275599, "last_edit_date": 1579277586, "question_id": 59790485, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/59790485/mse-loss-in-tensorflow-2-0-mistakes-y-true-for-a-reduction-key", "title": "MSE loss in tensorflow 2.0 mistakes y_true for a reduction key", "body": "<p>I am using a really simple neural network with the latest version of tensorflow 2.0, on a jupyter notebook running python 3.7.0.\nThe NN has Xip, a float as output, which I use as a parameter in my function MainGaussian_1_U, which approximates an image. When I try to compute the loss using MeanSquareError between the real image img and the approximation mk, I am given an error in which the loss function seems to take img as a reduction key. After searches, I still have no idea what this key is supposed to be, and can't find a way to debug my code:</p>\n\n<pre><code>model = tf.keras.models.Sequential()\n\n# Add the layers\nmodel.add(tf.keras.layers.Dense(64, activation=\"relu\"))\nmodel.add(tf.keras.layers.Dense(32, activation=\"relu\"))\nmodel.add(tf.keras.layers.Dense(1, activation=\"relu\"))\n\n# The loss method\nloss_object = tf.keras.losses.MeanSquaredError()\n# The optimize\noptimizer = tf.keras.optimizers.Adam()\n# This metrics is used to track the progress of the training loss during the training\ntrain_loss = tf.keras.metrics.Mean(name='train_loss')\n\ndef train_step(Data, img):\n    MainGaussian_init(Data)\n    for _ in range (5):\n        with tf.GradientTape() as tape:\n            Xip= model( (sizeh**-2 * np.ones((sizeh, sizeh))).reshape(-1, 49))\n            MainGaussian_1_U ()\n            print (\"img=\", img)\n            loss= tf.keras.losses.MeanSquaredError(img, mk)\n            print (\"loss=\", loss)\n        gradients = tape.gradient(loss, model.trainable_variables)\n        print (gradients)\n        optimizer.apply_gradients(zip(gradients, model.trainable_variables))\n        train_loss(loss)\n\ntrain_step (TestFile, TestFile[4])\n</code></pre>\n\n<p>The error given is:</p>\n\n<pre><code>c:\\program files\\python37\\lib\\site-packages\\tensorflow_core\\python\\ops\\losses\\loss_reduction.py:67: FutureWarning: elementwise comparison failed; returning scalar instead, but in the future will perform elementwise comparison\n  if key not in cls.all():\n\n...\n\nValueError: Invalid Reduction Key [[21.05224609 20.79420471 34.9659729  ... 48.09233093 68.83874512\n  83.10766602]\n [20.93516541 17.0511322  39.00476074 ... 56.74258423 47.75274658\n  98.57067871]\n [38.18562317 22.70791626 24.37176514 ... 64.9606781  47.65338135\n  67.61506653]\n ...\n [85.76565552 79.45443726 73.64129639 ... 73.66456604 47.06422424\n  49.44664001]\n [87.14616394 82.38183594 77.00856018 ... 66.21652222 71.32862854\n  58.39285278]\n [36.74142456 37.27145386 34.52891541 ... 29.58699036 37.37667847\n  30.25990295]].\n</code></pre>\n\n<p>This is my first question here on Stack Overflow: please let me know if I can make it any clearer!</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 38}]