[{"items": [{"tags": ["tensorflow", "encode", "tensorflow-datasets"], "owner": {"account_id": 10716056, "reputation": 2138, "user_id": 7886651, "user_type": "registered", "accept_rate": 76, "profile_image": "https://i.stack.imgur.com/zfb59.jpg?s=256&g=1", "display_name": "I. A", "link": "https://stackoverflow.com/users/7886651/i-a"}, "is_answered": false, "view_count": 164, "answer_count": 0, "score": 2, "last_activity_date": 1578021051, "creation_date": 1577981929, "last_edit_date": 1578021051, "question_id": 59566561, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/59566561/what-is-the-equivalent-of-ordinalencoder-in-tensorflow", "title": "What is the Equivalent of OrdinalEncoder in tensorflow?", "body": "<p>I have a particular feature in my dataset which contain categorical strings. The values belong to <code>['a', 'ae', 'e', 'i', 'u']</code></p>\n\n<p>However, I would like to map these characters into numbers. Please note that I am using tensorflow dataset.</p>\n\n<p>Here is my sample code:</p>\n\n<pre><code>data_dir = \"C:/Users/user/Documents/vowels/\"\n\n# I have data collected from 13 different subjects. Each time the data is recorded is considered one trial. In total we have 6 trials per subject.\n# In this case, I used the first 5 trials for training and the 6th for testing/validation.\nsubjects_nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]\n\ntrial_nums_train = [1, 2, 3, 4, 5]\ntrial_nums_test = [6]\n\npaths_train = [data_dir + 'Col3/*/*_{}_trail_{}.png'.format(i, j) for i in subjects_nums for j in trial_nums_train]\npaths_test = [data_dir + 'Col3/*/*_{}_trail_{}.png'.format(i, j) for i in subjects_nums for j in trial_nums_test]\n\nlist_ds_train = tf.data.Dataset.list_files(paths_train)\nlist_ds_test = tf.data.Dataset.list_files(paths_test)\n\n# Here in this case, I did the conversion manually, on purpose for now. However, what if I don't know all the categories, or if I have 10s of them. I would like to convert the strings into numbers automatically.\ndef get_label(file_path):\n    # convert the path to a list of path components\n    parts = tf.strings.split(file_path, os.path.sep)\n    # The second to last is the class-directory\n    char = tf.strings.split(parts[-2], \"_\")[1]\n\n    tensor = char\n    if tensor == 'a':\n        return 0\n    elif tensor == 'ae':\n        return 1\n    elif tensor == 'e':\n        return 2\n    elif tensor == 'i':\n        return 3\n    else:\n        return 4\n\ndef decode_img(img):\n    # convert the compressed string to a 3D uint8 tensor\n    img = tf.image.decode_jpeg(img, channels=3)\n    # Use `convert_image_dtype` to convert to floats in the [0,1] range.\n    img = tf.image.convert_image_dtype(img, tf.float32)\n    # resize the image to the desired size.\n    return img\n\n\ndef process_path(file_path):\n    label = get_label(file_path)\n    # load the raw data from the file as a string\n    img = tf.io.read_file(file_path)\n    img = decode_img(img)\n    return img, label\n\n# Use Dataset.map to create a dataset of image, label pairs:\n# Set `num_parallel_calls` so multiple images are loaded/processed in parallel.\nAUTOTUNE = tf.data.experimental.AUTOTUNE\nlabeled_ds_train = list_ds_train.map(process_path, num_parallel_calls=AUTOTUNE)\nlabeled_ds_test = list_ds_test.map(process_path, num_parallel_calls=AUTOTUNE)\n\nlabeled_ds_train = labeled_ds_train.cache().shuffle(buffer_size=1000).batch(32).prefetch(AUTOTUNE)\nlabeled_ds_test = labeled_ds_test.cache().batch(32).prefetch(AUTOTUNE)\n</code></pre>\n\n<p>Then inspecting what the dataset contain:</p>\n\n<pre><code>for image, label in labeled_ds_train.take(1):\n    print(\"Image shape: \", image.numpy().shape)\n    print(\"Label: \", label.numpy())\n</code></pre>\n\n<p>I got: </p>\n\n<pre><code>Image shape:  (32, 130, 267, 3)\nLabel:  [b'ae' b'u' b'a' b'e' b'i' b'ae' b'i' b'e' b'e' b'a' b'i' b'a' b'i' b'a' b'i' b'u' b'u' b'ae' b'e' b'a' b'e' b'ae' b'a' b'i' b'i' b'e' b'ae' b'i' b'i' b'e' b'e' b'i']\n</code></pre>\n\n<p>I would like an easy way to convert the string to numbers, on the fly, or automatically.</p>\n\n<p>How is that possible?</p>\n\n<p>Again, First, I have the root folder named vowels, then I have subfolders named Col3 and Col4. Then each one of them contains subfolders vowel_a, vowel_ae, vowel_e, vowel_i and vowel_u. Then the images are stored in the latter subfolders. Images names are as follows: subject_{}<em>trial</em>{}.png; where the first holder reflects the subject number and the second one reflects the subject trial.</p>\n\n<p>Any help is much appreciated</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 61}]