[{"items": [{"tags": ["python", "tensorflow"], "owner": {"account_id": 13658258, "reputation": 179, "user_id": 9854132, "user_type": "registered", "profile_image": "https://graph.facebook.com/10209322581445667/picture?type=large", "display_name": "Theodosis Siomos", "link": "https://stackoverflow.com/users/9854132/theodosis-siomos"}, "is_answered": true, "view_count": 961, "accepted_answer_id": 51580225, "answer_count": 1, "score": 1, "last_activity_date": 1532866427, "creation_date": 1532863764, "question_id": 51579868, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/51579868/compute-the-mean-for-each-tensors-row-in-tensorflow", "title": "Compute the mean for each tensor&#39;s row in TensorFlow", "body": "<p>I am new in tensorflow and I want to compute the mean from each row from a tensor. Tensorflow has the tf.reduce_mean operation in order to do that. The problem is that when a row has a nan value the mean for this row is nan also. Except from that, I want to implement this on my own in order to understand better the philosophy tensorflow has. So how could I implement this manually? The code I wrote:</p>\n\n<pre><code>import tensorflow as tf\nimport numpy as np\n\nratings = np.array([[7, 6, 7, 4, 5, 4], [6, 7, np.NaN, 4, 3, 4], [np.NaN, 3, 3, 1, 1, np.NaN],\n                   [1, 2, 2, 3, 3, 4], [1, np.NaN, 1, 2, 3, 3]], dtype = np.float16)\n\ntRatings = tf.convert_to_tensor(ratings, dtype = np.float16)\n\nmeans = tf.get_variable(\"means\", shape=(5), dtype=tf.float16)\n\n\nwith tf.Session() as sess:\n    sess.run(tf.global_variables_initializer())\n    mean = tf.reduce_mean(tRatings, axis=1)\n    print(sess.run(mean))\n</code></pre>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 76}]