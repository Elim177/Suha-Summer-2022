[{"items": [{"tags": ["tensorflow"], "owner": {"account_id": 438612, "reputation": 22254, "user_id": 826983, "user_type": "registered", "accept_rate": 69, "profile_image": "https://i.stack.imgur.com/B9PSD.jpg?s=256&g=1", "display_name": "Stefan Falk", "link": "https://stackoverflow.com/users/826983/stefan-falk"}, "is_answered": true, "view_count": 6400, "answer_count": 5, "score": 1, "last_activity_date": 1537436621, "creation_date": 1484602562, "last_edit_date": 1484607227, "question_id": 41685366, "content_license": "CC BY-SA 3.0", "link": "https://stackoverflow.com/questions/41685366/getting-undefined-symbol-cudnncreate", "title": "Getting &#39;undefined symbol: cudnnCreate&#39;", "body": "<p>I am trying to run a quite simple Tensorflow graph, but as I run the script I am getting the following output:</p>\n\n<pre><code>/usr/bin/python3.5 /media/Data/workspaces/python/tf_playground/play/cnn.py\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:119] Couldn't open CUDA library libcudnn.so. LD_LIBRARY_PATH: /opt/pycharm/pycharm-community-2016.3.2/bin:\nI tensorflow/stream_executor/cuda/cuda_dnn.cc:3459] Unable to load cuDNN DSO\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:937] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties: \nname: GeForce GTX 1070\nmajor: 6 minor: 1 memoryClockRate (GHz) 1.683\npciBusID 0000:01:00.0\nTotal memory: 7.92GiB\nFree memory: 222.31MiB\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0 \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -&gt; (device: 0, name: GeForce GTX 1070, pci bus id: 0000:01:00.0)\nF tensorflow/stream_executor/cuda/cuda_dnn.cc:221] Check failed: s.ok() could not find cudnnCreate in cudnn DSO; dlerror: /usr/local/lib/python3.5/dist-packages/tensorflow/python/_pywrap_tensorflow.so: undefined symbol: cudnnCreate\n\nProcess finished with exit code 134 (interrupted by signal 6: SIGABRT)\n</code></pre>\n\n<p>Any idea what the problem is here? </p>\n\n<p>The strange thing is that I am able to run the <a href=\"https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/tutorials/mnist/mnist_softmax.py\" rel=\"nofollow noreferrer\">MNIST softmax example</a> without any errors.</p>\n\n<p>This is the script which I am getting the error from:</p>\n\n<pre class=\"lang-py prettyprint-override\"><code>import json\n\nimport requests\nimport tensorflow as tf\nimport numpy as np\n\n\nclass MyCNN(object):\n\n    def __init__(self, sequence_length, num_classes, embedding_size, filter_sizes):\n\n        self.input_x = tf.placeholder(tf.float32, [sequence_length, embedding_size], name=\"input_x\")\n        self.input_y = tf.placeholder(tf.float32, [None, num_classes], name=\"input_y\")\n        self.dropout_keep_prob = tf.placeholder(tf.float32, name=\"dropout_keep_prob\")\n\n        input_X = tf.reshape(self.input_x, [1, sequence_length, embedding_size, 1])\n\n        pooled_outputs = []\n        num_filters = len(filter_sizes)\n\n        for i, filter_size in enumerate(filter_sizes):\n\n            filter_shape = [filter_size, embedding_size, 1, num_filters]\n\n            F = tf.Variable(tf.truncated_normal(filter_shape, stddev=0.1), name=\"F\")\n            b = tf.Variable(tf.constant(0.1, shape=[num_filters]), name=\"b\")\n\n            conv = tf.nn.conv2d(\n                input_X,\n                F,\n                strides=[1, 1, 1, 1],\n                padding=\"VALID\",\n                name=\"conv\")\n\n            # Apply nonlinearity\n            h = tf.nn.relu(tf.nn.bias_add(conv, b), name=\"relu\")\n\n            # Maxpooling over the outputs\n            pooled = tf.nn.max_pool(\n                h,\n                ksize=[1, sequence_length - filter_size + 1, 1, 1],\n                strides=[1, 1, 1, 1],\n                padding='VALID',\n                name=\"pool\")\n\n            pooled_outputs.append(pooled)\n\n        self.h_pool = tf.concat(3, pooled_outputs)\n\nif __name__ == \"__main__\":\n\n    headers = {\n        \"Content-Type\": \"application/json\"\n    }\n    request = requests.post(\"http://localhost:8080/ema-server/w2v/getWordVectors\",\n                            data=json.dumps([\"I\", \"really\", \"love\", \"to\", \"eat\", \"a\", \"lot\", \"of\", \"sushi!\"]),\n                            headers=headers)\n\n    words = json.loads(request.text)\n\n    X = []\n    for word in words:\n        if word is None: X.append([0] * 300); continue\n        X.append(word)\n\n    while len(X) &lt; 50: X.append([0] * 300)\n\n    X = np.asmatrix(X)\n    X = np.reshape(X, [1, 50, 300, 1])\n\n    cnn = MyCNN(50, 2, 300, [3])\n\n    sess = tf.Session()\n\n    sess.run(tf.global_variables_initializer())\n    sess.run(cnn.h_pool, feed_dict={cnn.input_x: X})\n\n    print(\"All done.\")\n</code></pre>\n\n<hr>\n\n<p><strong>Update:</strong> I followed <a href=\"https://alliseesolutions.wordpress.com/2016/09/08/install-gpu-tensorflow-from-sources-w-ubuntu-16-04-and-cuda-8-0-rc/\" rel=\"nofollow noreferrer\">these instructions</a> to install CudNN but I am still getting the same error ..</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 110}]