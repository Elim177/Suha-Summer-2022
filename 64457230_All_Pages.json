[{"items": [{"tags": ["python", "tensorflow", "keras"], "owner": {"account_id": 19785975, "reputation": 17, "user_id": 14489928, "user_type": "registered", "profile_image": "https://www.gravatar.com/avatar/4d5b12d7544e1f4240beee0390345a93?s=256&d=identicon&r=PG&f=1", "display_name": "Chandra", "link": "https://stackoverflow.com/users/14489928/chandra"}, "is_answered": true, "view_count": 126, "accepted_answer_id": 64462220, "answer_count": 1, "score": 0, "last_activity_date": 1603875583, "creation_date": 1603258137, "last_edit_date": 1603875583, "question_id": 64457230, "content_license": "CC BY-SA 4.0", "link": "https://stackoverflow.com/questions/64457230/how-do-we-create-a-reusable-block-that-share-architecture-in-a-single-model-but", "title": "How do we create a reusable block that share architecture in a single model but learn different set of weight in the single model in Keras?", "body": "<p>I am using tensorflow.keras and want to know if it is possible to create reusable blocks of inbuilt Keras layers. For example, I would like to repeatedly use the same set of layers (that able to learn the different weights) at a different position in a model. I would like to use the following block at different times in my model.</p>\n<pre><code>keep_prob_=0.5\ninput_features=Input(shape=(29, 1664))\nImortant_features= SelfAttention(activation='tanh',\n      kernel_regularizer=tf.keras.regularizers.l2(0.), kernel_initializer='glorot_uniform' \n     (input_features)\n\ndrop3=tf.keras.layers.Dropout(keep_prob_)(Imortant_features)\nLayer_norm_feat=tf.keras.layers.Add()([input_features, drop3])\nLayer_norm=tf.keras.layers.LayerNormalization(axis=-1)(Layer_norm_feat)\nff_out=tf.keras.layers.Dense(Layer_norm.shape[2], activation='relu')(Layer_norm)\nff_out=tf.keras.layers.Dense(Layer_norm.shape[2])(ff_out)\ndrop4=tf.keras.layers.Dropout(keep_prob_)(ff_out)\nLayer_norm_input=tf.keras.layers.Add()([Layer_norm, drop4])\nAttention_block_out=tf.keras.layers.LayerNormalization(axis=-1)(Layer_norm_input)\nintraEpoch_att_block=tf.keras.Model(inputs=input_features, outputs=Attention_block_out)\n</code></pre>\n<p>I have read about creating custom layers in Keras but I did not find the documentation to be clear enough. I want to reuse the sub-model which able to learn the different set of weight in a single functional API model in tensorflow.keras.</p>\n"}], "has_more": false, "quota_max": 300, "quota_remaining": 282}]